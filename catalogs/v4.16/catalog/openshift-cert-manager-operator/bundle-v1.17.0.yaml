---
image: registry.stage.redhat.io/cert-manager/cert-manager-operator-bundle@sha256:e6277b0aa2ddc7d5d6f68d8c7844c5e69e3003544d942c39cfb0c8e92e64cf48
name: cert-manager-operator.v1.17.0
package: openshift-cert-manager-operator
properties:
- type: olm.gvk
  value:
    group: acme.cert-manager.io
    kind: Challenge
    version: v1
- type: olm.gvk
  value:
    group: acme.cert-manager.io
    kind: Order
    version: v1
- type: olm.gvk
  value:
    group: cert-manager.io
    kind: Certificate
    version: v1
- type: olm.gvk
  value:
    group: cert-manager.io
    kind: CertificateRequest
    version: v1
- type: olm.gvk
  value:
    group: cert-manager.io
    kind: ClusterIssuer
    version: v1
- type: olm.gvk
  value:
    group: cert-manager.io
    kind: Issuer
    version: v1
- type: olm.gvk
  value:
    group: operator.openshift.io
    kind: CertManager
    version: v1alpha1
- type: olm.gvk
  value:
    group: operator.openshift.io
    kind: IstioCSR
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-cert-manager-operator
    version: 1.17.0
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY2VydC1tYW5hZ2VyLmlvL2luamVjdC1jYS1mcm9tLXNlY3JldCI6ImNlcnQtbWFuYWdlci9jZXJ0LW1hbmFnZXItd2ViaG9vay1jYSIsImhlbG0uc2gvcmVzb3VyY2UtcG9saWN5Ijoia2VlcCJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibGFiZWxzIjp7ImFwcCI6ImNlcnQtbWFuYWdlciIsImFwcC5rdWJlcm5ldGVzLmlvL2NvbXBvbmVudCI6ImNyZHMiLCJhcHAua3ViZXJuZXRlcy5pby9pbnN0YW5jZSI6ImNlcnQtbWFuYWdlciIsImFwcC5rdWJlcm5ldGVzLmlvL25hbWUiOiJjZXJ0LW1hbmFnZXIiLCJhcHAua3ViZXJuZXRlcy5pby92ZXJzaW9uIjoidjEuMTcuNCJ9LCJuYW1lIjoiaXNzdWVycy5jZXJ0LW1hbmFnZXIuaW8ifSwic3BlYyI6eyJncm91cCI6ImNlcnQtbWFuYWdlci5pbyIsIm5hbWVzIjp7ImNhdGVnb3JpZXMiOlsiY2VydC1tYW5hZ2VyIl0sImtpbmQiOiJJc3N1ZXIiLCJsaXN0S2luZCI6Iklzc3Vlckxpc3QiLCJwbHVyYWwiOiJpc3N1ZXJzIiwic2luZ3VsYXIiOiJpc3N1ZXIifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3sianNvblBhdGgiOiIuc3RhdHVzLmNvbmRpdGlvbnNbPyhALnR5cGU9PVwiUmVhZHlcIildLnN0YXR1cyIsIm5hbWUiOiJSZWFkeSIsInR5cGUiOiJzdHJpbmcifSx7Impzb25QYXRoIjoiLnN0YXR1cy5jb25kaXRpb25zWz8oQC50eXBlPT1cIlJlYWR5XCIpXS5tZXNzYWdlIiwibmFtZSI6IlN0YXR1cyIsInByaW9yaXR5IjoxLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6IkNyZWF0aW9uVGltZXN0YW1wIGlzIGEgdGltZXN0YW1wIHJlcHJlc2VudGluZyB0aGUgc2VydmVyIHRpbWUgd2hlbiB0aGlzIG9iamVjdCB3YXMgY3JlYXRlZC4gSXQgaXMgbm90IGd1YXJhbnRlZWQgdG8gYmUgc2V0IGluIGhhcHBlbnMtYmVmb3JlIG9yZGVyIGFjcm9zcyBzZXBhcmF0ZSBvcGVyYXRpb25zLiBDbGllbnRzIG1heSBub3Qgc2V0IHRoaXMgdmFsdWUuIEl0IGlzIHJlcHJlc2VudGVkIGluIFJGQzMzMzkgZm9ybSBhbmQgaXMgaW4gVVRDLiIsImpzb25QYXRoIjoiLm1ldGFkYXRhLmNyZWF0aW9uVGltZXN0YW1wIiwibmFtZSI6IkFnZSIsInR5cGUiOiJkYXRlIn1dLCJuYW1lIjoidjEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiQW4gSXNzdWVyIHJlcHJlc2VudHMgYSBjZXJ0aWZpY2F0ZSBpc3N1aW5nIGF1dGhvcml0eSB3aGljaCBjYW4gYmVcbnJlZmVyZW5jZWQgYXMgcGFydCBvZiBgaXNzdWVyUmVmYCBmaWVsZHMuXG5JdCBpcyBzY29wZWQgdG8gYSBzaW5nbGUgbmFtZXNwYWNlIGFuZCBjYW4gdGhlcmVmb3JlIG9ubHkgYmUgcmVmZXJlbmNlZCBieVxucmVzb3VyY2VzIHdpdGhpbiB0aGUgc2FtZSBuYW1lc3BhY2UuIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LlxuU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kXG5tYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuXG5Nb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuXG5TZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by5cbkNhbm5vdCBiZSB1cGRhdGVkLlxuSW4gQ2FtZWxDYXNlLlxuTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiRGVzaXJlZCBzdGF0ZSBvZiB0aGUgSXNzdWVyIHJlc291cmNlLiIsInByb3BlcnRpZXMiOnsiYWNtZSI6eyJkZXNjcmlwdGlvbiI6IkFDTUUgY29uZmlndXJlcyB0aGlzIGlzc3VlciB0byBjb21tdW5pY2F0ZSB3aXRoIGEgUkZDODU1NSAoQUNNRSkgc2VydmVyXG50byBvYnRhaW4gc2lnbmVkIHg1MDkgY2VydGlmaWNhdGVzLiIsInByb3BlcnRpZXMiOnsiY2FCdW5kbGUiOnsiZGVzY3JpcHRpb24iOiJCYXNlNjQtZW5jb2RlZCBidW5kbGUgb2YgUEVNIENBcyB3aGljaCBjYW4gYmUgdXNlZCB0byB2YWxpZGF0ZSB0aGUgY2VydGlmaWNhdGVcbmNoYWluIHByZXNlbnRlZCBieSB0aGUgQUNNRSBzZXJ2ZXIuXG5NdXR1YWxseSBleGNsdXNpdmUgd2l0aCBTa2lwVExTVmVyaWZ5OyBwcmVmZXIgdXNpbmcgQ0FCdW5kbGUgdG8gcHJldmVudCB2YXJpb3VzXG5raW5kcyBvZiBzZWN1cml0eSB2dWxuZXJhYmlsaXRpZXMuXG5JZiBDQUJ1bmRsZSBhbmQgU2tpcFRMU1ZlcmlmeSBhcmUgdW5zZXQsIHRoZSBzeXN0ZW0gY2VydGlmaWNhdGUgYnVuZGxlIGluc2lkZVxudGhlIGNvbnRhaW5lciBpcyB1c2VkIHRvIHZhbGlkYXRlIHRoZSBUTFMgY29ubmVjdGlvbi4iLCJmb3JtYXQiOiJieXRlIiwidHlwZSI6InN0cmluZyJ9LCJkaXNhYmxlQWNjb3VudEtleUdlbmVyYXRpb24iOnsiZGVzY3JpcHRpb24iOiJFbmFibGVzIG9yIGRpc2FibGVzIGdlbmVyYXRpbmcgYSBuZXcgQUNNRSBhY2NvdW50IGtleS5cbklmIHRydWUsIHRoZSBJc3N1ZXIgcmVzb3VyY2Ugd2lsbCAqbm90KiByZXF1ZXN0IGEgbmV3IGFjY291bnQgYnV0IHdpbGwgZXhwZWN0XG50aGUgYWNjb3VudCBrZXkgdG8gYmUgc3VwcGxpZWQgdmlhIGFuIGV4aXN0aW5nIHNlY3JldC5cbklmIGZhbHNlLCB0aGUgY2VydC1tYW5hZ2VyIHN5c3RlbSB3aWxsIGdlbmVyYXRlIGEgbmV3IEFDTUUgYWNjb3VudCBrZXlcbmZvciB0aGUgSXNzdWVyLlxuRGVmYXVsdHMgdG8gZmFsc2UuIiwidHlwZSI6ImJvb2xlYW4ifSwiZW1haWwiOnsiZGVzY3JpcHRpb24iOiJFbWFpbCBpcyB0aGUgZW1haWwgYWRkcmVzcyB0byBiZSBhc3NvY2lhdGVkIHdpdGggdGhlIEFDTUUgYWNjb3VudC5cblRoaXMgZmllbGQgaXMgb3B0aW9uYWwsIGJ1dCBpdCBpcyBzdHJvbmdseSByZWNvbW1lbmRlZCB0byBiZSBzZXQuXG5JdCB3aWxsIGJlIHVzZWQgdG8gY29udGFjdCB5b3UgaW4gY2FzZSBvZiBpc3N1ZXMgd2l0aCB5b3VyIGFjY291bnQgb3JcbmNlcnRpZmljYXRlcywgaW5jbHVkaW5nIGV4cGlyeSBub3RpZmljYXRpb24gZW1haWxzLlxuVGhpcyBmaWVsZCBtYXkgYmUgdXBkYXRlZCBhZnRlciB0aGUgYWNjb3VudCBpcyBpbml0aWFsbHkgcmVnaXN0ZXJlZC4iLCJ0eXBlIjoic3RyaW5nIn0sImVuYWJsZUR1cmF0aW9uRmVhdHVyZSI6eyJkZXNjcmlwdGlvbiI6IkVuYWJsZXMgcmVxdWVzdGluZyBhIE5vdCBBZnRlciBkYXRlIG9uIGNlcnRpZmljYXRlcyB0aGF0IG1hdGNoZXMgdGhlXG5kdXJhdGlvbiBvZiB0aGUgY2VydGlmaWNhdGUuIFRoaXMgaXMgbm90IHN1cHBvcnRlZCBieSBhbGwgQUNNRSBzZXJ2ZXJzXG5saWtlIExldCdzIEVuY3J5cHQuIElmIHNldCB0byB0cnVlIHdoZW4gdGhlIEFDTUUgc2VydmVyIGRvZXMgbm90IHN1cHBvcnRcbml0LCBpdCB3aWxsIGNyZWF0ZSBhbiBlcnJvciBvbiB0aGUgT3JkZXIuXG5EZWZhdWx0cyB0byBmYWxzZS4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJleHRlcm5hbEFjY291bnRCaW5kaW5nIjp7ImRlc2NyaXB0aW9uIjoiRXh0ZXJuYWxBY2NvdW50QmluZGluZyBpcyBhIHJlZmVyZW5jZSB0byBhIENBIGV4dGVybmFsIGFjY291bnQgb2YgdGhlIEFDTUVcbnNlcnZlci5cbklmIHNldCwgdXBvbiByZWdpc3RyYXRpb24gY2VydC1tYW5hZ2VyIHdpbGwgYXR0ZW1wdCB0byBhc3NvY2lhdGUgdGhlIGdpdmVuXG5leHRlcm5hbCBhY2NvdW50IGNyZWRlbnRpYWxzIHdpdGggdGhlIHJlZ2lzdGVyZWQgQUNNRSBhY2NvdW50LiIsInByb3BlcnRpZXMiOnsia2V5QWxnb3JpdGhtIjp7ImRlc2NyaXB0aW9uIjoiRGVwcmVjYXRlZDoga2V5QWxnb3JpdGhtIGZpZWxkIGV4aXN0cyBmb3IgaGlzdG9yaWNhbCBjb21wYXRpYmlsaXR5XG5yZWFzb25zIGFuZCBzaG91bGQgbm90IGJlIHVzZWQuIFRoZSBhbGdvcml0aG0gaXMgbm93IGhhcmRjb2RlZCB0byBIUzI1NlxuaW4gZ29sYW5nL3gvY3J5cHRvL2FjbWUuIiwiZW51bSI6WyJIUzI1NiIsIkhTMzg0IiwiSFM1MTIiXSwidHlwZSI6InN0cmluZyJ9LCJrZXlJRCI6eyJkZXNjcmlwdGlvbiI6ImtleUlEIGlzIHRoZSBJRCBvZiB0aGUgQ0Ega2V5IHRoYXQgdGhlIEV4dGVybmFsIEFjY291bnQgaXMgYm91bmQgdG8uIiwidHlwZSI6InN0cmluZyJ9LCJrZXlTZWNyZXRSZWYiOnsiZGVzY3JpcHRpb24iOiJrZXlTZWNyZXRSZWYgaXMgYSBTZWNyZXQgS2V5IFNlbGVjdG9yIHJlZmVyZW5jaW5nIGEgZGF0YSBpdGVtIGluIGEgS3ViZXJuZXRlc1xuU2VjcmV0IHdoaWNoIGhvbGRzIHRoZSBzeW1tZXRyaWMgTUFDIGtleSBvZiB0aGUgRXh0ZXJuYWwgQWNjb3VudCBCaW5kaW5nLlxuVGhlIGBrZXlgIGlzIHRoZSBpbmRleCBzdHJpbmcgdGhhdCBpcyBwYWlyZWQgd2l0aCB0aGUga2V5IGRhdGEgaW4gdGhlXG5TZWNyZXQgYW5kIHNob3VsZCBub3QgYmUgY29uZnVzZWQgd2l0aCB0aGUga2V5IGRhdGEgaXRzZWxmLCBvciBpbmRlZWQgd2l0aFxudGhlIEV4dGVybmFsIEFjY291bnQgQmluZGluZyBrZXlJRCBhYm92ZS5cblRoZSBzZWNyZXQga2V5IHN0b3JlZCBpbiB0aGUgU2VjcmV0ICoqbXVzdCoqIGJlIHVuLXBhZGRlZCwgYmFzZTY0IFVSTFxuZW5jb2RlZCBkYXRhLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoiVGhlIGtleSBvZiB0aGUgZW50cnkgaW4gdGhlIFNlY3JldCByZXNvdXJjZSdzIGBkYXRhYCBmaWVsZCB0byBiZSB1c2VkLlxuU29tZSBpbnN0YW5jZXMgb2YgdGhpcyBmaWVsZCBtYXkgYmUgZGVmYXVsdGVkLCBpbiBvdGhlcnMgaXQgbWF5IGJlXG5yZXF1aXJlZC4iLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSByZXNvdXJjZSBiZWluZyByZWZlcnJlZCB0by5cbk1vcmUgaW5mbzogaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvb3ZlcnZpZXcvd29ya2luZy13aXRoLW9iamVjdHMvbmFtZXMvI25hbWVzIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibmFtZSJdLCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJrZXlJRCIsImtleVNlY3JldFJlZiJdLCJ0eXBlIjoib2JqZWN0In0sInByZWZlcnJlZENoYWluIjp7ImRlc2NyaXB0aW9uIjoiUHJlZmVycmVkQ2hhaW4gaXMgdGhlIGNoYWluIHRvIHVzZSBpZiB0aGUgQUNNRSBzZXJ2ZXIgb3V0cHV0cyBtdWx0aXBsZS5cblByZWZlcnJlZENoYWluIGlzIG5vIGd1YXJhbnRlZSB0aGF0IHRoaXMgb25lIGdldHMgZGVsaXZlcmVkIGJ5IHRoZSBBQ01FXG5lbmRwb2ludC5cbkZvciBleGFtcGxlLCBmb3IgTGV0J3MgRW5jcnlwdCdzIERTVCBjcm9zc3NpZ24geW91IHdvdWxkIHVzZTpcblwiRFNUIFJvb3QgQ0EgWDNcIiBvciBcIklTUkcgUm9vdCBYMVwiIGZvciB0aGUgbmV3ZXIgTGV0J3MgRW5jcnlwdCByb290IENBLlxuVGhpcyB2YWx1ZSBwaWNrcyB0aGUgZmlyc3QgY2VydGlmaWNhdGUgYnVuZGxlIGluIHRoZSBjb21iaW5lZCBzZXQgb2ZcbkFDTUUgZGVmYXVsdCBhbmQgYWx0ZXJuYXRpdmUgY2hhaW5zIHRoYXQgaGFzIGEgcm9vdC1tb3N0IGNlcnRpZmljYXRlIHdpdGhcbnRoaXMgdmFsdWUgYXMgaXRzIGlzc3VlcidzIGNvbW1vbm5hbWUuIiwibWF4TGVuZ3RoIjo2NCwidHlwZSI6InN0cmluZyJ9LCJwcml2YXRlS2V5U2VjcmV0UmVmIjp7ImRlc2NyaXB0aW9uIjoiUHJpdmF0ZUtleSBpcyB0aGUgbmFtZSBvZiBhIEt1YmVybmV0ZXMgU2VjcmV0IHJlc291cmNlIHRoYXQgd2lsbCBiZSB1c2VkIHRvXG5zdG9yZSB0aGUgYXV0b21hdGljYWxseSBnZW5lcmF0ZWQgQUNNRSBhY2NvdW50IHByaXZhdGUga2V5LlxuT3B0aW9uYWxseSwgYSBga2V5YCBtYXkgYmUgc3BlY2lmaWVkIHRvIHNlbGVjdCBhIHNwZWNpZmljIGVudHJ5IHdpdGhpblxudGhlIG5hbWVkIFNlY3JldCByZXNvdXJjZS5cbklmIGBrZXlgIGlzIG5vdCBzcGVjaWZpZWQsIGEgZGVmYXVsdCBvZiBgdGxzLmtleWAgd2lsbCBiZSB1c2VkLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoiVGhlIGtleSBvZiB0aGUgZW50cnkgaW4gdGhlIFNlY3JldCByZXNvdXJjZSdzIGBkYXRhYCBmaWVsZCB0byBiZSB1c2VkLlxuU29tZSBpbnN0YW5jZXMgb2YgdGhpcyBmaWVsZCBtYXkgYmUgZGVmYXVsdGVkLCBpbiBvdGhlcnMgaXQgbWF5IGJlXG5yZXF1aXJlZC4iLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSByZXNvdXJjZSBiZWluZyByZWZlcnJlZCB0by5cbk1vcmUgaW5mbzogaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvb3ZlcnZpZXcvd29ya2luZy13aXRoLW9iamVjdHMvbmFtZXMvI25hbWVzIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInNlcnZlciI6eyJkZXNjcmlwdGlvbiI6IlNlcnZlciBpcyB0aGUgVVJMIHVzZWQgdG8gYWNjZXNzIHRoZSBBQ01FIHNlcnZlcidzICdkaXJlY3RvcnknIGVuZHBvaW50LlxuRm9yIGV4YW1wbGUsIGZvciBMZXQncyBFbmNyeXB0J3Mgc3RhZ2luZyBlbmRwb2ludCwgeW91IHdvdWxkIHVzZTpcblwiaHR0cHM6Ly9hY21lLXN0YWdpbmctdjAyLmFwaS5sZXRzZW5jcnlwdC5vcmcvZGlyZWN0b3J5XCIuXG5Pbmx5IEFDTUUgdjIgZW5kcG9pbnRzIChpLmUuIFJGQyA4NTU1KSBhcmUgc3VwcG9ydGVkLiIsInR5cGUiOiJzdHJpbmcifSwic2tpcFRMU1ZlcmlmeSI6eyJkZXNjcmlwdGlvbiI6IklOU0VDVVJFOiBFbmFibGVzIG9yIGRpc2FibGVzIHZhbGlkYXRpb24gb2YgdGhlIEFDTUUgc2VydmVyIFRMUyBjZXJ0aWZpY2F0ZS5cbklmIHRydWUsIHJlcXVlc3RzIHRvIHRoZSBBQ01FIHNlcnZlciB3aWxsIG5vdCBoYXZlIHRoZSBUTFMgY2VydGlmaWNhdGUgY2hhaW5cbnZhbGlkYXRlZC5cbk11dHVhbGx5IGV4Y2x1c2l2ZSB3aXRoIENBQnVuZGxlOyBwcmVmZXIgdXNpbmcgQ0FCdW5kbGUgdG8gcHJldmVudCB2YXJpb3VzXG5raW5kcyBvZiBzZWN1cml0eSB2dWxuZXJhYmlsaXRpZXMuXG5Pbmx5IGVuYWJsZSB0aGlzIG9wdGlvbiBpbiBkZXZlbG9wbWVudCBlbnZpcm9ubWVudHMuXG5JZiBDQUJ1bmRsZSBhbmQgU2tpcFRMU1ZlcmlmeSBhcmUgdW5zZXQsIHRoZSBzeXN0ZW0gY2VydGlmaWNhdGUgYnVuZGxlIGluc2lkZVxudGhlIGNvbnRhaW5lciBpcyB1c2VkIHRvIHZhbGlkYXRlIHRoZSBUTFMgY29ubmVjdGlvbi5cbkRlZmF1bHRzIHRvIGZhbHNlLiIsInR5cGUiOiJib29sZWFuIn0sInNvbHZlcnMiOnsiZGVzY3JpcHRpb24iOiJTb2x2ZXJzIGlzIGEgbGlzdCBvZiBjaGFsbGVuZ2Ugc29sdmVycyB0aGF0IHdpbGwgYmUgdXNlZCB0byBzb2x2ZVxuQUNNRSBjaGFsbGVuZ2VzIGZvciB0aGUgbWF0Y2hpbmcgZG9tYWlucy5cblNvbHZlciBjb25maWd1cmF0aW9ucyBtdXN0IGJlIHByb3ZpZGVkIGluIG9yZGVyIHRvIG9idGFpbiBjZXJ0aWZpY2F0ZXNcbmZyb20gYW4gQUNNRSBzZXJ2ZXIuXG5Gb3IgbW9yZSBpbmZvcm1hdGlvbiwgc2VlOiBodHRwczovL2NlcnQtbWFuYWdlci5pby9kb2NzL2NvbmZpZ3VyYXRpb24vYWNtZS8iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkFuIEFDTUVDaGFsbGVuZ2VTb2x2ZXIgZGVzY3JpYmVzIGhvdyB0byBzb2x2ZSBBQ01FIGNoYWxsZW5nZXMgZm9yIHRoZSBpc3N1ZXIgaXQgaXMgcGFydCBvZi5cbkEgc2VsZWN0b3IgbWF5IGJlIHByb3ZpZGVkIHRvIHVzZSBkaWZmZXJlbnQgc29sdmluZyBzdHJhdGVnaWVzIGZvciBkaWZmZXJlbnQgRE5TIG5hbWVzLlxuT25seSBvbmUgb2YgSFRUUDAxIG9yIEROUzAxIG11c3QgYmUgcHJvdmlkZWQuIiwicHJvcGVydGllcyI6eyJkbnMwMSI6eyJkZXNjcmlwdGlvbiI6IkNvbmZpZ3VyZXMgY2VydC1tYW5hZ2VyIHRvIGF0dGVtcHQgdG8gY29tcGxldGUgYXV0aG9yaXphdGlvbnMgYnlcbnBlcmZvcm1pbmcgdGhlIEROUzAxIGNoYWxsZW5nZSBmbG93LiIsInByb3BlcnRpZXMiOnsiYWNtZUROUyI6eyJkZXNjcmlwdGlvbiI6IlVzZSB0aGUgJ0FDTUUgRE5TJyAoaHR0cHM6Ly9naXRodWIuY29tL2pvb2hvaS9hY21lLWRucykgQVBJIHRvIG1hbmFnZVxuRE5TMDEgY2hhbGxlbmdlIHJlY29yZHMuIiwicHJvcGVydGllcyI6eyJhY2NvdW50U2VjcmV0UmVmIjp7ImRlc2NyaXB0aW9uIjoiQSByZWZlcmVuY2UgdG8gYSBzcGVjaWZpYyAna2V5JyB3aXRoaW4gYSBTZWNyZXQgcmVzb3VyY2UuXG5JbiBzb21lIGluc3RhbmNlcywgYGtleWAgaXMgYSByZXF1aXJlZCBmaWVsZC4iLCJwcm9wZXJ0aWVzIjp7ImtleSI6eyJkZXNjcmlwdGlvbiI6IlRoZSBrZXkgb2YgdGhlIGVudHJ5IGluIHRoZSBTZWNyZXQgcmVzb3VyY2UncyBgZGF0YWAgZmllbGQgdG8gYmUgdXNlZC5cblNvbWUgaW5zdGFuY2VzIG9mIHRoaXMgZmllbGQgbWF5IGJlIGRlZmF1bHRlZCwgaW4gb3RoZXJzIGl0IG1heSBiZVxucmVxdWlyZWQuIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgcmVzb3VyY2UgYmVpbmcgcmVmZXJyZWQgdG8uXG5Nb3JlIGluZm86IGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL2NvbmNlcHRzL292ZXJ2aWV3L3dvcmtpbmctd2l0aC1vYmplY3RzL25hbWVzLyNuYW1lcyIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbIm5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJob3N0Ijp7InR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImFjY291bnRTZWNyZXRSZWYiLCJob3N0Il0sInR5cGUiOiJvYmplY3QifSwiYWthbWFpIjp7ImRlc2NyaXB0aW9uIjoiVXNlIHRoZSBBa2FtYWkgRE5TIHpvbmUgbWFuYWdlbWVudCBBUEkgdG8gbWFuYWdlIEROUzAxIGNoYWxsZW5nZSByZWNvcmRzLiIsInByb3BlcnRpZXMiOnsiYWNjZXNzVG9rZW5TZWNyZXRSZWYiOnsiZGVzY3JpcHRpb24iOiJBIHJlZmVyZW5jZSB0byBhIHNwZWNpZmljICdrZXknIHdpdGhpbiBhIFNlY3JldCByZXNvdXJjZS5cbkluIHNvbWUgaW5zdGFuY2VzLCBga2V5YCBpcyBhIHJlcXVpcmVkIGZpZWxkLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoiVGhlIGtleSBvZiB0aGUgZW50cnkgaW4gdGhlIFNlY3JldCByZXNvdXJjZSdzIGBkYXRhYCBmaWVsZCB0byBiZSB1c2VkLlxuU29tZSBpbnN0YW5jZXMgb2YgdGhpcyBmaWVsZCBtYXkgYmUgZGVmYXVsdGVkLCBpbiBvdGhlcnMgaXQgbWF5IGJlXG5yZXF1aXJlZC4iLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSByZXNvdXJjZSBiZWluZyByZWZlcnJlZCB0by5cbk1vcmUgaW5mbzogaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvb3ZlcnZpZXcvd29ya2luZy13aXRoLW9iamVjdHMvbmFtZXMvI25hbWVzIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sImNsaWVudFNlY3JldFNlY3JldFJlZiI6eyJkZXNjcmlwdGlvbiI6IkEgcmVmZXJlbmNlIHRvIGEgc3BlY2lmaWMgJ2tleScgd2l0aGluIGEgU2VjcmV0IHJlc291cmNlLlxuSW4gc29tZSBpbnN0YW5jZXMsIGBrZXlgIGlzIGEgcmVxdWlyZWQgZmllbGQuIiwicHJvcGVydGllcyI6eyJrZXkiOnsiZGVzY3JpcHRpb24iOiJUaGUga2V5IG9mIHRoZSBlbnRyeSBpbiB0aGUgU2VjcmV0IHJlc291cmNlJ3MgYGRhdGFgIGZpZWxkIHRvIGJlIHVzZWQuXG5Tb21lIGluc3RhbmNlcyBvZiB0aGlzIGZpZWxkIG1heSBiZSBkZWZhdWx0ZWQsIGluIG90aGVycyBpdCBtYXkgYmVcbnJlcXVpcmVkLiIsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIHJlc291cmNlIGJlaW5nIHJlZmVycmVkIHRvLlxuTW9yZSBpbmZvOiBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9vdmVydmlldy93b3JraW5nLXdpdGgtb2JqZWN0cy9uYW1lcy8jbmFtZXMiLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJuYW1lIl0sInR5cGUiOiJvYmplY3QifSwiY2xpZW50VG9rZW5TZWNyZXRSZWYiOnsiZGVzY3JpcHRpb24iOiJBIHJlZmVyZW5jZSB0byBhIHNwZWNpZmljICdrZXknIHdpdGhpbiBhIFNlY3JldCByZXNvdXJjZS5cbkluIHNvbWUgaW5zdGFuY2VzLCBga2V5YCBpcyBhIHJlcXVpcmVkIGZpZWxkLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoiVGhlIGtleSBvZiB0aGUgZW50cnkgaW4gdGhlIFNlY3JldCByZXNvdXJjZSdzIGBkYXRhYCBmaWVsZCB0byBiZSB1c2VkLlxuU29tZSBpbnN0YW5jZXMgb2YgdGhpcyBmaWVsZCBtYXkgYmUgZGVmYXVsdGVkLCBpbiBvdGhlcnMgaXQgbWF5IGJlXG5yZXF1aXJlZC4iLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSByZXNvdXJjZSBiZWluZyByZWZlcnJlZCB0by5cbk1vcmUgaW5mbzogaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvb3ZlcnZpZXcvd29ya2luZy13aXRoLW9iamVjdHMvbmFtZXMvI25hbWVzIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInNlcnZpY2VDb25zdW1lckRvbWFpbiI6eyJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJhY2Nlc3NUb2tlblNlY3JldFJlZiIsImNsaWVudFNlY3JldFNlY3JldFJlZiIsImNsaWVudFRva2VuU2VjcmV0UmVmIiwic2VydmljZUNvbnN1bWVyRG9tYWluIl0sInR5cGUiOiJvYmplY3QifSwiYXp1cmVETlMiOnsiZGVzY3JpcHRpb24iOiJVc2UgdGhlIE1pY3Jvc29mdCBBenVyZSBETlMgQVBJIHRvIG1hbmFnZSBETlMwMSBjaGFsbGVuZ2UgcmVjb3Jkcy4iLCJwcm9wZXJ0aWVzIjp7ImNsaWVudElEIjp7ImRlc2NyaXB0aW9uIjoiQXV0aDogQXp1cmUgU2VydmljZSBQcmluY2lwYWw6XG5UaGUgQ2xpZW50SUQgb2YgdGhlIEF6dXJlIFNlcnZpY2UgUHJpbmNpcGFsIHVzZWQgdG8gYXV0aGVudGljYXRlIHdpdGggQXp1cmUgRE5TLlxuSWYgc2V0LCBDbGllbnRTZWNyZXQgYW5kIFRlbmFudElEIG11c3QgYWxzbyBiZSBzZXQuIiwidHlwZSI6InN0cmluZyJ9LCJjbGllbnRTZWNyZXRTZWNyZXRSZWYiOnsiZGVzY3JpcHRpb24iOiJBdXRoOiBBenVyZSBTZXJ2aWNlIFByaW5jaXBhbDpcbkEgcmVmZXJlbmNlIHRvIGEgU2VjcmV0IGNvbnRhaW5pbmcgdGhlIHBhc3N3b3JkIGFzc29jaWF0ZWQgd2l0aCB0aGUgU2VydmljZSBQcmluY2lwYWwuXG5JZiBzZXQsIENsaWVudElEIGFuZCBUZW5hbnRJRCBtdXN0IGFsc28gYmUgc2V0LiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoiVGhlIGtleSBvZiB0aGUgZW50cnkgaW4gdGhlIFNlY3JldCByZXNvdXJjZSdzIGBkYXRhYCBmaWVsZCB0byBiZSB1c2VkLlxuU29tZSBpbnN0YW5jZXMgb2YgdGhpcyBmaWVsZCBtYXkgYmUgZGVmYXVsdGVkLCBpbiBvdGhlcnMgaXQgbWF5IGJlXG5yZXF1aXJlZC4iLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSByZXNvdXJjZSBiZWluZyByZWZlcnJlZCB0by5cbk1vcmUgaW5mbzogaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvb3ZlcnZpZXcvd29ya2luZy13aXRoLW9iamVjdHMvbmFtZXMvI25hbWVzIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sImVudmlyb25tZW50Ijp7ImRlc2NyaXB0aW9uIjoibmFtZSBvZiB0aGUgQXp1cmUgZW52aXJvbm1lbnQgKGRlZmF1bHQgQXp1cmVQdWJsaWNDbG91ZCkiLCJlbnVtIjpbIkF6dXJlUHVibGljQ2xvdWQiLCJBenVyZUNoaW5hQ2xvdWQiLCJBenVyZUdlcm1hbkNsb3VkIiwiQXp1cmVVU0dvdmVybm1lbnRDbG91ZCJdLCJ0eXBlIjoic3RyaW5nIn0sImhvc3RlZFpvbmVOYW1lIjp7ImRlc2NyaXB0aW9uIjoibmFtZSBvZiB0aGUgRE5TIHpvbmUgdGhhdCBzaG91bGQgYmUgdXNlZCIsInR5cGUiOiJzdHJpbmcifSwibWFuYWdlZElkZW50aXR5Ijp7ImRlc2NyaXB0aW9uIjoiQXV0aDogQXp1cmUgV29ya2xvYWQgSWRlbnRpdHkgb3IgQXp1cmUgTWFuYWdlZCBTZXJ2aWNlIElkZW50aXR5OlxuU2V0dGluZ3MgdG8gZW5hYmxlIEF6dXJlIFdvcmtsb2FkIElkZW50aXR5IG9yIEF6dXJlIE1hbmFnZWQgU2VydmljZSBJZGVudGl0eVxuSWYgc2V0LCBDbGllbnRJRCwgQ2xpZW50U2VjcmV0IGFuZCBUZW5hbnRJRCBtdXN0IG5vdCBiZSBzZXQuIiwicHJvcGVydGllcyI6eyJjbGllbnRJRCI6eyJkZXNjcmlwdGlvbiI6ImNsaWVudCBJRCBvZiB0aGUgbWFuYWdlZCBpZGVudGl0eSwgY2FuIG5vdCBiZSB1c2VkIGF0IHRoZSBzYW1lIHRpbWUgYXMgcmVzb3VyY2VJRCIsInR5cGUiOiJzdHJpbmcifSwicmVzb3VyY2VJRCI6eyJkZXNjcmlwdGlvbiI6InJlc291cmNlIElEIG9mIHRoZSBtYW5hZ2VkIGlkZW50aXR5LCBjYW4gbm90IGJlIHVzZWQgYXQgdGhlIHNhbWUgdGltZSBhcyBjbGllbnRJRFxuQ2Fubm90IGJlIHVzZWQgZm9yIEF6dXJlIE1hbmFnZWQgU2VydmljZSBJZGVudGl0eSIsInR5cGUiOiJzdHJpbmcifSwidGVuYW50SUQiOnsiZGVzY3JpcHRpb24iOiJ0ZW5hbnQgSUQgb2YgdGhlIG1hbmFnZWQgaWRlbnRpdHksIGNhbiBub3QgYmUgdXNlZCBhdCB0aGUgc2FtZSB0aW1lIGFzIHJlc291cmNlSUQiLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sInJlc291cmNlR3JvdXBOYW1lIjp7ImRlc2NyaXB0aW9uIjoicmVzb3VyY2UgZ3JvdXAgdGhlIEROUyB6b25lIGlzIGxvY2F0ZWQgaW4iLCJ0eXBlIjoic3RyaW5nIn0sInN1YnNjcmlwdGlvbklEIjp7ImRlc2NyaXB0aW9uIjoiSUQgb2YgdGhlIEF6dXJlIHN1YnNjcmlwdGlvbiIsInR5cGUiOiJzdHJpbmcifSwidGVuYW50SUQiOnsiZGVzY3JpcHRpb24iOiJBdXRoOiBBenVyZSBTZXJ2aWNlIFByaW5jaXBhbDpcblRoZSBUZW5hbnRJRCBvZiB0aGUgQXp1cmUgU2VydmljZSBQcmluY2lwYWwgdXNlZCB0byBhdXRoZW50aWNhdGUgd2l0aCBBenVyZSBETlMuXG5JZiBzZXQsIENsaWVudElEIGFuZCBDbGllbnRTZWNyZXQgbXVzdCBhbHNvIGJlIHNldC4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJyZXNvdXJjZUdyb3VwTmFtZSIsInN1YnNjcmlwdGlvbklEIl0sInR5cGUiOiJvYmplY3QifSwiY2xvdWRETlMiOnsiZGVzY3JpcHRpb24iOiJVc2UgdGhlIEdvb2dsZSBDbG91ZCBETlMgQVBJIHRvIG1hbmFnZSBETlMwMSBjaGFsbGVuZ2UgcmVjb3Jkcy4iLCJwcm9wZXJ0aWVzIjp7Imhvc3RlZFpvbmVOYW1lIjp7ImRlc2NyaXB0aW9uIjoiSG9zdGVkWm9uZU5hbWUgaXMgYW4gb3B0aW9uYWwgZmllbGQgdGhhdCB0ZWxscyBjZXJ0LW1hbmFnZXIgaW4gd2hpY2hcbkNsb3VkIEROUyB6b25lIHRoZSBjaGFsbGVuZ2UgcmVjb3JkIGhhcyB0byBiZSBjcmVhdGVkLlxuSWYgbGVmdCBlbXB0eSBjZXJ0LW1hbmFnZXIgd2lsbCBhdXRvbWF0aWNhbGx5IGNob29zZSBhIHpvbmUuIiwidHlwZSI6InN0cmluZyJ9LCJwcm9qZWN0Ijp7InR5cGUiOiJzdHJpbmcifSwic2VydmljZUFjY291bnRTZWNyZXRSZWYiOnsiZGVzY3JpcHRpb24iOiJBIHJlZmVyZW5jZSB0byBhIHNwZWNpZmljICdrZXknIHdpdGhpbiBhIFNlY3JldCByZXNvdXJjZS5cbkluIHNvbWUgaW5zdGFuY2VzLCBga2V5YCBpcyBhIHJlcXVpcmVkIGZpZWxkLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoiVGhlIGtleSBvZiB0aGUgZW50cnkgaW4gdGhlIFNlY3JldCByZXNvdXJjZSdzIGBkYXRhYCBmaWVsZCB0byBiZSB1c2VkLlxuU29tZSBpbnN0YW5jZXMgb2YgdGhpcyBmaWVsZCBtYXkgYmUgZGVmYXVsdGVkLCBpbiBvdGhlcnMgaXQgbWF5IGJlXG5yZXF1aXJlZC4iLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSByZXNvdXJjZSBiZWluZyByZWZlcnJlZCB0by5cbk1vcmUgaW5mbzogaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvb3ZlcnZpZXcvd29ya2luZy13aXRoLW9iamVjdHMvbmFtZXMvI25hbWVzIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibmFtZSJdLCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJwcm9qZWN0Il0sInR5cGUiOiJvYmplY3QifSwiY2xvdWRmbGFyZSI6eyJkZXNjcmlwdGlvbiI6IlVzZSB0aGUgQ2xvdWRmbGFyZSBBUEkgdG8gbWFuYWdlIEROUzAxIGNoYWxsZW5nZSByZWNvcmRzLiIsInByb3BlcnRpZXMiOnsiYXBpS2V5U2VjcmV0UmVmIjp7ImRlc2NyaXB0aW9uIjoiQVBJIGtleSB0byB1c2UgdG8gYXV0aGVudGljYXRlIHdpdGggQ2xvdWRmbGFyZS5cbk5vdGU6IHVzaW5nIGFuIEFQSSB0b2tlbiB0byBhdXRoZW50aWNhdGUgaXMgbm93IHRoZSByZWNvbW1lbmRlZCBtZXRob2RcbmFzIGl0IGFsbG93cyBncmVhdGVyIGNvbnRyb2wgb2YgcGVybWlzc2lvbnMuIiwicHJvcGVydGllcyI6eyJrZXkiOnsiZGVzY3JpcHRpb24iOiJUaGUga2V5IG9mIHRoZSBlbnRyeSBpbiB0aGUgU2VjcmV0IHJlc291cmNlJ3MgYGRhdGFgIGZpZWxkIHRvIGJlIHVzZWQuXG5Tb21lIGluc3RhbmNlcyBvZiB0aGlzIGZpZWxkIG1heSBiZSBkZWZhdWx0ZWQsIGluIG90aGVycyBpdCBtYXkgYmVcbnJlcXVpcmVkLiIsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIHJlc291cmNlIGJlaW5nIHJlZmVycmVkIHRvLlxuTW9yZSBpbmZvOiBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9vdmVydmlldy93b3JraW5nLXdpdGgtb2JqZWN0cy9uYW1lcy8jbmFtZXMiLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJuYW1lIl0sInR5cGUiOiJvYmplY3QifSwiYXBpVG9rZW5TZWNyZXRSZWYiOnsiZGVzY3JpcHRpb24iOiJBUEkgdG9rZW4gdXNlZCB0byBhdXRoZW50aWNhdGUgd2l0aCBDbG91ZGZsYXJlLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoiVGhlIGtleSBvZiB0aGUgZW50cnkgaW4gdGhlIFNlY3JldCByZXNvdXJjZSdzIGBkYXRhYCBmaWVsZCB0byBiZSB1c2VkLlxuU29tZSBpbnN0YW5jZXMgb2YgdGhpcyBmaWVsZCBtYXkgYmUgZGVmYXVsdGVkLCBpbiBvdGhlcnMgaXQgbWF5IGJlXG5yZXF1aXJlZC4iLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSByZXNvdXJjZSBiZWluZyByZWZlcnJlZCB0by5cbk1vcmUgaW5mbzogaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvb3ZlcnZpZXcvd29ya2luZy13aXRoLW9iamVjdHMvbmFtZXMvI25hbWVzIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sImVtYWlsIjp7ImRlc2NyaXB0aW9uIjoiRW1haWwgb2YgdGhlIGFjY291bnQsIG9ubHkgcmVxdWlyZWQgd2hlbiB1c2luZyBBUEkga2V5IGJhc2VkIGF1dGhlbnRpY2F0aW9uLiIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwiY25hbWVTdHJhdGVneSI6eyJkZXNjcmlwdGlvbiI6IkNOQU1FU3RyYXRlZ3kgY29uZmlndXJlcyBob3cgdGhlIEROUzAxIHByb3ZpZGVyIHNob3VsZCBoYW5kbGUgQ05BTUVcbnJlY29yZHMgd2hlbiBmb3VuZCBpbiBETlMgem9uZXMuIiwiZW51bSI6WyJOb25lIiwiRm9sbG93Il0sInR5cGUiOiJzdHJpbmcifSwiZGlnaXRhbG9jZWFuIjp7ImRlc2NyaXB0aW9uIjoiVXNlIHRoZSBEaWdpdGFsT2NlYW4gRE5TIEFQSSB0byBtYW5hZ2UgRE5TMDEgY2hhbGxlbmdlIHJlY29yZHMuIiwicHJvcGVydGllcyI6eyJ0b2tlblNlY3JldFJlZiI6eyJkZXNjcmlwdGlvbiI6IkEgcmVmZXJlbmNlIHRvIGEgc3BlY2lmaWMgJ2tleScgd2l0aGluIGEgU2VjcmV0IHJlc291cmNlLlxuSW4gc29tZSBpbnN0YW5jZXMsIGBrZXlgIGlzIGEgcmVxdWlyZWQgZmllbGQuIiwicHJvcGVydGllcyI6eyJrZXkiOnsiZGVzY3JpcHRpb24iOiJUaGUga2V5IG9mIHRoZSBlbnRyeSBpbiB0aGUgU2VjcmV0IHJlc291cmNlJ3MgYGRhdGFgIGZpZWxkIHRvIGJlIHVzZWQuXG5Tb21lIGluc3RhbmNlcyBvZiB0aGlzIGZpZWxkIG1heSBiZSBkZWZhdWx0ZWQsIGluIG90aGVycyBpdCBtYXkgYmVcbnJlcXVpcmVkLiIsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIHJlc291cmNlIGJlaW5nIHJlZmVycmVkIHRvLlxuTW9yZSBpbmZvOiBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9vdmVydmlldy93b3JraW5nLXdpdGgtb2JqZWN0cy9uYW1lcy8jbmFtZXMiLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJuYW1lIl0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInRva2VuU2VjcmV0UmVmIl0sInR5cGUiOiJvYmplY3QifSwicmZjMjEzNiI6eyJkZXNjcmlwdGlvbiI6IlVzZSBSRkMyMTM2IChcIkR5bmFtaWMgVXBkYXRlcyBpbiB0aGUgRG9tYWluIE5hbWUgU3lzdGVtXCIpIChodHRwczovL2RhdGF0cmFja2VyLmlldGYub3JnL2RvYy9yZmMyMTM2LylcbnRvIG1hbmFnZSBETlMwMSBjaGFsbGVuZ2UgcmVjb3Jkcy4iLCJwcm9wZXJ0aWVzIjp7Im5hbWVzZXJ2ZXIiOnsiZGVzY3JpcHRpb24iOiJUaGUgSVAgYWRkcmVzcyBvciBob3N0bmFtZSBvZiBhbiBhdXRob3JpdGF0aXZlIEROUyBzZXJ2ZXIgc3VwcG9ydGluZ1xuUkZDMjEzNiBpbiB0aGUgZm9ybSBob3N0OnBvcnQuIElmIHRoZSBob3N0IGlzIGFuIElQdjYgYWRkcmVzcyBpdCBtdXN0IGJlXG5lbmNsb3NlZCBpbiBzcXVhcmUgYnJhY2tldHMgKGUuZyBbMjAwMTpkYjg6OjFdKcKgOyBwb3J0IGlzIG9wdGlvbmFsLlxuVGhpcyBmaWVsZCBpcyByZXF1aXJlZC4iLCJ0eXBlIjoic3RyaW5nIn0sInRzaWdBbGdvcml0aG0iOnsiZGVzY3JpcHRpb24iOiJUaGUgVFNJRyBBbGdvcml0aG0gY29uZmlndXJlZCBpbiB0aGUgRE5TIHN1cHBvcnRpbmcgUkZDMjEzNi4gVXNlZCBvbmx5XG53aGVuIGBgdHNpZ1NlY3JldFNlY3JldFJlZmBgIGFuZCBgYHRzaWdLZXlOYW1lYGAgYXJlIGRlZmluZWQuXG5TdXBwb3J0ZWQgdmFsdWVzIGFyZSAoY2FzZS1pbnNlbnNpdGl2ZSk6IGBgSE1BQ01ENWBgIChkZWZhdWx0KSxcbmBgSE1BQ1NIQTFgYCwgYGBITUFDU0hBMjU2YGAgb3IgYGBITUFDU0hBNTEyYGAuIiwidHlwZSI6InN0cmluZyJ9LCJ0c2lnS2V5TmFtZSI6eyJkZXNjcmlwdGlvbiI6IlRoZSBUU0lHIEtleSBuYW1lIGNvbmZpZ3VyZWQgaW4gdGhlIEROUy5cbklmIGBgdHNpZ1NlY3JldFNlY3JldFJlZmBgIGlzIGRlZmluZWQsIHRoaXMgZmllbGQgaXMgcmVxdWlyZWQuIiwidHlwZSI6InN0cmluZyJ9LCJ0c2lnU2VjcmV0U2VjcmV0UmVmIjp7ImRlc2NyaXB0aW9uIjoiVGhlIG5hbWUgb2YgdGhlIHNlY3JldCBjb250YWluaW5nIHRoZSBUU0lHIHZhbHVlLlxuSWYgYGB0c2lnS2V5TmFtZWBgIGlzIGRlZmluZWQsIHRoaXMgZmllbGQgaXMgcmVxdWlyZWQuIiwicHJvcGVydGllcyI6eyJrZXkiOnsiZGVzY3JpcHRpb24iOiJUaGUga2V5IG9mIHRoZSBlbnRyeSBpbiB0aGUgU2VjcmV0IHJlc291cmNlJ3MgYGRhdGFgIGZpZWxkIHRvIGJlIHVzZWQuXG5Tb21lIGluc3RhbmNlcyBvZiB0aGlzIGZpZWxkIG1heSBiZSBkZWZhdWx0ZWQsIGluIG90aGVycyBpdCBtYXkgYmVcbnJlcXVpcmVkLiIsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIHJlc291cmNlIGJlaW5nIHJlZmVycmVkIHRvLlxuTW9yZSBpbmZvOiBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9vdmVydmlldy93b3JraW5nLXdpdGgtb2JqZWN0cy9uYW1lcy8jbmFtZXMiLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJuYW1lIl0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbIm5hbWVzZXJ2ZXIiXSwidHlwZSI6Im9iamVjdCJ9LCJyb3V0ZTUzIjp7ImRlc2NyaXB0aW9uIjoiVXNlIHRoZSBBV1MgUm91dGU1MyBBUEkgdG8gbWFuYWdlIEROUzAxIGNoYWxsZW5nZSByZWNvcmRzLiIsInByb3BlcnRpZXMiOnsiYWNjZXNzS2V5SUQiOnsiZGVzY3JpcHRpb24iOiJUaGUgQWNjZXNzS2V5SUQgaXMgdXNlZCBmb3IgYXV0aGVudGljYXRpb24uXG5DYW5ub3QgYmUgc2V0IHdoZW4gU2VjcmV0QWNjZXNzS2V5SUQgaXMgc2V0LlxuSWYgbmVpdGhlciB0aGUgQWNjZXNzIEtleSBub3IgS2V5IElEIGFyZSBzZXQsIHdlIGZhbGwtYmFjayB0byB1c2luZyBlbnZcbnZhcnMsIHNoYXJlZCBjcmVkZW50aWFscyBmaWxlIG9yIEFXUyBJbnN0YW5jZSBtZXRhZGF0YSxcbnNlZTogaHR0cHM6Ly9kb2NzLmF3cy5hbWF6b24uY29tL3Nkay1mb3ItZ28vdjEvZGV2ZWxvcGVyLWd1aWRlL2NvbmZpZ3VyaW5nLXNkay5odG1sI3NwZWNpZnlpbmctY3JlZGVudGlhbHMiLCJ0eXBlIjoic3RyaW5nIn0sImFjY2Vzc0tleUlEU2VjcmV0UmVmIjp7ImRlc2NyaXB0aW9uIjoiVGhlIFNlY3JldEFjY2Vzc0tleSBpcyB1c2VkIGZvciBhdXRoZW50aWNhdGlvbi4gSWYgc2V0LCBwdWxsIHRoZSBBV1NcbmFjY2VzcyBrZXkgSUQgZnJvbSBhIGtleSB3aXRoaW4gYSBLdWJlcm5ldGVzIFNlY3JldC5cbkNhbm5vdCBiZSBzZXQgd2hlbiBBY2Nlc3NLZXlJRCBpcyBzZXQuXG5JZiBuZWl0aGVyIHRoZSBBY2Nlc3MgS2V5IG5vciBLZXkgSUQgYXJlIHNldCwgd2UgZmFsbC1iYWNrIHRvIHVzaW5nIGVudlxudmFycywgc2hhcmVkIGNyZWRlbnRpYWxzIGZpbGUgb3IgQVdTIEluc3RhbmNlIG1ldGFkYXRhLFxuc2VlOiBodHRwczovL2RvY3MuYXdzLmFtYXpvbi5jb20vc2RrLWZvci1nby92MS9kZXZlbG9wZXItZ3VpZGUvY29uZmlndXJpbmctc2RrLmh0bWwjc3BlY2lmeWluZy1jcmVkZW50aWFscyIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoiVGhlIGtleSBvZiB0aGUgZW50cnkgaW4gdGhlIFNlY3JldCByZXNvdXJjZSdzIGBkYXRhYCBmaWVsZCB0byBiZSB1c2VkLlxuU29tZSBpbnN0YW5jZXMgb2YgdGhpcyBmaWVsZCBtYXkgYmUgZGVmYXVsdGVkLCBpbiBvdGhlcnMgaXQgbWF5IGJlXG5yZXF1aXJlZC4iLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSByZXNvdXJjZSBiZWluZyByZWZlcnJlZCB0by5cbk1vcmUgaW5mbzogaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvb3ZlcnZpZXcvd29ya2luZy13aXRoLW9iamVjdHMvbmFtZXMvI25hbWVzIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sImF1dGgiOnsiZGVzY3JpcHRpb24iOiJBdXRoIGNvbmZpZ3VyZXMgaG93IGNlcnQtbWFuYWdlciBhdXRoZW50aWNhdGVzLiIsInByb3BlcnRpZXMiOnsia3ViZXJuZXRlcyI6eyJkZXNjcmlwdGlvbiI6Ikt1YmVybmV0ZXMgYXV0aGVudGljYXRlcyB3aXRoIFJvdXRlNTMgdXNpbmcgQXNzdW1lUm9sZVdpdGhXZWJJZGVudGl0eVxuYnkgcGFzc2luZyBhIGJvdW5kIFNlcnZpY2VBY2NvdW50IHRva2VuLiIsInByb3BlcnRpZXMiOnsic2VydmljZUFjY291bnRSZWYiOnsiZGVzY3JpcHRpb24iOiJBIHJlZmVyZW5jZSB0byBhIHNlcnZpY2UgYWNjb3VudCB0aGF0IHdpbGwgYmUgdXNlZCB0byByZXF1ZXN0IGEgYm91bmRcbnRva2VuIChhbHNvIGtub3duIGFzIFwicHJvamVjdGVkIHRva2VuXCIpLiBUbyB1c2UgdGhpcyBmaWVsZCwgeW91IG11c3RcbmNvbmZpZ3VyZSBhbiBSQkFDIHJ1bGUgdG8gbGV0IGNlcnQtbWFuYWdlciByZXF1ZXN0IGEgdG9rZW4uIiwicHJvcGVydGllcyI6eyJhdWRpZW5jZXMiOnsiZGVzY3JpcHRpb24iOiJUb2tlbkF1ZGllbmNlcyBpcyBhbiBvcHRpb25hbCBsaXN0IG9mIGF1ZGllbmNlcyB0byBpbmNsdWRlIGluIHRoZVxudG9rZW4gcGFzc2VkIHRvIEFXUy4gVGhlIGRlZmF1bHQgdG9rZW4gY29uc2lzdGluZyBvZiB0aGUgaXNzdWVyJ3MgbmFtZXNwYWNlXG5hbmQgbmFtZSBpcyBhbHdheXMgaW5jbHVkZWQuXG5JZiB1bnNldCB0aGUgYXVkaWVuY2UgZGVmYXVsdHMgdG8gYHN0cy5hbWF6b25hd3MuY29tYC4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgU2VydmljZUFjY291bnQgdXNlZCB0byByZXF1ZXN0IGEgdG9rZW4uIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibmFtZSJdLCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJzZXJ2aWNlQWNjb3VudFJlZiJdLCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJrdWJlcm5ldGVzIl0sInR5cGUiOiJvYmplY3QifSwiaG9zdGVkWm9uZUlEIjp7ImRlc2NyaXB0aW9uIjoiSWYgc2V0LCB0aGUgcHJvdmlkZXIgd2lsbCBtYW5hZ2Ugb25seSB0aGlzIHpvbmUgaW4gUm91dGU1MyBhbmQgd2lsbCBub3QgZG8gYSBsb29rdXAgdXNpbmcgdGhlIHJvdXRlNTM6TGlzdEhvc3RlZFpvbmVzQnlOYW1lIGFwaSBjYWxsLiIsInR5cGUiOiJzdHJpbmcifSwicmVnaW9uIjp7ImRlc2NyaXB0aW9uIjoiT3ZlcnJpZGUgdGhlIEFXUyByZWdpb24uXG5cblJvdXRlNTMgaXMgYSBnbG9iYWwgc2VydmljZSBhbmQgZG9lcyBub3QgaGF2ZSByZWdpb25hbCBlbmRwb2ludHMgYnV0IHRoZVxucmVnaW9uIHNwZWNpZmllZCBoZXJlIChvciB2aWEgZW52aXJvbm1lbnQgdmFyaWFibGVzKSBpcyB1c2VkIGFzIGEgaGludCB0b1xuaGVscCBjb21wdXRlIHRoZSBjb3JyZWN0IEFXUyBjcmVkZW50aWFsIHNjb3BlIGFuZCBwYXJ0aXRpb24gd2hlbiBpdFxuY29ubmVjdHMgdG8gUm91dGU1My4gU2VlOlxuLSBbQW1hem9uIFJvdXRlIDUzIGVuZHBvaW50cyBhbmQgcXVvdGFzXShodHRwczovL2RvY3MuYXdzLmFtYXpvbi5jb20vZ2VuZXJhbC9sYXRlc3QvZ3IvcjUzLmh0bWwpXG4tIFtHbG9iYWwgc2VydmljZXNdKGh0dHBzOi8vZG9jcy5hd3MuYW1hem9uLmNvbS93aGl0ZXBhcGVycy9sYXRlc3QvYXdzLWZhdWx0LWlzb2xhdGlvbi1ib3VuZGFyaWVzL2dsb2JhbC1zZXJ2aWNlcy5odG1sKVxuXG5JZiB5b3Ugb21pdCB0aGlzIHJlZ2lvbiBmaWVsZCwgY2VydC1tYW5hZ2VyIHdpbGwgdXNlIHRoZSByZWdpb24gZnJvbVxuQVdTX1JFR0lPTiBhbmQgQVdTX0RFRkFVTFRfUkVHSU9OIGVudmlyb25tZW50IHZhcmlhYmxlcywgaWYgdGhleSBhcmUgc2V0XG5pbiB0aGUgY2VydC1tYW5hZ2VyIGNvbnRyb2xsZXIgUG9kLlxuXG5UaGUgYHJlZ2lvbmAgZmllbGQgaXMgbm90IG5lZWRlZCBpZiB5b3UgdXNlIFtJQU0gUm9sZXMgZm9yIFNlcnZpY2UgQWNjb3VudHMgKElSU0EpXShodHRwczovL2RvY3MuYXdzLmFtYXpvbi5jb20vZWtzL2xhdGVzdC91c2VyZ3VpZGUvaWFtLXJvbGVzLWZvci1zZXJ2aWNlLWFjY291bnRzLmh0bWwpLlxuSW5zdGVhZCBhbiBBV1NfUkVHSU9OIGVudmlyb25tZW50IHZhcmlhYmxlIGlzIGFkZGVkIHRvIHRoZSBjZXJ0LW1hbmFnZXIgY29udHJvbGxlciBQb2QgYnk6XG5bQW1hem9uIEVLUyBQb2QgSWRlbnRpdHkgV2ViaG9va10oaHR0cHM6Ly9naXRodWIuY29tL2F3cy9hbWF6b24tZWtzLXBvZC1pZGVudGl0eS13ZWJob29rKS5cbkluIHRoaXMgY2FzZSB0aGlzIGByZWdpb25gIGZpZWxkIHZhbHVlIGlzIGlnbm9yZWQuXG5cblRoZSBgcmVnaW9uYCBmaWVsZCBpcyBub3QgbmVlZGVkIGlmIHlvdSB1c2UgW0VLUyBQb2QgSWRlbnRpdGllc10oaHR0cHM6Ly9kb2NzLmF3cy5hbWF6b24uY29tL2Vrcy9sYXRlc3QvdXNlcmd1aWRlL3BvZC1pZGVudGl0aWVzLmh0bWwpLlxuSW5zdGVhZCBhbiBBV1NfUkVHSU9OIGVudmlyb25tZW50IHZhcmlhYmxlIGlzIGFkZGVkIHRvIHRoZSBjZXJ0LW1hbmFnZXIgY29udHJvbGxlciBQb2QgYnk6XG5bQW1hem9uIEVLUyBQb2QgSWRlbnRpdHkgQWdlbnRdKGh0dHBzOi8vZ2l0aHViLmNvbS9hd3MvZWtzLXBvZC1pZGVudGl0eS1hZ2VudCksXG5JbiB0aGlzIGNhc2UgdGhpcyBgcmVnaW9uYCBmaWVsZCB2YWx1ZSBpcyBpZ25vcmVkLiIsInR5cGUiOiJzdHJpbmcifSwicm9sZSI6eyJkZXNjcmlwdGlvbiI6IlJvbGUgaXMgYSBSb2xlIEFSTiB3aGljaCB0aGUgUm91dGU1MyBwcm92aWRlciB3aWxsIGFzc3VtZSB1c2luZyBlaXRoZXIgdGhlIGV4cGxpY2l0IGNyZWRlbnRpYWxzIEFjY2Vzc0tleUlEL1NlY3JldEFjY2Vzc0tleVxub3IgdGhlIGluZmVycmVkIGNyZWRlbnRpYWxzIGZyb20gZW52aXJvbm1lbnQgdmFyaWFibGVzLCBzaGFyZWQgY3JlZGVudGlhbHMgZmlsZSBvciBBV1MgSW5zdGFuY2UgbWV0YWRhdGEiLCJ0eXBlIjoic3RyaW5nIn0sInNlY3JldEFjY2Vzc0tleVNlY3JldFJlZiI6eyJkZXNjcmlwdGlvbiI6IlRoZSBTZWNyZXRBY2Nlc3NLZXkgaXMgdXNlZCBmb3IgYXV0aGVudGljYXRpb24uXG5JZiBuZWl0aGVyIHRoZSBBY2Nlc3MgS2V5IG5vciBLZXkgSUQgYXJlIHNldCwgd2UgZmFsbC1iYWNrIHRvIHVzaW5nIGVudlxudmFycywgc2hhcmVkIGNyZWRlbnRpYWxzIGZpbGUgb3IgQVdTIEluc3RhbmNlIG1ldGFkYXRhLFxuc2VlOiBodHRwczovL2RvY3MuYXdzLmFtYXpvbi5jb20vc2RrLWZvci1nby92MS9kZXZlbG9wZXItZ3VpZGUvY29uZmlndXJpbmctc2RrLmh0bWwjc3BlY2lmeWluZy1jcmVkZW50aWFscyIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoiVGhlIGtleSBvZiB0aGUgZW50cnkgaW4gdGhlIFNlY3JldCByZXNvdXJjZSdzIGBkYXRhYCBmaWVsZCB0byBiZSB1c2VkLlxuU29tZSBpbnN0YW5jZXMgb2YgdGhpcyBmaWVsZCBtYXkgYmUgZGVmYXVsdGVkLCBpbiBvdGhlcnMgaXQgbWF5IGJlXG5yZXF1aXJlZC4iLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSByZXNvdXJjZSBiZWluZyByZWZlcnJlZCB0by5cbk1vcmUgaW5mbzogaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvb3ZlcnZpZXcvd29ya2luZy13aXRoLW9iamVjdHMvbmFtZXMvI25hbWVzIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibmFtZSJdLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In0sIndlYmhvb2siOnsiZGVzY3JpcHRpb24iOiJDb25maWd1cmUgYW4gZXh0ZXJuYWwgd2ViaG9vayBiYXNlZCBETlMwMSBjaGFsbGVuZ2Ugc29sdmVyIHRvIG1hbmFnZVxuRE5TMDEgY2hhbGxlbmdlIHJlY29yZHMuIiwicHJvcGVydGllcyI6eyJjb25maWciOnsiZGVzY3JpcHRpb24iOiJBZGRpdGlvbmFsIGNvbmZpZ3VyYXRpb24gdGhhdCBzaG91bGQgYmUgcGFzc2VkIHRvIHRoZSB3ZWJob29rIGFwaXNlcnZlclxud2hlbiBjaGFsbGVuZ2VzIGFyZSBwcm9jZXNzZWQuXG5UaGlzIGNhbiBjb250YWluIGFyYml0cmFyeSBKU09OIGRhdGEuXG5TZWNyZXQgdmFsdWVzIHNob3VsZCBub3QgYmUgc3BlY2lmaWVkIGluIHRoaXMgc3RhbnphLlxuSWYgc2VjcmV0IHZhbHVlcyBhcmUgbmVlZGVkIChlLmcuIGNyZWRlbnRpYWxzIGZvciBhIEROUyBzZXJ2aWNlKSwgeW91XG5zaG91bGQgdXNlIGEgU2VjcmV0S2V5U2VsZWN0b3IgdG8gcmVmZXJlbmNlIGEgU2VjcmV0IHJlc291cmNlLlxuRm9yIGRldGFpbHMgb24gdGhlIHNjaGVtYSBvZiB0aGlzIGZpZWxkLCBjb25zdWx0IHRoZSB3ZWJob29rIHByb3ZpZGVyXG5pbXBsZW1lbnRhdGlvbidzIGRvY3VtZW50YXRpb24uIiwieC1rdWJlcm5ldGVzLXByZXNlcnZlLXVua25vd24tZmllbGRzIjp0cnVlfSwiZ3JvdXBOYW1lIjp7ImRlc2NyaXB0aW9uIjoiVGhlIEFQSSBncm91cCBuYW1lIHRoYXQgc2hvdWxkIGJlIHVzZWQgd2hlbiBQT1NUaW5nIENoYWxsZW5nZVBheWxvYWRcbnJlc291cmNlcyB0byB0aGUgd2ViaG9vayBhcGlzZXJ2ZXIuXG5UaGlzIHNob3VsZCBiZSB0aGUgc2FtZSBhcyB0aGUgR3JvdXBOYW1lIHNwZWNpZmllZCBpbiB0aGUgd2ViaG9va1xucHJvdmlkZXIgaW1wbGVtZW50YXRpb24uIiwidHlwZSI6InN0cmluZyJ9LCJzb2x2ZXJOYW1lIjp7ImRlc2NyaXB0aW9uIjoiVGhlIG5hbWUgb2YgdGhlIHNvbHZlciB0byB1c2UsIGFzIGRlZmluZWQgaW4gdGhlIHdlYmhvb2sgcHJvdmlkZXJcbmltcGxlbWVudGF0aW9uLlxuVGhpcyB3aWxsIHR5cGljYWxseSBiZSB0aGUgbmFtZSBvZiB0aGUgcHJvdmlkZXIsIGUuZy4gJ2Nsb3VkZmxhcmUnLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImdyb3VwTmFtZSIsInNvbHZlck5hbWUiXSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9LCJodHRwMDEiOnsiZGVzY3JpcHRpb24iOiJDb25maWd1cmVzIGNlcnQtbWFuYWdlciB0byBhdHRlbXB0IHRvIGNvbXBsZXRlIGF1dGhvcml6YXRpb25zIGJ5XG5wZXJmb3JtaW5nIHRoZSBIVFRQMDEgY2hhbGxlbmdlIGZsb3cuXG5JdCBpcyBub3QgcG9zc2libGUgdG8gb2J0YWluIGNlcnRpZmljYXRlcyBmb3Igd2lsZGNhcmQgZG9tYWluIG5hbWVzXG4oZS5nLiBgKi5leGFtcGxlLmNvbWApIHVzaW5nIHRoZSBIVFRQMDEgY2hhbGxlbmdlIG1lY2hhbmlzbS4iLCJwcm9wZXJ0aWVzIjp7ImdhdGV3YXlIVFRQUm91dGUiOnsiZGVzY3JpcHRpb24iOiJUaGUgR2F0ZXdheSBBUEkgaXMgYSBzaWctbmV0d29yayBjb21tdW5pdHkgQVBJIHRoYXQgbW9kZWxzIHNlcnZpY2UgbmV0d29ya2luZ1xuaW4gS3ViZXJuZXRlcyAoaHR0cHM6Ly9nYXRld2F5LWFwaS5zaWdzLms4cy5pby8pLiBUaGUgR2F0ZXdheSBzb2x2ZXIgd2lsbFxuY3JlYXRlIEhUVFBSb3V0ZXMgd2l0aCB0aGUgc3BlY2lmaWVkIGxhYmVscyBpbiB0aGUgc2FtZSBuYW1lc3BhY2UgYXMgdGhlIGNoYWxsZW5nZS5cblRoaXMgc29sdmVyIGlzIGV4cGVyaW1lbnRhbCwgYW5kIGZpZWxkcyAvIGJlaGF2aW91ciBtYXkgY2hhbmdlIGluIHRoZSBmdXR1cmUuIiwicHJvcGVydGllcyI6eyJsYWJlbHMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6IkN1c3RvbSBsYWJlbHMgdGhhdCB3aWxsIGJlIGFwcGxpZWQgdG8gSFRUUFJvdXRlcyBjcmVhdGVkIGJ5IGNlcnQtbWFuYWdlclxud2hpbGUgc29sdmluZyBIVFRQLTAxIGNoYWxsZW5nZXMuIiwidHlwZSI6Im9iamVjdCJ9LCJwYXJlbnRSZWZzIjp7ImRlc2NyaXB0aW9uIjoiV2hlbiBzb2x2aW5nIGFuIEhUVFAtMDEgY2hhbGxlbmdlLCBjZXJ0LW1hbmFnZXIgY3JlYXRlcyBhbiBIVFRQUm91dGUuXG5jZXJ0LW1hbmFnZXIgbmVlZHMgdG8ga25vdyB3aGljaCBwYXJlbnRSZWZzIHNob3VsZCBiZSB1c2VkIHdoZW4gY3JlYXRpbmdcbnRoZSBIVFRQUm91dGUuIFVzdWFsbHksIHRoZSBwYXJlbnRSZWYgcmVmZXJlbmNlcyBhIEdhdGV3YXkuIFNlZTpcbmh0dHBzOi8vZ2F0ZXdheS1hcGkuc2lncy5rOHMuaW8vYXBpLXR5cGVzL2h0dHByb3V0ZS8jYXR0YWNoaW5nLXRvLWdhdGV3YXlzIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJQYXJlbnRSZWZlcmVuY2UgaWRlbnRpZmllcyBhbiBBUEkgb2JqZWN0ICh1c3VhbGx5IGEgR2F0ZXdheSkgdGhhdCBjYW4gYmUgY29uc2lkZXJlZFxuYSBwYXJlbnQgb2YgdGhpcyByZXNvdXJjZSAodXN1YWxseSBhIHJvdXRlKS4gVGhlcmUgYXJlIHR3byBraW5kcyBvZiBwYXJlbnQgcmVzb3VyY2VzXG53aXRoIFwiQ29yZVwiIHN1cHBvcnQ6XG5cbiogR2F0ZXdheSAoR2F0ZXdheSBjb25mb3JtYW5jZSBwcm9maWxlKVxuKiBTZXJ2aWNlIChNZXNoIGNvbmZvcm1hbmNlIHByb2ZpbGUsIENsdXN0ZXJJUCBTZXJ2aWNlcyBvbmx5KVxuXG5UaGlzIEFQSSBtYXkgYmUgZXh0ZW5kZWQgaW4gdGhlIGZ1dHVyZSB0byBzdXBwb3J0IGFkZGl0aW9uYWwga2luZHMgb2YgcGFyZW50XG5yZXNvdXJjZXMuXG5cblRoZSBBUEkgb2JqZWN0IG11c3QgYmUgdmFsaWQgaW4gdGhlIGNsdXN0ZXI7IHRoZSBHcm91cCBhbmQgS2luZCBtdXN0XG5iZSByZWdpc3RlcmVkIGluIHRoZSBjbHVzdGVyIGZvciB0aGlzIHJlZmVyZW5jZSB0byBiZSB2YWxpZC4iLCJwcm9wZXJ0aWVzIjp7Imdyb3VwIjp7ImRlZmF1bHQiOiJnYXRld2F5Lm5ldHdvcmtpbmcuazhzLmlvIiwiZGVzY3JpcHRpb24iOiJHcm91cCBpcyB0aGUgZ3JvdXAgb2YgdGhlIHJlZmVyZW50LlxuV2hlbiB1bnNwZWNpZmllZCwgXCJnYXRld2F5Lm5ldHdvcmtpbmcuazhzLmlvXCIgaXMgaW5mZXJyZWQuXG5UbyBzZXQgdGhlIGNvcmUgQVBJIGdyb3VwIChzdWNoIGFzIGZvciBhIFwiU2VydmljZVwiIGtpbmQgcmVmZXJlbnQpLFxuR3JvdXAgbXVzdCBiZSBleHBsaWNpdGx5IHNldCB0byBcIlwiIChlbXB0eSBzdHJpbmcpLlxuXG5TdXBwb3J0OiBDb3JlIiwibWF4TGVuZ3RoIjoyNTMsInBhdHRlcm4iOiJeJHxeW2EtejAtOV0oWy1hLXowLTldKlthLXowLTldKT8oXFwuW2EtejAtOV0oWy1hLXowLTldKlthLXowLTldKT8pKiQiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVmYXVsdCI6IkdhdGV3YXkiLCJkZXNjcmlwdGlvbiI6IktpbmQgaXMga2luZCBvZiB0aGUgcmVmZXJlbnQuXG5cblRoZXJlIGFyZSB0d28ga2luZHMgb2YgcGFyZW50IHJlc291cmNlcyB3aXRoIFwiQ29yZVwiIHN1cHBvcnQ6XG5cbiogR2F0ZXdheSAoR2F0ZXdheSBjb25mb3JtYW5jZSBwcm9maWxlKVxuKiBTZXJ2aWNlIChNZXNoIGNvbmZvcm1hbmNlIHByb2ZpbGUsIENsdXN0ZXJJUCBTZXJ2aWNlcyBvbmx5KVxuXG5TdXBwb3J0IGZvciBvdGhlciByZXNvdXJjZXMgaXMgSW1wbGVtZW50YXRpb24tU3BlY2lmaWMuIiwibWF4TGVuZ3RoIjo2MywibWluTGVuZ3RoIjoxLCJwYXR0ZXJuIjoiXlthLXpBLVpdKFstYS16QS1aMC05XSpbYS16QS1aMC05XSk/JCIsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgaXMgdGhlIG5hbWUgb2YgdGhlIHJlZmVyZW50LlxuXG5TdXBwb3J0OiBDb3JlIiwibWF4TGVuZ3RoIjoyNTMsIm1pbkxlbmd0aCI6MSwidHlwZSI6InN0cmluZyJ9LCJuYW1lc3BhY2UiOnsiZGVzY3JpcHRpb24iOiJOYW1lc3BhY2UgaXMgdGhlIG5hbWVzcGFjZSBvZiB0aGUgcmVmZXJlbnQuIFdoZW4gdW5zcGVjaWZpZWQsIHRoaXMgcmVmZXJzXG50byB0aGUgbG9jYWwgbmFtZXNwYWNlIG9mIHRoZSBSb3V0ZS5cblxuTm90ZSB0aGF0IHRoZXJlIGFyZSBzcGVjaWZpYyBydWxlcyBmb3IgUGFyZW50UmVmcyB3aGljaCBjcm9zcyBuYW1lc3BhY2VcbmJvdW5kYXJpZXMuIENyb3NzLW5hbWVzcGFjZSByZWZlcmVuY2VzIGFyZSBvbmx5IHZhbGlkIGlmIHRoZXkgYXJlIGV4cGxpY2l0bHlcbmFsbG93ZWQgYnkgc29tZXRoaW5nIGluIHRoZSBuYW1lc3BhY2UgdGhleSBhcmUgcmVmZXJyaW5nIHRvLiBGb3IgZXhhbXBsZTpcbkdhdGV3YXkgaGFzIHRoZSBBbGxvd2VkUm91dGVzIGZpZWxkLCBhbmQgUmVmZXJlbmNlR3JhbnQgcHJvdmlkZXMgYVxuZ2VuZXJpYyB3YXkgdG8gZW5hYmxlIGFueSBvdGhlciBraW5kIG9mIGNyb3NzLW5hbWVzcGFjZSByZWZlcmVuY2UuXG5cblx1MDAzY2dhdGV3YXk6ZXhwZXJpbWVudGFsOmRlc2NyaXB0aW9uXHUwMDNlXG5QYXJlbnRSZWZzIGZyb20gYSBSb3V0ZSB0byBhIFNlcnZpY2UgaW4gdGhlIHNhbWUgbmFtZXNwYWNlIGFyZSBcInByb2R1Y2VyXCJcbnJvdXRlcywgd2hpY2ggYXBwbHkgZGVmYXVsdCByb3V0aW5nIHJ1bGVzIHRvIGluYm91bmQgY29ubmVjdGlvbnMgZnJvbVxuYW55IG5hbWVzcGFjZSB0byB0aGUgU2VydmljZS5cblxuUGFyZW50UmVmcyBmcm9tIGEgUm91dGUgdG8gYSBTZXJ2aWNlIGluIGEgZGlmZmVyZW50IG5hbWVzcGFjZSBhcmVcblwiY29uc3VtZXJcIiByb3V0ZXMsIGFuZCB0aGVzZSByb3V0aW5nIHJ1bGVzIGFyZSBvbmx5IGFwcGxpZWQgdG8gb3V0Ym91bmRcbmNvbm5lY3Rpb25zIG9yaWdpbmF0aW5nIGZyb20gdGhlIHNhbWUgbmFtZXNwYWNlIGFzIHRoZSBSb3V0ZSwgZm9yIHdoaWNoXG50aGUgaW50ZW5kZWQgZGVzdGluYXRpb24gb2YgdGhlIGNvbm5lY3Rpb25zIGFyZSBhIFNlcnZpY2UgdGFyZ2V0ZWQgYXMgYVxuUGFyZW50UmVmIG9mIHRoZSBSb3V0ZS5cblx1MDAzYy9nYXRld2F5OmV4cGVyaW1lbnRhbDpkZXNjcmlwdGlvblx1MDAzZVxuXG5TdXBwb3J0OiBDb3JlIiwibWF4TGVuZ3RoIjo2MywibWluTGVuZ3RoIjoxLCJwYXR0ZXJuIjoiXlthLXowLTldKFstYS16MC05XSpbYS16MC05XSk/JCIsInR5cGUiOiJzdHJpbmcifSwicG9ydCI6eyJkZXNjcmlwdGlvbiI6IlBvcnQgaXMgdGhlIG5ldHdvcmsgcG9ydCB0aGlzIFJvdXRlIHRhcmdldHMuIEl0IGNhbiBiZSBpbnRlcnByZXRlZFxuZGlmZmVyZW50bHkgYmFzZWQgb24gdGhlIHR5cGUgb2YgcGFyZW50IHJlc291cmNlLlxuXG5XaGVuIHRoZSBwYXJlbnQgcmVzb3VyY2UgaXMgYSBHYXRld2F5LCB0aGlzIHRhcmdldHMgYWxsIGxpc3RlbmVyc1xubGlzdGVuaW5nIG9uIHRoZSBzcGVjaWZpZWQgcG9ydCB0aGF0IGFsc28gc3VwcG9ydCB0aGlzIGtpbmQgb2YgUm91dGUoYW5kXG5zZWxlY3QgdGhpcyBSb3V0ZSkuIEl0J3Mgbm90IHJlY29tbWVuZGVkIHRvIHNldCBgUG9ydGAgdW5sZXNzIHRoZVxubmV0d29ya2luZyBiZWhhdmlvcnMgc3BlY2lmaWVkIGluIGEgUm91dGUgbXVzdCBhcHBseSB0byBhIHNwZWNpZmljIHBvcnRcbmFzIG9wcG9zZWQgdG8gYSBsaXN0ZW5lcihzKSB3aG9zZSBwb3J0KHMpIG1heSBiZSBjaGFuZ2VkLiBXaGVuIGJvdGggUG9ydFxuYW5kIFNlY3Rpb25OYW1lIGFyZSBzcGVjaWZpZWQsIHRoZSBuYW1lIGFuZCBwb3J0IG9mIHRoZSBzZWxlY3RlZCBsaXN0ZW5lclxubXVzdCBtYXRjaCBib3RoIHNwZWNpZmllZCB2YWx1ZXMuXG5cblx1MDAzY2dhdGV3YXk6ZXhwZXJpbWVudGFsOmRlc2NyaXB0aW9uXHUwMDNlXG5XaGVuIHRoZSBwYXJlbnQgcmVzb3VyY2UgaXMgYSBTZXJ2aWNlLCB0aGlzIHRhcmdldHMgYSBzcGVjaWZpYyBwb3J0IGluIHRoZVxuU2VydmljZSBzcGVjLiBXaGVuIGJvdGggUG9ydCAoZXhwZXJpbWVudGFsKSBhbmQgU2VjdGlvbk5hbWUgYXJlIHNwZWNpZmllZCxcbnRoZSBuYW1lIGFuZCBwb3J0IG9mIHRoZSBzZWxlY3RlZCBwb3J0IG11c3QgbWF0Y2ggYm90aCBzcGVjaWZpZWQgdmFsdWVzLlxuXHUwMDNjL2dhdGV3YXk6ZXhwZXJpbWVudGFsOmRlc2NyaXB0aW9uXHUwMDNlXG5cbkltcGxlbWVudGF0aW9ucyBNQVkgY2hvb3NlIHRvIHN1cHBvcnQgb3RoZXIgcGFyZW50IHJlc291cmNlcy5cbkltcGxlbWVudGF0aW9ucyBzdXBwb3J0aW5nIG90aGVyIHR5cGVzIG9mIHBhcmVudCByZXNvdXJjZXMgTVVTVCBjbGVhcmx5XG5kb2N1bWVudCBob3cvaWYgUG9ydCBpcyBpbnRlcnByZXRlZC5cblxuRm9yIHRoZSBwdXJwb3NlIG9mIHN0YXR1cywgYW4gYXR0YWNobWVudCBpcyBjb25zaWRlcmVkIHN1Y2Nlc3NmdWwgYXNcbmxvbmcgYXMgdGhlIHBhcmVudCByZXNvdXJjZSBhY2NlcHRzIGl0IHBhcnRpYWxseS4gRm9yIGV4YW1wbGUsIEdhdGV3YXlcbmxpc3RlbmVycyBjYW4gcmVzdHJpY3Qgd2hpY2ggUm91dGVzIGNhbiBhdHRhY2ggdG8gdGhlbSBieSBSb3V0ZSBraW5kLFxubmFtZXNwYWNlLCBvciBob3N0bmFtZS4gSWYgMSBvZiAyIEdhdGV3YXkgbGlzdGVuZXJzIGFjY2VwdCBhdHRhY2htZW50XG5mcm9tIHRoZSByZWZlcmVuY2luZyBSb3V0ZSwgdGhlIFJvdXRlIE1VU1QgYmUgY29uc2lkZXJlZCBzdWNjZXNzZnVsbHlcbmF0dGFjaGVkLiBJZiBubyBHYXRld2F5IGxpc3RlbmVycyBhY2NlcHQgYXR0YWNobWVudCBmcm9tIHRoaXMgUm91dGUsXG50aGUgUm91dGUgTVVTVCBiZSBjb25zaWRlcmVkIGRldGFjaGVkIGZyb20gdGhlIEdhdGV3YXkuXG5cblN1cHBvcnQ6IEV4dGVuZGVkIiwiZm9ybWF0IjoiaW50MzIiLCJtYXhpbXVtIjo2NTUzNSwibWluaW11bSI6MSwidHlwZSI6ImludGVnZXIifSwic2VjdGlvbk5hbWUiOnsiZGVzY3JpcHRpb24iOiJTZWN0aW9uTmFtZSBpcyB0aGUgbmFtZSBvZiBhIHNlY3Rpb24gd2l0aGluIHRoZSB0YXJnZXQgcmVzb3VyY2UuIEluIHRoZVxuZm9sbG93aW5nIHJlc291cmNlcywgU2VjdGlvbk5hbWUgaXMgaW50ZXJwcmV0ZWQgYXMgdGhlIGZvbGxvd2luZzpcblxuKiBHYXRld2F5OiBMaXN0ZW5lciBuYW1lLiBXaGVuIGJvdGggUG9ydCAoZXhwZXJpbWVudGFsKSBhbmQgU2VjdGlvbk5hbWVcbmFyZSBzcGVjaWZpZWQsIHRoZSBuYW1lIGFuZCBwb3J0IG9mIHRoZSBzZWxlY3RlZCBsaXN0ZW5lciBtdXN0IG1hdGNoXG5ib3RoIHNwZWNpZmllZCB2YWx1ZXMuXG4qIFNlcnZpY2U6IFBvcnQgbmFtZS4gV2hlbiBib3RoIFBvcnQgKGV4cGVyaW1lbnRhbCkgYW5kIFNlY3Rpb25OYW1lXG5hcmUgc3BlY2lmaWVkLCB0aGUgbmFtZSBhbmQgcG9ydCBvZiB0aGUgc2VsZWN0ZWQgbGlzdGVuZXIgbXVzdCBtYXRjaFxuYm90aCBzcGVjaWZpZWQgdmFsdWVzLlxuXG5JbXBsZW1lbnRhdGlvbnMgTUFZIGNob29zZSB0byBzdXBwb3J0IGF0dGFjaGluZyBSb3V0ZXMgdG8gb3RoZXIgcmVzb3VyY2VzLlxuSWYgdGhhdCBpcyB0aGUgY2FzZSwgdGhleSBNVVNUIGNsZWFybHkgZG9jdW1lbnQgaG93IFNlY3Rpb25OYW1lIGlzXG5pbnRlcnByZXRlZC5cblxuV2hlbiB1bnNwZWNpZmllZCAoZW1wdHkgc3RyaW5nKSwgdGhpcyB3aWxsIHJlZmVyZW5jZSB0aGUgZW50aXJlIHJlc291cmNlLlxuRm9yIHRoZSBwdXJwb3NlIG9mIHN0YXR1cywgYW4gYXR0YWNobWVudCBpcyBjb25zaWRlcmVkIHN1Y2Nlc3NmdWwgaWYgYXRcbmxlYXN0IG9uZSBzZWN0aW9uIGluIHRoZSBwYXJlbnQgcmVzb3VyY2UgYWNjZXB0cyBpdC4gRm9yIGV4YW1wbGUsIEdhdGV3YXlcbmxpc3RlbmVycyBjYW4gcmVzdHJpY3Qgd2hpY2ggUm91dGVzIGNhbiBhdHRhY2ggdG8gdGhlbSBieSBSb3V0ZSBraW5kLFxubmFtZXNwYWNlLCBvciBob3N0bmFtZS4gSWYgMSBvZiAyIEdhdGV3YXkgbGlzdGVuZXJzIGFjY2VwdCBhdHRhY2htZW50IGZyb21cbnRoZSByZWZlcmVuY2luZyBSb3V0ZSwgdGhlIFJvdXRlIE1VU1QgYmUgY29uc2lkZXJlZCBzdWNjZXNzZnVsbHlcbmF0dGFjaGVkLiBJZiBubyBHYXRld2F5IGxpc3RlbmVycyBhY2NlcHQgYXR0YWNobWVudCBmcm9tIHRoaXMgUm91dGUsIHRoZVxuUm91dGUgTVVTVCBiZSBjb25zaWRlcmVkIGRldGFjaGVkIGZyb20gdGhlIEdhdGV3YXkuXG5cblN1cHBvcnQ6IENvcmUiLCJtYXhMZW5ndGgiOjI1MywibWluTGVuZ3RoIjoxLCJwYXR0ZXJuIjoiXlthLXowLTldKFstYS16MC05XSpbYS16MC05XSk/KFxcLlthLXowLTldKFstYS16MC05XSpbYS16MC05XSk/KSokIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJwb2RUZW1wbGF0ZSI6eyJkZXNjcmlwdGlvbiI6Ik9wdGlvbmFsIHBvZCB0ZW1wbGF0ZSB1c2VkIHRvIGNvbmZpZ3VyZSB0aGUgQUNNRSBjaGFsbGVuZ2Ugc29sdmVyIHBvZHNcbnVzZWQgZm9yIEhUVFAwMSBjaGFsbGVuZ2VzLiIsInByb3BlcnRpZXMiOnsibWV0YWRhdGEiOnsiZGVzY3JpcHRpb24iOiJPYmplY3RNZXRhIG92ZXJyaWRlcyBmb3IgdGhlIHBvZCB1c2VkIHRvIHNvbHZlIEhUVFAwMSBjaGFsbGVuZ2VzLlxuT25seSB0aGUgJ2xhYmVscycgYW5kICdhbm5vdGF0aW9ucycgZmllbGRzIG1heSBiZSBzZXQuXG5JZiBsYWJlbHMgb3IgYW5ub3RhdGlvbnMgb3ZlcmxhcCB3aXRoIGluLWJ1aWx0IHZhbHVlcywgdGhlIHZhbHVlcyBoZXJlXG53aWxsIG92ZXJyaWRlIHRoZSBpbi1idWlsdCB2YWx1ZXMuIiwicHJvcGVydGllcyI6eyJhbm5vdGF0aW9ucyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJ0eXBlIjoic3RyaW5nIn0sImRlc2NyaXB0aW9uIjoiQW5ub3RhdGlvbnMgdGhhdCBzaG91bGQgYmUgYWRkZWQgdG8gdGhlIGNyZWF0ZWQgQUNNRSBIVFRQMDEgc29sdmVyIHBvZHMuIiwidHlwZSI6Im9iamVjdCJ9LCJsYWJlbHMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6IkxhYmVscyB0aGF0IHNob3VsZCBiZSBhZGRlZCB0byB0aGUgY3JlYXRlZCBBQ01FIEhUVFAwMSBzb2x2ZXIgcG9kcy4iLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJQb2RTcGVjIGRlZmluZXMgb3ZlcnJpZGVzIGZvciB0aGUgSFRUUDAxIGNoYWxsZW5nZSBzb2x2ZXIgcG9kLlxuQ2hlY2sgQUNNRUNoYWxsZW5nZVNvbHZlckhUVFAwMUluZ3Jlc3NQb2RTcGVjIHRvIGZpbmQgb3V0IGN1cnJlbnRseSBzdXBwb3J0ZWQgZmllbGRzLlxuQWxsIG90aGVyIGZpZWxkcyB3aWxsIGJlIGlnbm9yZWQuIiwicHJvcGVydGllcyI6eyJhZmZpbml0eSI6eyJkZXNjcmlwdGlvbiI6IklmIHNwZWNpZmllZCwgdGhlIHBvZCdzIHNjaGVkdWxpbmcgY29uc3RyYWludHMiLCJwcm9wZXJ0aWVzIjp7Im5vZGVBZmZpbml0eSI6eyJkZXNjcmlwdGlvbiI6IkRlc2NyaWJlcyBub2RlIGFmZmluaXR5IHNjaGVkdWxpbmcgcnVsZXMgZm9yIHRoZSBwb2QuIiwicHJvcGVydGllcyI6eyJwcmVmZXJyZWREdXJpbmdTY2hlZHVsaW5nSWdub3JlZER1cmluZ0V4ZWN1dGlvbiI6eyJkZXNjcmlwdGlvbiI6IlRoZSBzY2hlZHVsZXIgd2lsbCBwcmVmZXIgdG8gc2NoZWR1bGUgcG9kcyB0byBub2RlcyB0aGF0IHNhdGlzZnlcbnRoZSBhZmZpbml0eSBleHByZXNzaW9ucyBzcGVjaWZpZWQgYnkgdGhpcyBmaWVsZCwgYnV0IGl0IG1heSBjaG9vc2VcbmEgbm9kZSB0aGF0IHZpb2xhdGVzIG9uZSBvciBtb3JlIG9mIHRoZSBleHByZXNzaW9ucy4gVGhlIG5vZGUgdGhhdCBpc1xubW9zdCBwcmVmZXJyZWQgaXMgdGhlIG9uZSB3aXRoIHRoZSBncmVhdGVzdCBzdW0gb2Ygd2VpZ2h0cywgaS5lLlxuZm9yIGVhY2ggbm9kZSB0aGF0IG1lZXRzIGFsbCBvZiB0aGUgc2NoZWR1bGluZyByZXF1aXJlbWVudHMgKHJlc291cmNlXG5yZXF1ZXN0LCByZXF1aXJlZER1cmluZ1NjaGVkdWxpbmcgYWZmaW5pdHkgZXhwcmVzc2lvbnMsIGV0Yy4pLFxuY29tcHV0ZSBhIHN1bSBieSBpdGVyYXRpbmcgdGhyb3VnaCB0aGUgZWxlbWVudHMgb2YgdGhpcyBmaWVsZCBhbmQgYWRkaW5nXG5cIndlaWdodFwiIHRvIHRoZSBzdW0gaWYgdGhlIG5vZGUgbWF0Y2hlcyB0aGUgY29ycmVzcG9uZGluZyBtYXRjaEV4cHJlc3Npb25zOyB0aGVcbm5vZGUocykgd2l0aCB0aGUgaGlnaGVzdCBzdW0gYXJlIHRoZSBtb3N0IHByZWZlcnJlZC4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkFuIGVtcHR5IHByZWZlcnJlZCBzY2hlZHVsaW5nIHRlcm0gbWF0Y2hlcyBhbGwgb2JqZWN0cyB3aXRoIGltcGxpY2l0IHdlaWdodCAwXG4oaS5lLiBpdCdzIGEgbm8tb3ApLiBBIG51bGwgcHJlZmVycmVkIHNjaGVkdWxpbmcgdGVybSBtYXRjaGVzIG5vIG9iamVjdHMgKGkuZS4gaXMgYWxzbyBhIG5vLW9wKS4iLCJwcm9wZXJ0aWVzIjp7InByZWZlcmVuY2UiOnsiZGVzY3JpcHRpb24iOiJBIG5vZGUgc2VsZWN0b3IgdGVybSwgYXNzb2NpYXRlZCB3aXRoIHRoZSBjb3JyZXNwb25kaW5nIHdlaWdodC4iLCJwcm9wZXJ0aWVzIjp7Im1hdGNoRXhwcmVzc2lvbnMiOnsiZGVzY3JpcHRpb24iOiJBIGxpc3Qgb2Ygbm9kZSBzZWxlY3RvciByZXF1aXJlbWVudHMgYnkgbm9kZSdzIGxhYmVscy4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkEgbm9kZSBzZWxlY3RvciByZXF1aXJlbWVudCBpcyBhIHNlbGVjdG9yIHRoYXQgY29udGFpbnMgdmFsdWVzLCBhIGtleSwgYW5kIGFuIG9wZXJhdG9yXG50aGF0IHJlbGF0ZXMgdGhlIGtleSBhbmQgdmFsdWVzLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoiVGhlIGxhYmVsIGtleSB0aGF0IHRoZSBzZWxlY3RvciBhcHBsaWVzIHRvLiIsInR5cGUiOiJzdHJpbmcifSwib3BlcmF0b3IiOnsiZGVzY3JpcHRpb24iOiJSZXByZXNlbnRzIGEga2V5J3MgcmVsYXRpb25zaGlwIHRvIGEgc2V0IG9mIHZhbHVlcy5cblZhbGlkIG9wZXJhdG9ycyBhcmUgSW4sIE5vdEluLCBFeGlzdHMsIERvZXNOb3RFeGlzdC4gR3QsIGFuZCBMdC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlcyI6eyJkZXNjcmlwdGlvbiI6IkFuIGFycmF5IG9mIHN0cmluZyB2YWx1ZXMuIElmIHRoZSBvcGVyYXRvciBpcyBJbiBvciBOb3RJbixcbnRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBub24tZW1wdHkuIElmIHRoZSBvcGVyYXRvciBpcyBFeGlzdHMgb3IgRG9lc05vdEV4aXN0LFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIGVtcHR5LiBJZiB0aGUgb3BlcmF0b3IgaXMgR3Qgb3IgTHQsIHRoZSB2YWx1ZXNcbmFycmF5IG11c3QgaGF2ZSBhIHNpbmdsZSBlbGVtZW50LCB3aGljaCB3aWxsIGJlIGludGVycHJldGVkIGFzIGFuIGludGVnZXIuXG5UaGlzIGFycmF5IGlzIHJlcGxhY2VkIGR1cmluZyBhIHN0cmF0ZWdpYyBtZXJnZSBwYXRjaC4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifX0sInJlcXVpcmVkIjpbImtleSIsIm9wZXJhdG9yIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9LCJtYXRjaEZpZWxkcyI6eyJkZXNjcmlwdGlvbiI6IkEgbGlzdCBvZiBub2RlIHNlbGVjdG9yIHJlcXVpcmVtZW50cyBieSBub2RlJ3MgZmllbGRzLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQSBub2RlIHNlbGVjdG9yIHJlcXVpcmVtZW50IGlzIGEgc2VsZWN0b3IgdGhhdCBjb250YWlucyB2YWx1ZXMsIGEga2V5LCBhbmQgYW4gb3BlcmF0b3JcbnRoYXQgcmVsYXRlcyB0aGUga2V5IGFuZCB2YWx1ZXMuIiwicHJvcGVydGllcyI6eyJrZXkiOnsiZGVzY3JpcHRpb24iOiJUaGUgbGFiZWwga2V5IHRoYXQgdGhlIHNlbGVjdG9yIGFwcGxpZXMgdG8uIiwidHlwZSI6InN0cmluZyJ9LCJvcGVyYXRvciI6eyJkZXNjcmlwdGlvbiI6IlJlcHJlc2VudHMgYSBrZXkncyByZWxhdGlvbnNoaXAgdG8gYSBzZXQgb2YgdmFsdWVzLlxuVmFsaWQgb3BlcmF0b3JzIGFyZSBJbiwgTm90SW4sIEV4aXN0cywgRG9lc05vdEV4aXN0LiBHdCwgYW5kIEx0LiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWVzIjp7ImRlc2NyaXB0aW9uIjoiQW4gYXJyYXkgb2Ygc3RyaW5nIHZhbHVlcy4gSWYgdGhlIG9wZXJhdG9yIGlzIEluIG9yIE5vdEluLFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIG5vbi1lbXB0eS4gSWYgdGhlIG9wZXJhdG9yIGlzIEV4aXN0cyBvciBEb2VzTm90RXhpc3QsXG50aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgZW1wdHkuIElmIHRoZSBvcGVyYXRvciBpcyBHdCBvciBMdCwgdGhlIHZhbHVlc1xuYXJyYXkgbXVzdCBoYXZlIGEgc2luZ2xlIGVsZW1lbnQsIHdoaWNoIHdpbGwgYmUgaW50ZXJwcmV0ZWQgYXMgYW4gaW50ZWdlci5cblRoaXMgYXJyYXkgaXMgcmVwbGFjZWQgZHVyaW5nIGEgc3RyYXRlZ2ljIG1lcmdlIHBhdGNoLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9fSwicmVxdWlyZWQiOlsia2V5Iiwib3BlcmF0b3IiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn19LCJ0eXBlIjoib2JqZWN0IiwieC1rdWJlcm5ldGVzLW1hcC10eXBlIjoiYXRvbWljIn0sIndlaWdodCI6eyJkZXNjcmlwdGlvbiI6IldlaWdodCBhc3NvY2lhdGVkIHdpdGggbWF0Y2hpbmcgdGhlIGNvcnJlc3BvbmRpbmcgbm9kZVNlbGVjdG9yVGVybSwgaW4gdGhlIHJhbmdlIDEtMTAwLiIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifX0sInJlcXVpcmVkIjpbInByZWZlcmVuY2UiLCJ3ZWlnaHQiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn0sInJlcXVpcmVkRHVyaW5nU2NoZWR1bGluZ0lnbm9yZWREdXJpbmdFeGVjdXRpb24iOnsiZGVzY3JpcHRpb24iOiJJZiB0aGUgYWZmaW5pdHkgcmVxdWlyZW1lbnRzIHNwZWNpZmllZCBieSB0aGlzIGZpZWxkIGFyZSBub3QgbWV0IGF0XG5zY2hlZHVsaW5nIHRpbWUsIHRoZSBwb2Qgd2lsbCBub3QgYmUgc2NoZWR1bGVkIG9udG8gdGhlIG5vZGUuXG5JZiB0aGUgYWZmaW5pdHkgcmVxdWlyZW1lbnRzIHNwZWNpZmllZCBieSB0aGlzIGZpZWxkIGNlYXNlIHRvIGJlIG1ldFxuYXQgc29tZSBwb2ludCBkdXJpbmcgcG9kIGV4ZWN1dGlvbiAoZS5nLiBkdWUgdG8gYW4gdXBkYXRlKSwgdGhlIHN5c3RlbVxubWF5IG9yIG1heSBub3QgdHJ5IHRvIGV2ZW50dWFsbHkgZXZpY3QgdGhlIHBvZCBmcm9tIGl0cyBub2RlLiIsInByb3BlcnRpZXMiOnsibm9kZVNlbGVjdG9yVGVybXMiOnsiZGVzY3JpcHRpb24iOiJSZXF1aXJlZC4gQSBsaXN0IG9mIG5vZGUgc2VsZWN0b3IgdGVybXMuIFRoZSB0ZXJtcyBhcmUgT1JlZC4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkEgbnVsbCBvciBlbXB0eSBub2RlIHNlbGVjdG9yIHRlcm0gbWF0Y2hlcyBubyBvYmplY3RzLiBUaGUgcmVxdWlyZW1lbnRzIG9mXG50aGVtIGFyZSBBTkRlZC5cblRoZSBUb3BvbG9neVNlbGVjdG9yVGVybSB0eXBlIGltcGxlbWVudHMgYSBzdWJzZXQgb2YgdGhlIE5vZGVTZWxlY3RvclRlcm0uIiwicHJvcGVydGllcyI6eyJtYXRjaEV4cHJlc3Npb25zIjp7ImRlc2NyaXB0aW9uIjoiQSBsaXN0IG9mIG5vZGUgc2VsZWN0b3IgcmVxdWlyZW1lbnRzIGJ5IG5vZGUncyBsYWJlbHMuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJBIG5vZGUgc2VsZWN0b3IgcmVxdWlyZW1lbnQgaXMgYSBzZWxlY3RvciB0aGF0IGNvbnRhaW5zIHZhbHVlcywgYSBrZXksIGFuZCBhbiBvcGVyYXRvclxudGhhdCByZWxhdGVzIHRoZSBrZXkgYW5kIHZhbHVlcy4iLCJwcm9wZXJ0aWVzIjp7ImtleSI6eyJkZXNjcmlwdGlvbiI6IlRoZSBsYWJlbCBrZXkgdGhhdCB0aGUgc2VsZWN0b3IgYXBwbGllcyB0by4iLCJ0eXBlIjoic3RyaW5nIn0sIm9wZXJhdG9yIjp7ImRlc2NyaXB0aW9uIjoiUmVwcmVzZW50cyBhIGtleSdzIHJlbGF0aW9uc2hpcCB0byBhIHNldCBvZiB2YWx1ZXMuXG5WYWxpZCBvcGVyYXRvcnMgYXJlIEluLCBOb3RJbiwgRXhpc3RzLCBEb2VzTm90RXhpc3QuIEd0LCBhbmQgTHQuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZXMiOnsiZGVzY3JpcHRpb24iOiJBbiBhcnJheSBvZiBzdHJpbmcgdmFsdWVzLiBJZiB0aGUgb3BlcmF0b3IgaXMgSW4gb3IgTm90SW4sXG50aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgbm9uLWVtcHR5LiBJZiB0aGUgb3BlcmF0b3IgaXMgRXhpc3RzIG9yIERvZXNOb3RFeGlzdCxcbnRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBlbXB0eS4gSWYgdGhlIG9wZXJhdG9yIGlzIEd0IG9yIEx0LCB0aGUgdmFsdWVzXG5hcnJheSBtdXN0IGhhdmUgYSBzaW5nbGUgZWxlbWVudCwgd2hpY2ggd2lsbCBiZSBpbnRlcnByZXRlZCBhcyBhbiBpbnRlZ2VyLlxuVGhpcyBhcnJheSBpcyByZXBsYWNlZCBkdXJpbmcgYSBzdHJhdGVnaWMgbWVyZ2UgcGF0Y2guIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn19LCJyZXF1aXJlZCI6WyJrZXkiLCJvcGVyYXRvciJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifSwibWF0Y2hGaWVsZHMiOnsiZGVzY3JpcHRpb24iOiJBIGxpc3Qgb2Ygbm9kZSBzZWxlY3RvciByZXF1aXJlbWVudHMgYnkgbm9kZSdzIGZpZWxkcy4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkEgbm9kZSBzZWxlY3RvciByZXF1aXJlbWVudCBpcyBhIHNlbGVjdG9yIHRoYXQgY29udGFpbnMgdmFsdWVzLCBhIGtleSwgYW5kIGFuIG9wZXJhdG9yXG50aGF0IHJlbGF0ZXMgdGhlIGtleSBhbmQgdmFsdWVzLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoiVGhlIGxhYmVsIGtleSB0aGF0IHRoZSBzZWxlY3RvciBhcHBsaWVzIHRvLiIsInR5cGUiOiJzdHJpbmcifSwib3BlcmF0b3IiOnsiZGVzY3JpcHRpb24iOiJSZXByZXNlbnRzIGEga2V5J3MgcmVsYXRpb25zaGlwIHRvIGEgc2V0IG9mIHZhbHVlcy5cblZhbGlkIG9wZXJhdG9ycyBhcmUgSW4sIE5vdEluLCBFeGlzdHMsIERvZXNOb3RFeGlzdC4gR3QsIGFuZCBMdC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlcyI6eyJkZXNjcmlwdGlvbiI6IkFuIGFycmF5IG9mIHN0cmluZyB2YWx1ZXMuIElmIHRoZSBvcGVyYXRvciBpcyBJbiBvciBOb3RJbixcbnRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBub24tZW1wdHkuIElmIHRoZSBvcGVyYXRvciBpcyBFeGlzdHMgb3IgRG9lc05vdEV4aXN0LFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIGVtcHR5LiBJZiB0aGUgb3BlcmF0b3IgaXMgR3Qgb3IgTHQsIHRoZSB2YWx1ZXNcbmFycmF5IG11c3QgaGF2ZSBhIHNpbmdsZSBlbGVtZW50LCB3aGljaCB3aWxsIGJlIGludGVycHJldGVkIGFzIGFuIGludGVnZXIuXG5UaGlzIGFycmF5IGlzIHJlcGxhY2VkIGR1cmluZyBhIHN0cmF0ZWdpYyBtZXJnZSBwYXRjaC4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifX0sInJlcXVpcmVkIjpbImtleSIsIm9wZXJhdG9yIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9fSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1tYXAtdHlwZSI6ImF0b21pYyJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn19LCJyZXF1aXJlZCI6WyJub2RlU2VsZWN0b3JUZXJtcyJdLCJ0eXBlIjoib2JqZWN0IiwieC1rdWJlcm5ldGVzLW1hcC10eXBlIjoiYXRvbWljIn19LCJ0eXBlIjoib2JqZWN0In0sInBvZEFmZmluaXR5Ijp7ImRlc2NyaXB0aW9uIjoiRGVzY3JpYmVzIHBvZCBhZmZpbml0eSBzY2hlZHVsaW5nIHJ1bGVzIChlLmcuIGNvLWxvY2F0ZSB0aGlzIHBvZCBpbiB0aGUgc2FtZSBub2RlLCB6b25lLCBldGMuIGFzIHNvbWUgb3RoZXIgcG9kKHMpKS4iLCJwcm9wZXJ0aWVzIjp7InByZWZlcnJlZER1cmluZ1NjaGVkdWxpbmdJZ25vcmVkRHVyaW5nRXhlY3V0aW9uIjp7ImRlc2NyaXB0aW9uIjoiVGhlIHNjaGVkdWxlciB3aWxsIHByZWZlciB0byBzY2hlZHVsZSBwb2RzIHRvIG5vZGVzIHRoYXQgc2F0aXNmeVxudGhlIGFmZmluaXR5IGV4cHJlc3Npb25zIHNwZWNpZmllZCBieSB0aGlzIGZpZWxkLCBidXQgaXQgbWF5IGNob29zZVxuYSBub2RlIHRoYXQgdmlvbGF0ZXMgb25lIG9yIG1vcmUgb2YgdGhlIGV4cHJlc3Npb25zLiBUaGUgbm9kZSB0aGF0IGlzXG5tb3N0IHByZWZlcnJlZCBpcyB0aGUgb25lIHdpdGggdGhlIGdyZWF0ZXN0IHN1bSBvZiB3ZWlnaHRzLCBpLmUuXG5mb3IgZWFjaCBub2RlIHRoYXQgbWVldHMgYWxsIG9mIHRoZSBzY2hlZHVsaW5nIHJlcXVpcmVtZW50cyAocmVzb3VyY2VcbnJlcXVlc3QsIHJlcXVpcmVkRHVyaW5nU2NoZWR1bGluZyBhZmZpbml0eSBleHByZXNzaW9ucywgZXRjLiksXG5jb21wdXRlIGEgc3VtIGJ5IGl0ZXJhdGluZyB0aHJvdWdoIHRoZSBlbGVtZW50cyBvZiB0aGlzIGZpZWxkIGFuZCBhZGRpbmdcblwid2VpZ2h0XCIgdG8gdGhlIHN1bSBpZiB0aGUgbm9kZSBoYXMgcG9kcyB3aGljaCBtYXRjaGVzIHRoZSBjb3JyZXNwb25kaW5nIHBvZEFmZmluaXR5VGVybTsgdGhlXG5ub2RlKHMpIHdpdGggdGhlIGhpZ2hlc3Qgc3VtIGFyZSB0aGUgbW9zdCBwcmVmZXJyZWQuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJUaGUgd2VpZ2h0cyBvZiBhbGwgb2YgdGhlIG1hdGNoZWQgV2VpZ2h0ZWRQb2RBZmZpbml0eVRlcm0gZmllbGRzIGFyZSBhZGRlZCBwZXItbm9kZSB0byBmaW5kIHRoZSBtb3N0IHByZWZlcnJlZCBub2RlKHMpIiwicHJvcGVydGllcyI6eyJwb2RBZmZpbml0eVRlcm0iOnsiZGVzY3JpcHRpb24iOiJSZXF1aXJlZC4gQSBwb2QgYWZmaW5pdHkgdGVybSwgYXNzb2NpYXRlZCB3aXRoIHRoZSBjb3JyZXNwb25kaW5nIHdlaWdodC4iLCJwcm9wZXJ0aWVzIjp7ImxhYmVsU2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJBIGxhYmVsIHF1ZXJ5IG92ZXIgYSBzZXQgb2YgcmVzb3VyY2VzLCBpbiB0aGlzIGNhc2UgcG9kcy5cbklmIGl0J3MgbnVsbCwgdGhpcyBQb2RBZmZpbml0eVRlcm0gbWF0Y2hlcyB3aXRoIG5vIFBvZHMuIiwicHJvcGVydGllcyI6eyJtYXRjaEV4cHJlc3Npb25zIjp7ImRlc2NyaXB0aW9uIjoibWF0Y2hFeHByZXNzaW9ucyBpcyBhIGxpc3Qgb2YgbGFiZWwgc2VsZWN0b3IgcmVxdWlyZW1lbnRzLiBUaGUgcmVxdWlyZW1lbnRzIGFyZSBBTkRlZC4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkEgbGFiZWwgc2VsZWN0b3IgcmVxdWlyZW1lbnQgaXMgYSBzZWxlY3RvciB0aGF0IGNvbnRhaW5zIHZhbHVlcywgYSBrZXksIGFuZCBhbiBvcGVyYXRvciB0aGF0XG5yZWxhdGVzIHRoZSBrZXkgYW5kIHZhbHVlcy4iLCJwcm9wZXJ0aWVzIjp7ImtleSI6eyJkZXNjcmlwdGlvbiI6ImtleSBpcyB0aGUgbGFiZWwga2V5IHRoYXQgdGhlIHNlbGVjdG9yIGFwcGxpZXMgdG8uIiwidHlwZSI6InN0cmluZyJ9LCJvcGVyYXRvciI6eyJkZXNjcmlwdGlvbiI6Im9wZXJhdG9yIHJlcHJlc2VudHMgYSBrZXkncyByZWxhdGlvbnNoaXAgdG8gYSBzZXQgb2YgdmFsdWVzLlxuVmFsaWQgb3BlcmF0b3JzIGFyZSBJbiwgTm90SW4sIEV4aXN0cyBhbmQgRG9lc05vdEV4aXN0LiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWVzIjp7ImRlc2NyaXB0aW9uIjoidmFsdWVzIGlzIGFuIGFycmF5IG9mIHN0cmluZyB2YWx1ZXMuIElmIHRoZSBvcGVyYXRvciBpcyBJbiBvciBOb3RJbixcbnRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBub24tZW1wdHkuIElmIHRoZSBvcGVyYXRvciBpcyBFeGlzdHMgb3IgRG9lc05vdEV4aXN0LFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIGVtcHR5LiBUaGlzIGFycmF5IGlzIHJlcGxhY2VkIGR1cmluZyBhIHN0cmF0ZWdpY1xubWVyZ2UgcGF0Y2guIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn19LCJyZXF1aXJlZCI6WyJrZXkiLCJvcGVyYXRvciJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifSwibWF0Y2hMYWJlbHMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6Im1hdGNoTGFiZWxzIGlzIGEgbWFwIG9mIHtrZXksdmFsdWV9IHBhaXJzLiBBIHNpbmdsZSB7a2V5LHZhbHVlfSBpbiB0aGUgbWF0Y2hMYWJlbHNcbm1hcCBpcyBlcXVpdmFsZW50IHRvIGFuIGVsZW1lbnQgb2YgbWF0Y2hFeHByZXNzaW9ucywgd2hvc2Uga2V5IGZpZWxkIGlzIFwia2V5XCIsIHRoZVxub3BlcmF0b3IgaXMgXCJJblwiLCBhbmQgdGhlIHZhbHVlcyBhcnJheSBjb250YWlucyBvbmx5IFwidmFsdWVcIi4gVGhlIHJlcXVpcmVtZW50cyBhcmUgQU5EZWQuIiwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1tYXAtdHlwZSI6ImF0b21pYyJ9LCJtYXRjaExhYmVsS2V5cyI6eyJkZXNjcmlwdGlvbiI6Ik1hdGNoTGFiZWxLZXlzIGlzIGEgc2V0IG9mIHBvZCBsYWJlbCBrZXlzIHRvIHNlbGVjdCB3aGljaCBwb2RzIHdpbGxcbmJlIHRha2VuIGludG8gY29uc2lkZXJhdGlvbi4gVGhlIGtleXMgYXJlIHVzZWQgdG8gbG9va3VwIHZhbHVlcyBmcm9tIHRoZVxuaW5jb21pbmcgcG9kIGxhYmVscywgdGhvc2Uga2V5LXZhbHVlIGxhYmVscyBhcmUgbWVyZ2VkIHdpdGggYGxhYmVsU2VsZWN0b3JgIGFzIGBrZXkgaW4gKHZhbHVlKWBcbnRvIHNlbGVjdCB0aGUgZ3JvdXAgb2YgZXhpc3RpbmcgcG9kcyB3aGljaCBwb2RzIHdpbGwgYmUgdGFrZW4gaW50byBjb25zaWRlcmF0aW9uXG5mb3IgdGhlIGluY29taW5nIHBvZCdzIHBvZCAoYW50aSkgYWZmaW5pdHkuIEtleXMgdGhhdCBkb24ndCBleGlzdCBpbiB0aGUgaW5jb21pbmdcbnBvZCBsYWJlbHMgd2lsbCBiZSBpZ25vcmVkLiBUaGUgZGVmYXVsdCB2YWx1ZSBpcyBlbXB0eS5cblRoZSBzYW1lIGtleSBpcyBmb3JiaWRkZW4gdG8gZXhpc3QgaW4gYm90aCBtYXRjaExhYmVsS2V5cyBhbmQgbGFiZWxTZWxlY3Rvci5cbkFsc28sIG1hdGNoTGFiZWxLZXlzIGNhbm5vdCBiZSBzZXQgd2hlbiBsYWJlbFNlbGVjdG9yIGlzbid0IHNldC5cblRoaXMgaXMgYSBiZXRhIGZpZWxkIGFuZCByZXF1aXJlcyBlbmFibGluZyBNYXRjaExhYmVsS2V5c0luUG9kQWZmaW5pdHkgZmVhdHVyZSBnYXRlIChlbmFibGVkIGJ5IGRlZmF1bHQpLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9LCJtaXNtYXRjaExhYmVsS2V5cyI6eyJkZXNjcmlwdGlvbiI6Ik1pc21hdGNoTGFiZWxLZXlzIGlzIGEgc2V0IG9mIHBvZCBsYWJlbCBrZXlzIHRvIHNlbGVjdCB3aGljaCBwb2RzIHdpbGxcbmJlIHRha2VuIGludG8gY29uc2lkZXJhdGlvbi4gVGhlIGtleXMgYXJlIHVzZWQgdG8gbG9va3VwIHZhbHVlcyBmcm9tIHRoZVxuaW5jb21pbmcgcG9kIGxhYmVscywgdGhvc2Uga2V5LXZhbHVlIGxhYmVscyBhcmUgbWVyZ2VkIHdpdGggYGxhYmVsU2VsZWN0b3JgIGFzIGBrZXkgbm90aW4gKHZhbHVlKWBcbnRvIHNlbGVjdCB0aGUgZ3JvdXAgb2YgZXhpc3RpbmcgcG9kcyB3aGljaCBwb2RzIHdpbGwgYmUgdGFrZW4gaW50byBjb25zaWRlcmF0aW9uXG5mb3IgdGhlIGluY29taW5nIHBvZCdzIHBvZCAoYW50aSkgYWZmaW5pdHkuIEtleXMgdGhhdCBkb24ndCBleGlzdCBpbiB0aGUgaW5jb21pbmdcbnBvZCBsYWJlbHMgd2lsbCBiZSBpZ25vcmVkLiBUaGUgZGVmYXVsdCB2YWx1ZSBpcyBlbXB0eS5cblRoZSBzYW1lIGtleSBpcyBmb3JiaWRkZW4gdG8gZXhpc3QgaW4gYm90aCBtaXNtYXRjaExhYmVsS2V5cyBhbmQgbGFiZWxTZWxlY3Rvci5cbkFsc28sIG1pc21hdGNoTGFiZWxLZXlzIGNhbm5vdCBiZSBzZXQgd2hlbiBsYWJlbFNlbGVjdG9yIGlzbid0IHNldC5cblRoaXMgaXMgYSBiZXRhIGZpZWxkIGFuZCByZXF1aXJlcyBlbmFibGluZyBNYXRjaExhYmVsS2V5c0luUG9kQWZmaW5pdHkgZmVhdHVyZSBnYXRlIChlbmFibGVkIGJ5IGRlZmF1bHQpLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9LCJuYW1lc3BhY2VTZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6IkEgbGFiZWwgcXVlcnkgb3ZlciB0aGUgc2V0IG9mIG5hbWVzcGFjZXMgdGhhdCB0aGUgdGVybSBhcHBsaWVzIHRvLlxuVGhlIHRlcm0gaXMgYXBwbGllZCB0byB0aGUgdW5pb24gb2YgdGhlIG5hbWVzcGFjZXMgc2VsZWN0ZWQgYnkgdGhpcyBmaWVsZFxuYW5kIHRoZSBvbmVzIGxpc3RlZCBpbiB0aGUgbmFtZXNwYWNlcyBmaWVsZC5cbm51bGwgc2VsZWN0b3IgYW5kIG51bGwgb3IgZW1wdHkgbmFtZXNwYWNlcyBsaXN0IG1lYW5zIFwidGhpcyBwb2QncyBuYW1lc3BhY2VcIi5cbkFuIGVtcHR5IHNlbGVjdG9yICh7fSkgbWF0Y2hlcyBhbGwgbmFtZXNwYWNlcy4iLCJwcm9wZXJ0aWVzIjp7Im1hdGNoRXhwcmVzc2lvbnMiOnsiZGVzY3JpcHRpb24iOiJtYXRjaEV4cHJlc3Npb25zIGlzIGEgbGlzdCBvZiBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudHMuIFRoZSByZXF1aXJlbWVudHMgYXJlIEFORGVkLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQSBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudCBpcyBhIHNlbGVjdG9yIHRoYXQgY29udGFpbnMgdmFsdWVzLCBhIGtleSwgYW5kIGFuIG9wZXJhdG9yIHRoYXRcbnJlbGF0ZXMgdGhlIGtleSBhbmQgdmFsdWVzLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoia2V5IGlzIHRoZSBsYWJlbCBrZXkgdGhhdCB0aGUgc2VsZWN0b3IgYXBwbGllcyB0by4iLCJ0eXBlIjoic3RyaW5nIn0sIm9wZXJhdG9yIjp7ImRlc2NyaXB0aW9uIjoib3BlcmF0b3IgcmVwcmVzZW50cyBhIGtleSdzIHJlbGF0aW9uc2hpcCB0byBhIHNldCBvZiB2YWx1ZXMuXG5WYWxpZCBvcGVyYXRvcnMgYXJlIEluLCBOb3RJbiwgRXhpc3RzIGFuZCBEb2VzTm90RXhpc3QuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZXMiOnsiZGVzY3JpcHRpb24iOiJ2YWx1ZXMgaXMgYW4gYXJyYXkgb2Ygc3RyaW5nIHZhbHVlcy4gSWYgdGhlIG9wZXJhdG9yIGlzIEluIG9yIE5vdEluLFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIG5vbi1lbXB0eS4gSWYgdGhlIG9wZXJhdG9yIGlzIEV4aXN0cyBvciBEb2VzTm90RXhpc3QsXG50aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgZW1wdHkuIFRoaXMgYXJyYXkgaXMgcmVwbGFjZWQgZHVyaW5nIGEgc3RyYXRlZ2ljXG5tZXJnZSBwYXRjaC4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifX0sInJlcXVpcmVkIjpbImtleSIsIm9wZXJhdG9yIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9LCJtYXRjaExhYmVscyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJ0eXBlIjoic3RyaW5nIn0sImRlc2NyaXB0aW9uIjoibWF0Y2hMYWJlbHMgaXMgYSBtYXAgb2Yge2tleSx2YWx1ZX0gcGFpcnMuIEEgc2luZ2xlIHtrZXksdmFsdWV9IGluIHRoZSBtYXRjaExhYmVsc1xubWFwIGlzIGVxdWl2YWxlbnQgdG8gYW4gZWxlbWVudCBvZiBtYXRjaEV4cHJlc3Npb25zLCB3aG9zZSBrZXkgZmllbGQgaXMgXCJrZXlcIiwgdGhlXG5vcGVyYXRvciBpcyBcIkluXCIsIGFuZCB0aGUgdmFsdWVzIGFycmF5IGNvbnRhaW5zIG9ubHkgXCJ2YWx1ZVwiLiBUaGUgcmVxdWlyZW1lbnRzIGFyZSBBTkRlZC4iLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0IiwieC1rdWJlcm5ldGVzLW1hcC10eXBlIjoiYXRvbWljIn0sIm5hbWVzcGFjZXMiOnsiZGVzY3JpcHRpb24iOiJuYW1lc3BhY2VzIHNwZWNpZmllcyBhIHN0YXRpYyBsaXN0IG9mIG5hbWVzcGFjZSBuYW1lcyB0aGF0IHRoZSB0ZXJtIGFwcGxpZXMgdG8uXG5UaGUgdGVybSBpcyBhcHBsaWVkIHRvIHRoZSB1bmlvbiBvZiB0aGUgbmFtZXNwYWNlcyBsaXN0ZWQgaW4gdGhpcyBmaWVsZFxuYW5kIHRoZSBvbmVzIHNlbGVjdGVkIGJ5IG5hbWVzcGFjZVNlbGVjdG9yLlxubnVsbCBvciBlbXB0eSBuYW1lc3BhY2VzIGxpc3QgYW5kIG51bGwgbmFtZXNwYWNlU2VsZWN0b3IgbWVhbnMgXCJ0aGlzIHBvZCdzIG5hbWVzcGFjZVwiLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9LCJ0b3BvbG9neUtleSI6eyJkZXNjcmlwdGlvbiI6IlRoaXMgcG9kIHNob3VsZCBiZSBjby1sb2NhdGVkIChhZmZpbml0eSkgb3Igbm90IGNvLWxvY2F0ZWQgKGFudGktYWZmaW5pdHkpIHdpdGggdGhlIHBvZHMgbWF0Y2hpbmdcbnRoZSBsYWJlbFNlbGVjdG9yIGluIHRoZSBzcGVjaWZpZWQgbmFtZXNwYWNlcywgd2hlcmUgY28tbG9jYXRlZCBpcyBkZWZpbmVkIGFzIHJ1bm5pbmcgb24gYSBub2RlXG53aG9zZSB2YWx1ZSBvZiB0aGUgbGFiZWwgd2l0aCBrZXkgdG9wb2xvZ3lLZXkgbWF0Y2hlcyB0aGF0IG9mIGFueSBub2RlIG9uIHdoaWNoIGFueSBvZiB0aGVcbnNlbGVjdGVkIHBvZHMgaXMgcnVubmluZy5cbkVtcHR5IHRvcG9sb2d5S2V5IGlzIG5vdCBhbGxvd2VkLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbInRvcG9sb2d5S2V5Il0sInR5cGUiOiJvYmplY3QifSwid2VpZ2h0Ijp7ImRlc2NyaXB0aW9uIjoid2VpZ2h0IGFzc29jaWF0ZWQgd2l0aCBtYXRjaGluZyB0aGUgY29ycmVzcG9uZGluZyBwb2RBZmZpbml0eVRlcm0sXG5pbiB0aGUgcmFuZ2UgMS0xMDAuIiwiZm9ybWF0IjoiaW50MzIiLCJ0eXBlIjoiaW50ZWdlciJ9fSwicmVxdWlyZWQiOlsicG9kQWZmaW5pdHlUZXJtIiwid2VpZ2h0Il0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9LCJyZXF1aXJlZER1cmluZ1NjaGVkdWxpbmdJZ25vcmVkRHVyaW5nRXhlY3V0aW9uIjp7ImRlc2NyaXB0aW9uIjoiSWYgdGhlIGFmZmluaXR5IHJlcXVpcmVtZW50cyBzcGVjaWZpZWQgYnkgdGhpcyBmaWVsZCBhcmUgbm90IG1ldCBhdFxuc2NoZWR1bGluZyB0aW1lLCB0aGUgcG9kIHdpbGwgbm90IGJlIHNjaGVkdWxlZCBvbnRvIHRoZSBub2RlLlxuSWYgdGhlIGFmZmluaXR5IHJlcXVpcmVtZW50cyBzcGVjaWZpZWQgYnkgdGhpcyBmaWVsZCBjZWFzZSB0byBiZSBtZXRcbmF0IHNvbWUgcG9pbnQgZHVyaW5nIHBvZCBleGVjdXRpb24gKGUuZy4gZHVlIHRvIGEgcG9kIGxhYmVsIHVwZGF0ZSksIHRoZVxuc3lzdGVtIG1heSBvciBtYXkgbm90IHRyeSB0byBldmVudHVhbGx5IGV2aWN0IHRoZSBwb2QgZnJvbSBpdHMgbm9kZS5cbldoZW4gdGhlcmUgYXJlIG11bHRpcGxlIGVsZW1lbnRzLCB0aGUgbGlzdHMgb2Ygbm9kZXMgY29ycmVzcG9uZGluZyB0byBlYWNoXG5wb2RBZmZpbml0eVRlcm0gYXJlIGludGVyc2VjdGVkLCBpLmUuIGFsbCB0ZXJtcyBtdXN0IGJlIHNhdGlzZmllZC4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkRlZmluZXMgYSBzZXQgb2YgcG9kcyAobmFtZWx5IHRob3NlIG1hdGNoaW5nIHRoZSBsYWJlbFNlbGVjdG9yXG5yZWxhdGl2ZSB0byB0aGUgZ2l2ZW4gbmFtZXNwYWNlKHMpKSB0aGF0IHRoaXMgcG9kIHNob3VsZCBiZVxuY28tbG9jYXRlZCAoYWZmaW5pdHkpIG9yIG5vdCBjby1sb2NhdGVkIChhbnRpLWFmZmluaXR5KSB3aXRoLFxud2hlcmUgY28tbG9jYXRlZCBpcyBkZWZpbmVkIGFzIHJ1bm5pbmcgb24gYSBub2RlIHdob3NlIHZhbHVlIG9mXG50aGUgbGFiZWwgd2l0aCBrZXkgXHUwMDNjdG9wb2xvZ3lLZXlcdTAwM2UgbWF0Y2hlcyB0aGF0IG9mIGFueSBub2RlIG9uIHdoaWNoXG5hIHBvZCBvZiB0aGUgc2V0IG9mIHBvZHMgaXMgcnVubmluZyIsInByb3BlcnRpZXMiOnsibGFiZWxTZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6IkEgbGFiZWwgcXVlcnkgb3ZlciBhIHNldCBvZiByZXNvdXJjZXMsIGluIHRoaXMgY2FzZSBwb2RzLlxuSWYgaXQncyBudWxsLCB0aGlzIFBvZEFmZmluaXR5VGVybSBtYXRjaGVzIHdpdGggbm8gUG9kcy4iLCJwcm9wZXJ0aWVzIjp7Im1hdGNoRXhwcmVzc2lvbnMiOnsiZGVzY3JpcHRpb24iOiJtYXRjaEV4cHJlc3Npb25zIGlzIGEgbGlzdCBvZiBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudHMuIFRoZSByZXF1aXJlbWVudHMgYXJlIEFORGVkLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQSBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudCBpcyBhIHNlbGVjdG9yIHRoYXQgY29udGFpbnMgdmFsdWVzLCBhIGtleSwgYW5kIGFuIG9wZXJhdG9yIHRoYXRcbnJlbGF0ZXMgdGhlIGtleSBhbmQgdmFsdWVzLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoia2V5IGlzIHRoZSBsYWJlbCBrZXkgdGhhdCB0aGUgc2VsZWN0b3IgYXBwbGllcyB0by4iLCJ0eXBlIjoic3RyaW5nIn0sIm9wZXJhdG9yIjp7ImRlc2NyaXB0aW9uIjoib3BlcmF0b3IgcmVwcmVzZW50cyBhIGtleSdzIHJlbGF0aW9uc2hpcCB0byBhIHNldCBvZiB2YWx1ZXMuXG5WYWxpZCBvcGVyYXRvcnMgYXJlIEluLCBOb3RJbiwgRXhpc3RzIGFuZCBEb2VzTm90RXhpc3QuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZXMiOnsiZGVzY3JpcHRpb24iOiJ2YWx1ZXMgaXMgYW4gYXJyYXkgb2Ygc3RyaW5nIHZhbHVlcy4gSWYgdGhlIG9wZXJhdG9yIGlzIEluIG9yIE5vdEluLFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIG5vbi1lbXB0eS4gSWYgdGhlIG9wZXJhdG9yIGlzIEV4aXN0cyBvciBEb2VzTm90RXhpc3QsXG50aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgZW1wdHkuIFRoaXMgYXJyYXkgaXMgcmVwbGFjZWQgZHVyaW5nIGEgc3RyYXRlZ2ljXG5tZXJnZSBwYXRjaC4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifX0sInJlcXVpcmVkIjpbImtleSIsIm9wZXJhdG9yIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9LCJtYXRjaExhYmVscyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJ0eXBlIjoic3RyaW5nIn0sImRlc2NyaXB0aW9uIjoibWF0Y2hMYWJlbHMgaXMgYSBtYXAgb2Yge2tleSx2YWx1ZX0gcGFpcnMuIEEgc2luZ2xlIHtrZXksdmFsdWV9IGluIHRoZSBtYXRjaExhYmVsc1xubWFwIGlzIGVxdWl2YWxlbnQgdG8gYW4gZWxlbWVudCBvZiBtYXRjaEV4cHJlc3Npb25zLCB3aG9zZSBrZXkgZmllbGQgaXMgXCJrZXlcIiwgdGhlXG5vcGVyYXRvciBpcyBcIkluXCIsIGFuZCB0aGUgdmFsdWVzIGFycmF5IGNvbnRhaW5zIG9ubHkgXCJ2YWx1ZVwiLiBUaGUgcmVxdWlyZW1lbnRzIGFyZSBBTkRlZC4iLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0IiwieC1rdWJlcm5ldGVzLW1hcC10eXBlIjoiYXRvbWljIn0sIm1hdGNoTGFiZWxLZXlzIjp7ImRlc2NyaXB0aW9uIjoiTWF0Y2hMYWJlbEtleXMgaXMgYSBzZXQgb2YgcG9kIGxhYmVsIGtleXMgdG8gc2VsZWN0IHdoaWNoIHBvZHMgd2lsbFxuYmUgdGFrZW4gaW50byBjb25zaWRlcmF0aW9uLiBUaGUga2V5cyBhcmUgdXNlZCB0byBsb29rdXAgdmFsdWVzIGZyb20gdGhlXG5pbmNvbWluZyBwb2QgbGFiZWxzLCB0aG9zZSBrZXktdmFsdWUgbGFiZWxzIGFyZSBtZXJnZWQgd2l0aCBgbGFiZWxTZWxlY3RvcmAgYXMgYGtleSBpbiAodmFsdWUpYFxudG8gc2VsZWN0IHRoZSBncm91cCBvZiBleGlzdGluZyBwb2RzIHdoaWNoIHBvZHMgd2lsbCBiZSB0YWtlbiBpbnRvIGNvbnNpZGVyYXRpb25cbmZvciB0aGUgaW5jb21pbmcgcG9kJ3MgcG9kIChhbnRpKSBhZmZpbml0eS4gS2V5cyB0aGF0IGRvbid0IGV4aXN0IGluIHRoZSBpbmNvbWluZ1xucG9kIGxhYmVscyB3aWxsIGJlIGlnbm9yZWQuIFRoZSBkZWZhdWx0IHZhbHVlIGlzIGVtcHR5LlxuVGhlIHNhbWUga2V5IGlzIGZvcmJpZGRlbiB0byBleGlzdCBpbiBib3RoIG1hdGNoTGFiZWxLZXlzIGFuZCBsYWJlbFNlbGVjdG9yLlxuQWxzbywgbWF0Y2hMYWJlbEtleXMgY2Fubm90IGJlIHNldCB3aGVuIGxhYmVsU2VsZWN0b3IgaXNuJ3Qgc2V0LlxuVGhpcyBpcyBhIGJldGEgZmllbGQgYW5kIHJlcXVpcmVzIGVuYWJsaW5nIE1hdGNoTGFiZWxLZXlzSW5Qb2RBZmZpbml0eSBmZWF0dXJlIGdhdGUgKGVuYWJsZWQgYnkgZGVmYXVsdCkuIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn0sIm1pc21hdGNoTGFiZWxLZXlzIjp7ImRlc2NyaXB0aW9uIjoiTWlzbWF0Y2hMYWJlbEtleXMgaXMgYSBzZXQgb2YgcG9kIGxhYmVsIGtleXMgdG8gc2VsZWN0IHdoaWNoIHBvZHMgd2lsbFxuYmUgdGFrZW4gaW50byBjb25zaWRlcmF0aW9uLiBUaGUga2V5cyBhcmUgdXNlZCB0byBsb29rdXAgdmFsdWVzIGZyb20gdGhlXG5pbmNvbWluZyBwb2QgbGFiZWxzLCB0aG9zZSBrZXktdmFsdWUgbGFiZWxzIGFyZSBtZXJnZWQgd2l0aCBgbGFiZWxTZWxlY3RvcmAgYXMgYGtleSBub3RpbiAodmFsdWUpYFxudG8gc2VsZWN0IHRoZSBncm91cCBvZiBleGlzdGluZyBwb2RzIHdoaWNoIHBvZHMgd2lsbCBiZSB0YWtlbiBpbnRvIGNvbnNpZGVyYXRpb25cbmZvciB0aGUgaW5jb21pbmcgcG9kJ3MgcG9kIChhbnRpKSBhZmZpbml0eS4gS2V5cyB0aGF0IGRvbid0IGV4aXN0IGluIHRoZSBpbmNvbWluZ1xucG9kIGxhYmVscyB3aWxsIGJlIGlnbm9yZWQuIFRoZSBkZWZhdWx0IHZhbHVlIGlzIGVtcHR5LlxuVGhlIHNhbWUga2V5IGlzIGZvcmJpZGRlbiB0byBleGlzdCBpbiBib3RoIG1pc21hdGNoTGFiZWxLZXlzIGFuZCBsYWJlbFNlbGVjdG9yLlxuQWxzbywgbWlzbWF0Y2hMYWJlbEtleXMgY2Fubm90IGJlIHNldCB3aGVuIGxhYmVsU2VsZWN0b3IgaXNuJ3Qgc2V0LlxuVGhpcyBpcyBhIGJldGEgZmllbGQgYW5kIHJlcXVpcmVzIGVuYWJsaW5nIE1hdGNoTGFiZWxLZXlzSW5Qb2RBZmZpbml0eSBmZWF0dXJlIGdhdGUgKGVuYWJsZWQgYnkgZGVmYXVsdCkuIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn0sIm5hbWVzcGFjZVNlbGVjdG9yIjp7ImRlc2NyaXB0aW9uIjoiQSBsYWJlbCBxdWVyeSBvdmVyIHRoZSBzZXQgb2YgbmFtZXNwYWNlcyB0aGF0IHRoZSB0ZXJtIGFwcGxpZXMgdG8uXG5UaGUgdGVybSBpcyBhcHBsaWVkIHRvIHRoZSB1bmlvbiBvZiB0aGUgbmFtZXNwYWNlcyBzZWxlY3RlZCBieSB0aGlzIGZpZWxkXG5hbmQgdGhlIG9uZXMgbGlzdGVkIGluIHRoZSBuYW1lc3BhY2VzIGZpZWxkLlxubnVsbCBzZWxlY3RvciBhbmQgbnVsbCBvciBlbXB0eSBuYW1lc3BhY2VzIGxpc3QgbWVhbnMgXCJ0aGlzIHBvZCdzIG5hbWVzcGFjZVwiLlxuQW4gZW1wdHkgc2VsZWN0b3IgKHt9KSBtYXRjaGVzIGFsbCBuYW1lc3BhY2VzLiIsInByb3BlcnRpZXMiOnsibWF0Y2hFeHByZXNzaW9ucyI6eyJkZXNjcmlwdGlvbiI6Im1hdGNoRXhwcmVzc2lvbnMgaXMgYSBsaXN0IG9mIGxhYmVsIHNlbGVjdG9yIHJlcXVpcmVtZW50cy4gVGhlIHJlcXVpcmVtZW50cyBhcmUgQU5EZWQuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJBIGxhYmVsIHNlbGVjdG9yIHJlcXVpcmVtZW50IGlzIGEgc2VsZWN0b3IgdGhhdCBjb250YWlucyB2YWx1ZXMsIGEga2V5LCBhbmQgYW4gb3BlcmF0b3IgdGhhdFxucmVsYXRlcyB0aGUga2V5IGFuZCB2YWx1ZXMuIiwicHJvcGVydGllcyI6eyJrZXkiOnsiZGVzY3JpcHRpb24iOiJrZXkgaXMgdGhlIGxhYmVsIGtleSB0aGF0IHRoZSBzZWxlY3RvciBhcHBsaWVzIHRvLiIsInR5cGUiOiJzdHJpbmcifSwib3BlcmF0b3IiOnsiZGVzY3JpcHRpb24iOiJvcGVyYXRvciByZXByZXNlbnRzIGEga2V5J3MgcmVsYXRpb25zaGlwIHRvIGEgc2V0IG9mIHZhbHVlcy5cblZhbGlkIG9wZXJhdG9ycyBhcmUgSW4sIE5vdEluLCBFeGlzdHMgYW5kIERvZXNOb3RFeGlzdC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlcyI6eyJkZXNjcmlwdGlvbiI6InZhbHVlcyBpcyBhbiBhcnJheSBvZiBzdHJpbmcgdmFsdWVzLiBJZiB0aGUgb3BlcmF0b3IgaXMgSW4gb3IgTm90SW4sXG50aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgbm9uLWVtcHR5LiBJZiB0aGUgb3BlcmF0b3IgaXMgRXhpc3RzIG9yIERvZXNOb3RFeGlzdCxcbnRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBlbXB0eS4gVGhpcyBhcnJheSBpcyByZXBsYWNlZCBkdXJpbmcgYSBzdHJhdGVnaWNcbm1lcmdlIHBhdGNoLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9fSwicmVxdWlyZWQiOlsia2V5Iiwib3BlcmF0b3IiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn0sIm1hdGNoTGFiZWxzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InR5cGUiOiJzdHJpbmcifSwiZGVzY3JpcHRpb24iOiJtYXRjaExhYmVscyBpcyBhIG1hcCBvZiB7a2V5LHZhbHVlfSBwYWlycy4gQSBzaW5nbGUge2tleSx2YWx1ZX0gaW4gdGhlIG1hdGNoTGFiZWxzXG5tYXAgaXMgZXF1aXZhbGVudCB0byBhbiBlbGVtZW50IG9mIG1hdGNoRXhwcmVzc2lvbnMsIHdob3NlIGtleSBmaWVsZCBpcyBcImtleVwiLCB0aGVcbm9wZXJhdG9yIGlzIFwiSW5cIiwgYW5kIHRoZSB2YWx1ZXMgYXJyYXkgY29udGFpbnMgb25seSBcInZhbHVlXCIuIFRoZSByZXF1aXJlbWVudHMgYXJlIEFORGVkLiIsInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtbWFwLXR5cGUiOiJhdG9taWMifSwibmFtZXNwYWNlcyI6eyJkZXNjcmlwdGlvbiI6Im5hbWVzcGFjZXMgc3BlY2lmaWVzIGEgc3RhdGljIGxpc3Qgb2YgbmFtZXNwYWNlIG5hbWVzIHRoYXQgdGhlIHRlcm0gYXBwbGllcyB0by5cblRoZSB0ZXJtIGlzIGFwcGxpZWQgdG8gdGhlIHVuaW9uIG9mIHRoZSBuYW1lc3BhY2VzIGxpc3RlZCBpbiB0aGlzIGZpZWxkXG5hbmQgdGhlIG9uZXMgc2VsZWN0ZWQgYnkgbmFtZXNwYWNlU2VsZWN0b3IuXG5udWxsIG9yIGVtcHR5IG5hbWVzcGFjZXMgbGlzdCBhbmQgbnVsbCBuYW1lc3BhY2VTZWxlY3RvciBtZWFucyBcInRoaXMgcG9kJ3MgbmFtZXNwYWNlXCIuIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn0sInRvcG9sb2d5S2V5Ijp7ImRlc2NyaXB0aW9uIjoiVGhpcyBwb2Qgc2hvdWxkIGJlIGNvLWxvY2F0ZWQgKGFmZmluaXR5KSBvciBub3QgY28tbG9jYXRlZCAoYW50aS1hZmZpbml0eSkgd2l0aCB0aGUgcG9kcyBtYXRjaGluZ1xudGhlIGxhYmVsU2VsZWN0b3IgaW4gdGhlIHNwZWNpZmllZCBuYW1lc3BhY2VzLCB3aGVyZSBjby1sb2NhdGVkIGlzIGRlZmluZWQgYXMgcnVubmluZyBvbiBhIG5vZGVcbndob3NlIHZhbHVlIG9mIHRoZSBsYWJlbCB3aXRoIGtleSB0b3BvbG9neUtleSBtYXRjaGVzIHRoYXQgb2YgYW55IG5vZGUgb24gd2hpY2ggYW55IG9mIHRoZVxuc2VsZWN0ZWQgcG9kcyBpcyBydW5uaW5nLlxuRW1wdHkgdG9wb2xvZ3lLZXkgaXMgbm90IGFsbG93ZWQuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsidG9wb2xvZ3lLZXkiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn19LCJ0eXBlIjoib2JqZWN0In0sInBvZEFudGlBZmZpbml0eSI6eyJkZXNjcmlwdGlvbiI6IkRlc2NyaWJlcyBwb2QgYW50aS1hZmZpbml0eSBzY2hlZHVsaW5nIHJ1bGVzIChlLmcuIGF2b2lkIHB1dHRpbmcgdGhpcyBwb2QgaW4gdGhlIHNhbWUgbm9kZSwgem9uZSwgZXRjLiBhcyBzb21lIG90aGVyIHBvZChzKSkuIiwicHJvcGVydGllcyI6eyJwcmVmZXJyZWREdXJpbmdTY2hlZHVsaW5nSWdub3JlZER1cmluZ0V4ZWN1dGlvbiI6eyJkZXNjcmlwdGlvbiI6IlRoZSBzY2hlZHVsZXIgd2lsbCBwcmVmZXIgdG8gc2NoZWR1bGUgcG9kcyB0byBub2RlcyB0aGF0IHNhdGlzZnlcbnRoZSBhbnRpLWFmZmluaXR5IGV4cHJlc3Npb25zIHNwZWNpZmllZCBieSB0aGlzIGZpZWxkLCBidXQgaXQgbWF5IGNob29zZVxuYSBub2RlIHRoYXQgdmlvbGF0ZXMgb25lIG9yIG1vcmUgb2YgdGhlIGV4cHJlc3Npb25zLiBUaGUgbm9kZSB0aGF0IGlzXG5tb3N0IHByZWZlcnJlZCBpcyB0aGUgb25lIHdpdGggdGhlIGdyZWF0ZXN0IHN1bSBvZiB3ZWlnaHRzLCBpLmUuXG5mb3IgZWFjaCBub2RlIHRoYXQgbWVldHMgYWxsIG9mIHRoZSBzY2hlZHVsaW5nIHJlcXVpcmVtZW50cyAocmVzb3VyY2VcbnJlcXVlc3QsIHJlcXVpcmVkRHVyaW5nU2NoZWR1bGluZyBhbnRpLWFmZmluaXR5IGV4cHJlc3Npb25zLCBldGMuKSxcbmNvbXB1dGUgYSBzdW0gYnkgaXRlcmF0aW5nIHRocm91Z2ggdGhlIGVsZW1lbnRzIG9mIHRoaXMgZmllbGQgYW5kIGFkZGluZ1xuXCJ3ZWlnaHRcIiB0byB0aGUgc3VtIGlmIHRoZSBub2RlIGhhcyBwb2RzIHdoaWNoIG1hdGNoZXMgdGhlIGNvcnJlc3BvbmRpbmcgcG9kQWZmaW5pdHlUZXJtOyB0aGVcbm5vZGUocykgd2l0aCB0aGUgaGlnaGVzdCBzdW0gYXJlIHRoZSBtb3N0IHByZWZlcnJlZC4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IlRoZSB3ZWlnaHRzIG9mIGFsbCBvZiB0aGUgbWF0Y2hlZCBXZWlnaHRlZFBvZEFmZmluaXR5VGVybSBmaWVsZHMgYXJlIGFkZGVkIHBlci1ub2RlIHRvIGZpbmQgdGhlIG1vc3QgcHJlZmVycmVkIG5vZGUocykiLCJwcm9wZXJ0aWVzIjp7InBvZEFmZmluaXR5VGVybSI6eyJkZXNjcmlwdGlvbiI6IlJlcXVpcmVkLiBBIHBvZCBhZmZpbml0eSB0ZXJtLCBhc3NvY2lhdGVkIHdpdGggdGhlIGNvcnJlc3BvbmRpbmcgd2VpZ2h0LiIsInByb3BlcnRpZXMiOnsibGFiZWxTZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6IkEgbGFiZWwgcXVlcnkgb3ZlciBhIHNldCBvZiByZXNvdXJjZXMsIGluIHRoaXMgY2FzZSBwb2RzLlxuSWYgaXQncyBudWxsLCB0aGlzIFBvZEFmZmluaXR5VGVybSBtYXRjaGVzIHdpdGggbm8gUG9kcy4iLCJwcm9wZXJ0aWVzIjp7Im1hdGNoRXhwcmVzc2lvbnMiOnsiZGVzY3JpcHRpb24iOiJtYXRjaEV4cHJlc3Npb25zIGlzIGEgbGlzdCBvZiBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudHMuIFRoZSByZXF1aXJlbWVudHMgYXJlIEFORGVkLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQSBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudCBpcyBhIHNlbGVjdG9yIHRoYXQgY29udGFpbnMgdmFsdWVzLCBhIGtleSwgYW5kIGFuIG9wZXJhdG9yIHRoYXRcbnJlbGF0ZXMgdGhlIGtleSBhbmQgdmFsdWVzLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoia2V5IGlzIHRoZSBsYWJlbCBrZXkgdGhhdCB0aGUgc2VsZWN0b3IgYXBwbGllcyB0by4iLCJ0eXBlIjoic3RyaW5nIn0sIm9wZXJhdG9yIjp7ImRlc2NyaXB0aW9uIjoib3BlcmF0b3IgcmVwcmVzZW50cyBhIGtleSdzIHJlbGF0aW9uc2hpcCB0byBhIHNldCBvZiB2YWx1ZXMuXG5WYWxpZCBvcGVyYXRvcnMgYXJlIEluLCBOb3RJbiwgRXhpc3RzIGFuZCBEb2VzTm90RXhpc3QuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZXMiOnsiZGVzY3JpcHRpb24iOiJ2YWx1ZXMgaXMgYW4gYXJyYXkgb2Ygc3RyaW5nIHZhbHVlcy4gSWYgdGhlIG9wZXJhdG9yIGlzIEluIG9yIE5vdEluLFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIG5vbi1lbXB0eS4gSWYgdGhlIG9wZXJhdG9yIGlzIEV4aXN0cyBvciBEb2VzTm90RXhpc3QsXG50aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgZW1wdHkuIFRoaXMgYXJyYXkgaXMgcmVwbGFjZWQgZHVyaW5nIGEgc3RyYXRlZ2ljXG5tZXJnZSBwYXRjaC4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifX0sInJlcXVpcmVkIjpbImtleSIsIm9wZXJhdG9yIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9LCJtYXRjaExhYmVscyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJ0eXBlIjoic3RyaW5nIn0sImRlc2NyaXB0aW9uIjoibWF0Y2hMYWJlbHMgaXMgYSBtYXAgb2Yge2tleSx2YWx1ZX0gcGFpcnMuIEEgc2luZ2xlIHtrZXksdmFsdWV9IGluIHRoZSBtYXRjaExhYmVsc1xubWFwIGlzIGVxdWl2YWxlbnQgdG8gYW4gZWxlbWVudCBvZiBtYXRjaEV4cHJlc3Npb25zLCB3aG9zZSBrZXkgZmllbGQgaXMgXCJrZXlcIiwgdGhlXG5vcGVyYXRvciBpcyBcIkluXCIsIGFuZCB0aGUgdmFsdWVzIGFycmF5IGNvbnRhaW5zIG9ubHkgXCJ2YWx1ZVwiLiBUaGUgcmVxdWlyZW1lbnRzIGFyZSBBTkRlZC4iLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0IiwieC1rdWJlcm5ldGVzLW1hcC10eXBlIjoiYXRvbWljIn0sIm1hdGNoTGFiZWxLZXlzIjp7ImRlc2NyaXB0aW9uIjoiTWF0Y2hMYWJlbEtleXMgaXMgYSBzZXQgb2YgcG9kIGxhYmVsIGtleXMgdG8gc2VsZWN0IHdoaWNoIHBvZHMgd2lsbFxuYmUgdGFrZW4gaW50byBjb25zaWRlcmF0aW9uLiBUaGUga2V5cyBhcmUgdXNlZCB0byBsb29rdXAgdmFsdWVzIGZyb20gdGhlXG5pbmNvbWluZyBwb2QgbGFiZWxzLCB0aG9zZSBrZXktdmFsdWUgbGFiZWxzIGFyZSBtZXJnZWQgd2l0aCBgbGFiZWxTZWxlY3RvcmAgYXMgYGtleSBpbiAodmFsdWUpYFxudG8gc2VsZWN0IHRoZSBncm91cCBvZiBleGlzdGluZyBwb2RzIHdoaWNoIHBvZHMgd2lsbCBiZSB0YWtlbiBpbnRvIGNvbnNpZGVyYXRpb25cbmZvciB0aGUgaW5jb21pbmcgcG9kJ3MgcG9kIChhbnRpKSBhZmZpbml0eS4gS2V5cyB0aGF0IGRvbid0IGV4aXN0IGluIHRoZSBpbmNvbWluZ1xucG9kIGxhYmVscyB3aWxsIGJlIGlnbm9yZWQuIFRoZSBkZWZhdWx0IHZhbHVlIGlzIGVtcHR5LlxuVGhlIHNhbWUga2V5IGlzIGZvcmJpZGRlbiB0byBleGlzdCBpbiBib3RoIG1hdGNoTGFiZWxLZXlzIGFuZCBsYWJlbFNlbGVjdG9yLlxuQWxzbywgbWF0Y2hMYWJlbEtleXMgY2Fubm90IGJlIHNldCB3aGVuIGxhYmVsU2VsZWN0b3IgaXNuJ3Qgc2V0LlxuVGhpcyBpcyBhIGJldGEgZmllbGQgYW5kIHJlcXVpcmVzIGVuYWJsaW5nIE1hdGNoTGFiZWxLZXlzSW5Qb2RBZmZpbml0eSBmZWF0dXJlIGdhdGUgKGVuYWJsZWQgYnkgZGVmYXVsdCkuIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn0sIm1pc21hdGNoTGFiZWxLZXlzIjp7ImRlc2NyaXB0aW9uIjoiTWlzbWF0Y2hMYWJlbEtleXMgaXMgYSBzZXQgb2YgcG9kIGxhYmVsIGtleXMgdG8gc2VsZWN0IHdoaWNoIHBvZHMgd2lsbFxuYmUgdGFrZW4gaW50byBjb25zaWRlcmF0aW9uLiBUaGUga2V5cyBhcmUgdXNlZCB0byBsb29rdXAgdmFsdWVzIGZyb20gdGhlXG5pbmNvbWluZyBwb2QgbGFiZWxzLCB0aG9zZSBrZXktdmFsdWUgbGFiZWxzIGFyZSBtZXJnZWQgd2l0aCBgbGFiZWxTZWxlY3RvcmAgYXMgYGtleSBub3RpbiAodmFsdWUpYFxudG8gc2VsZWN0IHRoZSBncm91cCBvZiBleGlzdGluZyBwb2RzIHdoaWNoIHBvZHMgd2lsbCBiZSB0YWtlbiBpbnRvIGNvbnNpZGVyYXRpb25cbmZvciB0aGUgaW5jb21pbmcgcG9kJ3MgcG9kIChhbnRpKSBhZmZpbml0eS4gS2V5cyB0aGF0IGRvbid0IGV4aXN0IGluIHRoZSBpbmNvbWluZ1xucG9kIGxhYmVscyB3aWxsIGJlIGlnbm9yZWQuIFRoZSBkZWZhdWx0IHZhbHVlIGlzIGVtcHR5LlxuVGhlIHNhbWUga2V5IGlzIGZvcmJpZGRlbiB0byBleGlzdCBpbiBib3RoIG1pc21hdGNoTGFiZWxLZXlzIGFuZCBsYWJlbFNlbGVjdG9yLlxuQWxzbywgbWlzbWF0Y2hMYWJlbEtleXMgY2Fubm90IGJlIHNldCB3aGVuIGxhYmVsU2VsZWN0b3IgaXNuJ3Qgc2V0LlxuVGhpcyBpcyBhIGJldGEgZmllbGQgYW5kIHJlcXVpcmVzIGVuYWJsaW5nIE1hdGNoTGFiZWxLZXlzSW5Qb2RBZmZpbml0eSBmZWF0dXJlIGdhdGUgKGVuYWJsZWQgYnkgZGVmYXVsdCkuIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn0sIm5hbWVzcGFjZVNlbGVjdG9yIjp7ImRlc2NyaXB0aW9uIjoiQSBsYWJlbCBxdWVyeSBvdmVyIHRoZSBzZXQgb2YgbmFtZXNwYWNlcyB0aGF0IHRoZSB0ZXJtIGFwcGxpZXMgdG8uXG5UaGUgdGVybSBpcyBhcHBsaWVkIHRvIHRoZSB1bmlvbiBvZiB0aGUgbmFtZXNwYWNlcyBzZWxlY3RlZCBieSB0aGlzIGZpZWxkXG5hbmQgdGhlIG9uZXMgbGlzdGVkIGluIHRoZSBuYW1lc3BhY2VzIGZpZWxkLlxubnVsbCBzZWxlY3RvciBhbmQgbnVsbCBvciBlbXB0eSBuYW1lc3BhY2VzIGxpc3QgbWVhbnMgXCJ0aGlzIHBvZCdzIG5hbWVzcGFjZVwiLlxuQW4gZW1wdHkgc2VsZWN0b3IgKHt9KSBtYXRjaGVzIGFsbCBuYW1lc3BhY2VzLiIsInByb3BlcnRpZXMiOnsibWF0Y2hFeHByZXNzaW9ucyI6eyJkZXNjcmlwdGlvbiI6Im1hdGNoRXhwcmVzc2lvbnMgaXMgYSBsaXN0IG9mIGxhYmVsIHNlbGVjdG9yIHJlcXVpcmVtZW50cy4gVGhlIHJlcXVpcmVtZW50cyBhcmUgQU5EZWQuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJBIGxhYmVsIHNlbGVjdG9yIHJlcXVpcmVtZW50IGlzIGEgc2VsZWN0b3IgdGhhdCBjb250YWlucyB2YWx1ZXMsIGEga2V5LCBhbmQgYW4gb3BlcmF0b3IgdGhhdFxucmVsYXRlcyB0aGUga2V5IGFuZCB2YWx1ZXMuIiwicHJvcGVydGllcyI6eyJrZXkiOnsiZGVzY3JpcHRpb24iOiJrZXkgaXMgdGhlIGxhYmVsIGtleSB0aGF0IHRoZSBzZWxlY3RvciBhcHBsaWVzIHRvLiIsInR5cGUiOiJzdHJpbmcifSwib3BlcmF0b3IiOnsiZGVzY3JpcHRpb24iOiJvcGVyYXRvciByZXByZXNlbnRzIGEga2V5J3MgcmVsYXRpb25zaGlwIHRvIGEgc2V0IG9mIHZhbHVlcy5cblZhbGlkIG9wZXJhdG9ycyBhcmUgSW4sIE5vdEluLCBFeGlzdHMgYW5kIERvZXNOb3RFeGlzdC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlcyI6eyJkZXNjcmlwdGlvbiI6InZhbHVlcyBpcyBhbiBhcnJheSBvZiBzdHJpbmcgdmFsdWVzLiBJZiB0aGUgb3BlcmF0b3IgaXMgSW4gb3IgTm90SW4sXG50aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgbm9uLWVtcHR5LiBJZiB0aGUgb3BlcmF0b3IgaXMgRXhpc3RzIG9yIERvZXNOb3RFeGlzdCxcbnRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBlbXB0eS4gVGhpcyBhcnJheSBpcyByZXBsYWNlZCBkdXJpbmcgYSBzdHJhdGVnaWNcbm1lcmdlIHBhdGNoLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9fSwicmVxdWlyZWQiOlsia2V5Iiwib3BlcmF0b3IiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn0sIm1hdGNoTGFiZWxzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InR5cGUiOiJzdHJpbmcifSwiZGVzY3JpcHRpb24iOiJtYXRjaExhYmVscyBpcyBhIG1hcCBvZiB7a2V5LHZhbHVlfSBwYWlycy4gQSBzaW5nbGUge2tleSx2YWx1ZX0gaW4gdGhlIG1hdGNoTGFiZWxzXG5tYXAgaXMgZXF1aXZhbGVudCB0byBhbiBlbGVtZW50IG9mIG1hdGNoRXhwcmVzc2lvbnMsIHdob3NlIGtleSBmaWVsZCBpcyBcImtleVwiLCB0aGVcbm9wZXJhdG9yIGlzIFwiSW5cIiwgYW5kIHRoZSB2YWx1ZXMgYXJyYXkgY29udGFpbnMgb25seSBcInZhbHVlXCIuIFRoZSByZXF1aXJlbWVudHMgYXJlIEFORGVkLiIsInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtbWFwLXR5cGUiOiJhdG9taWMifSwibmFtZXNwYWNlcyI6eyJkZXNjcmlwdGlvbiI6Im5hbWVzcGFjZXMgc3BlY2lmaWVzIGEgc3RhdGljIGxpc3Qgb2YgbmFtZXNwYWNlIG5hbWVzIHRoYXQgdGhlIHRlcm0gYXBwbGllcyB0by5cblRoZSB0ZXJtIGlzIGFwcGxpZWQgdG8gdGhlIHVuaW9uIG9mIHRoZSBuYW1lc3BhY2VzIGxpc3RlZCBpbiB0aGlzIGZpZWxkXG5hbmQgdGhlIG9uZXMgc2VsZWN0ZWQgYnkgbmFtZXNwYWNlU2VsZWN0b3IuXG5udWxsIG9yIGVtcHR5IG5hbWVzcGFjZXMgbGlzdCBhbmQgbnVsbCBuYW1lc3BhY2VTZWxlY3RvciBtZWFucyBcInRoaXMgcG9kJ3MgbmFtZXNwYWNlXCIuIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn0sInRvcG9sb2d5S2V5Ijp7ImRlc2NyaXB0aW9uIjoiVGhpcyBwb2Qgc2hvdWxkIGJlIGNvLWxvY2F0ZWQgKGFmZmluaXR5KSBvciBub3QgY28tbG9jYXRlZCAoYW50aS1hZmZpbml0eSkgd2l0aCB0aGUgcG9kcyBtYXRjaGluZ1xudGhlIGxhYmVsU2VsZWN0b3IgaW4gdGhlIHNwZWNpZmllZCBuYW1lc3BhY2VzLCB3aGVyZSBjby1sb2NhdGVkIGlzIGRlZmluZWQgYXMgcnVubmluZyBvbiBhIG5vZGVcbndob3NlIHZhbHVlIG9mIHRoZSBsYWJlbCB3aXRoIGtleSB0b3BvbG9neUtleSBtYXRjaGVzIHRoYXQgb2YgYW55IG5vZGUgb24gd2hpY2ggYW55IG9mIHRoZVxuc2VsZWN0ZWQgcG9kcyBpcyBydW5uaW5nLlxuRW1wdHkgdG9wb2xvZ3lLZXkgaXMgbm90IGFsbG93ZWQuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsidG9wb2xvZ3lLZXkiXSwidHlwZSI6Im9iamVjdCJ9LCJ3ZWlnaHQiOnsiZGVzY3JpcHRpb24iOiJ3ZWlnaHQgYXNzb2NpYXRlZCB3aXRoIG1hdGNoaW5nIHRoZSBjb3JyZXNwb25kaW5nIHBvZEFmZmluaXR5VGVybSxcbmluIHRoZSByYW5nZSAxLTEwMC4iLCJmb3JtYXQiOiJpbnQzMiIsInR5cGUiOiJpbnRlZ2VyIn19LCJyZXF1aXJlZCI6WyJwb2RBZmZpbml0eVRlcm0iLCJ3ZWlnaHQiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn0sInJlcXVpcmVkRHVyaW5nU2NoZWR1bGluZ0lnbm9yZWREdXJpbmdFeGVjdXRpb24iOnsiZGVzY3JpcHRpb24iOiJJZiB0aGUgYW50aS1hZmZpbml0eSByZXF1aXJlbWVudHMgc3BlY2lmaWVkIGJ5IHRoaXMgZmllbGQgYXJlIG5vdCBtZXQgYXRcbnNjaGVkdWxpbmcgdGltZSwgdGhlIHBvZCB3aWxsIG5vdCBiZSBzY2hlZHVsZWQgb250byB0aGUgbm9kZS5cbklmIHRoZSBhbnRpLWFmZmluaXR5IHJlcXVpcmVtZW50cyBzcGVjaWZpZWQgYnkgdGhpcyBmaWVsZCBjZWFzZSB0byBiZSBtZXRcbmF0IHNvbWUgcG9pbnQgZHVyaW5nIHBvZCBleGVjdXRpb24gKGUuZy4gZHVlIHRvIGEgcG9kIGxhYmVsIHVwZGF0ZSksIHRoZVxuc3lzdGVtIG1heSBvciBtYXkgbm90IHRyeSB0byBldmVudHVhbGx5IGV2aWN0IHRoZSBwb2QgZnJvbSBpdHMgbm9kZS5cbldoZW4gdGhlcmUgYXJlIG11bHRpcGxlIGVsZW1lbnRzLCB0aGUgbGlzdHMgb2Ygbm9kZXMgY29ycmVzcG9uZGluZyB0byBlYWNoXG5wb2RBZmZpbml0eVRlcm0gYXJlIGludGVyc2VjdGVkLCBpLmUuIGFsbCB0ZXJtcyBtdXN0IGJlIHNhdGlzZmllZC4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkRlZmluZXMgYSBzZXQgb2YgcG9kcyAobmFtZWx5IHRob3NlIG1hdGNoaW5nIHRoZSBsYWJlbFNlbGVjdG9yXG5yZWxhdGl2ZSB0byB0aGUgZ2l2ZW4gbmFtZXNwYWNlKHMpKSB0aGF0IHRoaXMgcG9kIHNob3VsZCBiZVxuY28tbG9jYXRlZCAoYWZmaW5pdHkpIG9yIG5vdCBjby1sb2NhdGVkIChhbnRpLWFmZmluaXR5KSB3aXRoLFxud2hlcmUgY28tbG9jYXRlZCBpcyBkZWZpbmVkIGFzIHJ1bm5pbmcgb24gYSBub2RlIHdob3NlIHZhbHVlIG9mXG50aGUgbGFiZWwgd2l0aCBrZXkgXHUwMDNjdG9wb2xvZ3lLZXlcdTAwM2UgbWF0Y2hlcyB0aGF0IG9mIGFueSBub2RlIG9uIHdoaWNoXG5hIHBvZCBvZiB0aGUgc2V0IG9mIHBvZHMgaXMgcnVubmluZyIsInByb3BlcnRpZXMiOnsibGFiZWxTZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6IkEgbGFiZWwgcXVlcnkgb3ZlciBhIHNldCBvZiByZXNvdXJjZXMsIGluIHRoaXMgY2FzZSBwb2RzLlxuSWYgaXQncyBudWxsLCB0aGlzIFBvZEFmZmluaXR5VGVybSBtYXRjaGVzIHdpdGggbm8gUG9kcy4iLCJwcm9wZXJ0aWVzIjp7Im1hdGNoRXhwcmVzc2lvbnMiOnsiZGVzY3JpcHRpb24iOiJtYXRjaEV4cHJlc3Npb25zIGlzIGEgbGlzdCBvZiBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudHMuIFRoZSByZXF1aXJlbWVudHMgYXJlIEFORGVkLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQSBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudCBpcyBhIHNlbGVjdG9yIHRoYXQgY29udGFpbnMgdmFsdWVzLCBhIGtleSwgYW5kIGFuIG9wZXJhdG9yIHRoYXRcbnJlbGF0ZXMgdGhlIGtleSBhbmQgdmFsdWVzLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoia2V5IGlzIHRoZSBsYWJlbCBrZXkgdGhhdCB0aGUgc2VsZWN0b3IgYXBwbGllcyB0by4iLCJ0eXBlIjoic3RyaW5nIn0sIm9wZXJhdG9yIjp7ImRlc2NyaXB0aW9uIjoib3BlcmF0b3IgcmVwcmVzZW50cyBhIGtleSdzIHJlbGF0aW9uc2hpcCB0byBhIHNldCBvZiB2YWx1ZXMuXG5WYWxpZCBvcGVyYXRvcnMgYXJlIEluLCBOb3RJbiwgRXhpc3RzIGFuZCBEb2VzTm90RXhpc3QuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZXMiOnsiZGVzY3JpcHRpb24iOiJ2YWx1ZXMgaXMgYW4gYXJyYXkgb2Ygc3RyaW5nIHZhbHVlcy4gSWYgdGhlIG9wZXJhdG9yIGlzIEluIG9yIE5vdEluLFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIG5vbi1lbXB0eS4gSWYgdGhlIG9wZXJhdG9yIGlzIEV4aXN0cyBvciBEb2VzTm90RXhpc3QsXG50aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgZW1wdHkuIFRoaXMgYXJyYXkgaXMgcmVwbGFjZWQgZHVyaW5nIGEgc3RyYXRlZ2ljXG5tZXJnZSBwYXRjaC4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifX0sInJlcXVpcmVkIjpbImtleSIsIm9wZXJhdG9yIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9LCJtYXRjaExhYmVscyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJ0eXBlIjoic3RyaW5nIn0sImRlc2NyaXB0aW9uIjoibWF0Y2hMYWJlbHMgaXMgYSBtYXAgb2Yge2tleSx2YWx1ZX0gcGFpcnMuIEEgc2luZ2xlIHtrZXksdmFsdWV9IGluIHRoZSBtYXRjaExhYmVsc1xubWFwIGlzIGVxdWl2YWxlbnQgdG8gYW4gZWxlbWVudCBvZiBtYXRjaEV4cHJlc3Npb25zLCB3aG9zZSBrZXkgZmllbGQgaXMgXCJrZXlcIiwgdGhlXG5vcGVyYXRvciBpcyBcIkluXCIsIGFuZCB0aGUgdmFsdWVzIGFycmF5IGNvbnRhaW5zIG9ubHkgXCJ2YWx1ZVwiLiBUaGUgcmVxdWlyZW1lbnRzIGFyZSBBTkRlZC4iLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0IiwieC1rdWJlcm5ldGVzLW1hcC10eXBlIjoiYXRvbWljIn0sIm1hdGNoTGFiZWxLZXlzIjp7ImRlc2NyaXB0aW9uIjoiTWF0Y2hMYWJlbEtleXMgaXMgYSBzZXQgb2YgcG9kIGxhYmVsIGtleXMgdG8gc2VsZWN0IHdoaWNoIHBvZHMgd2lsbFxuYmUgdGFrZW4gaW50byBjb25zaWRlcmF0aW9uLiBUaGUga2V5cyBhcmUgdXNlZCB0byBsb29rdXAgdmFsdWVzIGZyb20gdGhlXG5pbmNvbWluZyBwb2QgbGFiZWxzLCB0aG9zZSBrZXktdmFsdWUgbGFiZWxzIGFyZSBtZXJnZWQgd2l0aCBgbGFiZWxTZWxlY3RvcmAgYXMgYGtleSBpbiAodmFsdWUpYFxudG8gc2VsZWN0IHRoZSBncm91cCBvZiBleGlzdGluZyBwb2RzIHdoaWNoIHBvZHMgd2lsbCBiZSB0YWtlbiBpbnRvIGNvbnNpZGVyYXRpb25cbmZvciB0aGUgaW5jb21pbmcgcG9kJ3MgcG9kIChhbnRpKSBhZmZpbml0eS4gS2V5cyB0aGF0IGRvbid0IGV4aXN0IGluIHRoZSBpbmNvbWluZ1xucG9kIGxhYmVscyB3aWxsIGJlIGlnbm9yZWQuIFRoZSBkZWZhdWx0IHZhbHVlIGlzIGVtcHR5LlxuVGhlIHNhbWUga2V5IGlzIGZvcmJpZGRlbiB0byBleGlzdCBpbiBib3RoIG1hdGNoTGFiZWxLZXlzIGFuZCBsYWJlbFNlbGVjdG9yLlxuQWxzbywgbWF0Y2hMYWJlbEtleXMgY2Fubm90IGJlIHNldCB3aGVuIGxhYmVsU2VsZWN0b3IgaXNuJ3Qgc2V0LlxuVGhpcyBpcyBhIGJldGEgZmllbGQgYW5kIHJlcXVpcmVzIGVuYWJsaW5nIE1hdGNoTGFiZWxLZXlzSW5Qb2RBZmZpbml0eSBmZWF0dXJlIGdhdGUgKGVuYWJsZWQgYnkgZGVmYXVsdCkuIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn0sIm1pc21hdGNoTGFiZWxLZXlzIjp7ImRlc2NyaXB0aW9uIjoiTWlzbWF0Y2hMYWJlbEtleXMgaXMgYSBzZXQgb2YgcG9kIGxhYmVsIGtleXMgdG8gc2VsZWN0IHdoaWNoIHBvZHMgd2lsbFxuYmUgdGFrZW4gaW50byBjb25zaWRlcmF0aW9uLiBUaGUga2V5cyBhcmUgdXNlZCB0byBsb29rdXAgdmFsdWVzIGZyb20gdGhlXG5pbmNvbWluZyBwb2QgbGFiZWxzLCB0aG9zZSBrZXktdmFsdWUgbGFiZWxzIGFyZSBtZXJnZWQgd2l0aCBgbGFiZWxTZWxlY3RvcmAgYXMgYGtleSBub3RpbiAodmFsdWUpYFxudG8gc2VsZWN0IHRoZSBncm91cCBvZiBleGlzdGluZyBwb2RzIHdoaWNoIHBvZHMgd2lsbCBiZSB0YWtlbiBpbnRvIGNvbnNpZGVyYXRpb25cbmZvciB0aGUgaW5jb21pbmcgcG9kJ3MgcG9kIChhbnRpKSBhZmZpbml0eS4gS2V5cyB0aGF0IGRvbid0IGV4aXN0IGluIHRoZSBpbmNvbWluZ1xucG9kIGxhYmVscyB3aWxsIGJlIGlnbm9yZWQuIFRoZSBkZWZhdWx0IHZhbHVlIGlzIGVtcHR5LlxuVGhlIHNhbWUga2V5IGlzIGZvcmJpZGRlbiB0byBleGlzdCBpbiBib3RoIG1pc21hdGNoTGFiZWxLZXlzIGFuZCBsYWJlbFNlbGVjdG9yLlxuQWxzbywgbWlzbWF0Y2hMYWJlbEtleXMgY2Fubm90IGJlIHNldCB3aGVuIGxhYmVsU2VsZWN0b3IgaXNuJ3Qgc2V0LlxuVGhpcyBpcyBhIGJldGEgZmllbGQgYW5kIHJlcXVpcmVzIGVuYWJsaW5nIE1hdGNoTGFiZWxLZXlzSW5Qb2RBZmZpbml0eSBmZWF0dXJlIGdhdGUgKGVuYWJsZWQgYnkgZGVmYXVsdCkuIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn0sIm5hbWVzcGFjZVNlbGVjdG9yIjp7ImRlc2NyaXB0aW9uIjoiQSBsYWJlbCBxdWVyeSBvdmVyIHRoZSBzZXQgb2YgbmFtZXNwYWNlcyB0aGF0IHRoZSB0ZXJtIGFwcGxpZXMgdG8uXG5UaGUgdGVybSBpcyBhcHBsaWVkIHRvIHRoZSB1bmlvbiBvZiB0aGUgbmFtZXNwYWNlcyBzZWxlY3RlZCBieSB0aGlzIGZpZWxkXG5hbmQgdGhlIG9uZXMgbGlzdGVkIGluIHRoZSBuYW1lc3BhY2VzIGZpZWxkLlxubnVsbCBzZWxlY3RvciBhbmQgbnVsbCBvciBlbXB0eSBuYW1lc3BhY2VzIGxpc3QgbWVhbnMgXCJ0aGlzIHBvZCdzIG5hbWVzcGFjZVwiLlxuQW4gZW1wdHkgc2VsZWN0b3IgKHt9KSBtYXRjaGVzIGFsbCBuYW1lc3BhY2VzLiIsInByb3BlcnRpZXMiOnsibWF0Y2hFeHByZXNzaW9ucyI6eyJkZXNjcmlwdGlvbiI6Im1hdGNoRXhwcmVzc2lvbnMgaXMgYSBsaXN0IG9mIGxhYmVsIHNlbGVjdG9yIHJlcXVpcmVtZW50cy4gVGhlIHJlcXVpcmVtZW50cyBhcmUgQU5EZWQuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJBIGxhYmVsIHNlbGVjdG9yIHJlcXVpcmVtZW50IGlzIGEgc2VsZWN0b3IgdGhhdCBjb250YWlucyB2YWx1ZXMsIGEga2V5LCBhbmQgYW4gb3BlcmF0b3IgdGhhdFxucmVsYXRlcyB0aGUga2V5IGFuZCB2YWx1ZXMuIiwicHJvcGVydGllcyI6eyJrZXkiOnsiZGVzY3JpcHRpb24iOiJrZXkgaXMgdGhlIGxhYmVsIGtleSB0aGF0IHRoZSBzZWxlY3RvciBhcHBsaWVzIHRvLiIsInR5cGUiOiJzdHJpbmcifSwib3BlcmF0b3IiOnsiZGVzY3JpcHRpb24iOiJvcGVyYXRvciByZXByZXNlbnRzIGEga2V5J3MgcmVsYXRpb25zaGlwIHRvIGEgc2V0IG9mIHZhbHVlcy5cblZhbGlkIG9wZXJhdG9ycyBhcmUgSW4sIE5vdEluLCBFeGlzdHMgYW5kIERvZXNOb3RFeGlzdC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlcyI6eyJkZXNjcmlwdGlvbiI6InZhbHVlcyBpcyBhbiBhcnJheSBvZiBzdHJpbmcgdmFsdWVzLiBJZiB0aGUgb3BlcmF0b3IgaXMgSW4gb3IgTm90SW4sXG50aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgbm9uLWVtcHR5LiBJZiB0aGUgb3BlcmF0b3IgaXMgRXhpc3RzIG9yIERvZXNOb3RFeGlzdCxcbnRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBlbXB0eS4gVGhpcyBhcnJheSBpcyByZXBsYWNlZCBkdXJpbmcgYSBzdHJhdGVnaWNcbm1lcmdlIHBhdGNoLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9fSwicmVxdWlyZWQiOlsia2V5Iiwib3BlcmF0b3IiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn0sIm1hdGNoTGFiZWxzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InR5cGUiOiJzdHJpbmcifSwiZGVzY3JpcHRpb24iOiJtYXRjaExhYmVscyBpcyBhIG1hcCBvZiB7a2V5LHZhbHVlfSBwYWlycy4gQSBzaW5nbGUge2tleSx2YWx1ZX0gaW4gdGhlIG1hdGNoTGFiZWxzXG5tYXAgaXMgZXF1aXZhbGVudCB0byBhbiBlbGVtZW50IG9mIG1hdGNoRXhwcmVzc2lvbnMsIHdob3NlIGtleSBmaWVsZCBpcyBcImtleVwiLCB0aGVcbm9wZXJhdG9yIGlzIFwiSW5cIiwgYW5kIHRoZSB2YWx1ZXMgYXJyYXkgY29udGFpbnMgb25seSBcInZhbHVlXCIuIFRoZSByZXF1aXJlbWVudHMgYXJlIEFORGVkLiIsInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtbWFwLXR5cGUiOiJhdG9taWMifSwibmFtZXNwYWNlcyI6eyJkZXNjcmlwdGlvbiI6Im5hbWVzcGFjZXMgc3BlY2lmaWVzIGEgc3RhdGljIGxpc3Qgb2YgbmFtZXNwYWNlIG5hbWVzIHRoYXQgdGhlIHRlcm0gYXBwbGllcyB0by5cblRoZSB0ZXJtIGlzIGFwcGxpZWQgdG8gdGhlIHVuaW9uIG9mIHRoZSBuYW1lc3BhY2VzIGxpc3RlZCBpbiB0aGlzIGZpZWxkXG5hbmQgdGhlIG9uZXMgc2VsZWN0ZWQgYnkgbmFtZXNwYWNlU2VsZWN0b3IuXG5udWxsIG9yIGVtcHR5IG5hbWVzcGFjZXMgbGlzdCBhbmQgbnVsbCBuYW1lc3BhY2VTZWxlY3RvciBtZWFucyBcInRoaXMgcG9kJ3MgbmFtZXNwYWNlXCIuIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn0sInRvcG9sb2d5S2V5Ijp7ImRlc2NyaXB0aW9uIjoiVGhpcyBwb2Qgc2hvdWxkIGJlIGNvLWxvY2F0ZWQgKGFmZmluaXR5KSBvciBub3QgY28tbG9jYXRlZCAoYW50aS1hZmZpbml0eSkgd2l0aCB0aGUgcG9kcyBtYXRjaGluZ1xudGhlIGxhYmVsU2VsZWN0b3IgaW4gdGhlIHNwZWNpZmllZCBuYW1lc3BhY2VzLCB3aGVyZSBjby1sb2NhdGVkIGlzIGRlZmluZWQgYXMgcnVubmluZyBvbiBhIG5vZGVcbndob3NlIHZhbHVlIG9mIHRoZSBsYWJlbCB3aXRoIGtleSB0b3BvbG9neUtleSBtYXRjaGVzIHRoYXQgb2YgYW55IG5vZGUgb24gd2hpY2ggYW55IG9mIHRoZVxuc2VsZWN0ZWQgcG9kcyBpcyBydW5uaW5nLlxuRW1wdHkgdG9wb2xvZ3lLZXkgaXMgbm90IGFsbG93ZWQuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsidG9wb2xvZ3lLZXkiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In0sImltYWdlUHVsbFNlY3JldHMiOnsiZGVzY3JpcHRpb24iOiJJZiBzcGVjaWZpZWQsIHRoZSBwb2QncyBpbWFnZVB1bGxTZWNyZXRzIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJMb2NhbE9iamVjdFJlZmVyZW5jZSBjb250YWlucyBlbm91Z2ggaW5mb3JtYXRpb24gdG8gbGV0IHlvdSBsb2NhdGUgdGhlXG5yZWZlcmVuY2VkIG9iamVjdCBpbnNpZGUgdGhlIHNhbWUgbmFtZXNwYWNlLiIsInByb3BlcnRpZXMiOnsibmFtZSI6eyJkZWZhdWx0IjoiIiwiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSByZWZlcmVudC5cblRoaXMgZmllbGQgaXMgZWZmZWN0aXZlbHkgcmVxdWlyZWQsIGJ1dCBkdWUgdG8gYmFja3dhcmRzIGNvbXBhdGliaWxpdHkgaXNcbmFsbG93ZWQgdG8gYmUgZW1wdHkuIEluc3RhbmNlcyBvZiB0aGlzIHR5cGUgd2l0aCBhbiBlbXB0eSB2YWx1ZSBoZXJlIGFyZVxuYWxtb3N0IGNlcnRhaW5seSB3cm9uZy5cbk1vcmUgaW5mbzogaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvb3ZlcnZpZXcvd29ya2luZy13aXRoLW9iamVjdHMvbmFtZXMvI25hbWVzIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1tYXAtdHlwZSI6ImF0b21pYyJ9LCJ0eXBlIjoiYXJyYXkifSwibm9kZVNlbGVjdG9yIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InR5cGUiOiJzdHJpbmcifSwiZGVzY3JpcHRpb24iOiJOb2RlU2VsZWN0b3IgaXMgYSBzZWxlY3RvciB3aGljaCBtdXN0IGJlIHRydWUgZm9yIHRoZSBwb2QgdG8gZml0IG9uIGEgbm9kZS5cblNlbGVjdG9yIHdoaWNoIG11c3QgbWF0Y2ggYSBub2RlJ3MgbGFiZWxzIGZvciB0aGUgcG9kIHRvIGJlIHNjaGVkdWxlZCBvbiB0aGF0IG5vZGUuXG5Nb3JlIGluZm86IGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL2NvbmNlcHRzL2NvbmZpZ3VyYXRpb24vYXNzaWduLXBvZC1ub2RlLyIsInR5cGUiOiJvYmplY3QifSwicHJpb3JpdHlDbGFzc05hbWUiOnsiZGVzY3JpcHRpb24iOiJJZiBzcGVjaWZpZWQsIHRoZSBwb2QncyBwcmlvcml0eUNsYXNzTmFtZS4iLCJ0eXBlIjoic3RyaW5nIn0sInNlY3VyaXR5Q29udGV4dCI6eyJkZXNjcmlwdGlvbiI6IklmIHNwZWNpZmllZCwgdGhlIHBvZCdzIHNlY3VyaXR5IGNvbnRleHQiLCJwcm9wZXJ0aWVzIjp7ImZzR3JvdXAiOnsiZGVzY3JpcHRpb24iOiJBIHNwZWNpYWwgc3VwcGxlbWVudGFsIGdyb3VwIHRoYXQgYXBwbGllcyB0byBhbGwgY29udGFpbmVycyBpbiBhIHBvZC5cblNvbWUgdm9sdW1lIHR5cGVzIGFsbG93IHRoZSBLdWJlbGV0IHRvIGNoYW5nZSB0aGUgb3duZXJzaGlwIG9mIHRoYXQgdm9sdW1lXG50byBiZSBvd25lZCBieSB0aGUgcG9kOlxuXG4xLiBUaGUgb3duaW5nIEdJRCB3aWxsIGJlIHRoZSBGU0dyb3VwXG4yLiBUaGUgc2V0Z2lkIGJpdCBpcyBzZXQgKG5ldyBmaWxlcyBjcmVhdGVkIGluIHRoZSB2b2x1bWUgd2lsbCBiZSBvd25lZCBieSBGU0dyb3VwKVxuMy4gVGhlIHBlcm1pc3Npb24gYml0cyBhcmUgT1InZCB3aXRoIHJ3LXJ3LS0tLVxuXG5JZiB1bnNldCwgdGhlIEt1YmVsZXQgd2lsbCBub3QgbW9kaWZ5IHRoZSBvd25lcnNoaXAgYW5kIHBlcm1pc3Npb25zIG9mIGFueSB2b2x1bWUuXG5Ob3RlIHRoYXQgdGhpcyBmaWVsZCBjYW5ub3QgYmUgc2V0IHdoZW4gc3BlYy5vcy5uYW1lIGlzIHdpbmRvd3MuIiwiZm9ybWF0IjoiaW50NjQiLCJ0eXBlIjoiaW50ZWdlciJ9LCJmc0dyb3VwQ2hhbmdlUG9saWN5Ijp7ImRlc2NyaXB0aW9uIjoiZnNHcm91cENoYW5nZVBvbGljeSBkZWZpbmVzIGJlaGF2aW9yIG9mIGNoYW5naW5nIG93bmVyc2hpcCBhbmQgcGVybWlzc2lvbiBvZiB0aGUgdm9sdW1lXG5iZWZvcmUgYmVpbmcgZXhwb3NlZCBpbnNpZGUgUG9kLiBUaGlzIGZpZWxkIHdpbGwgb25seSBhcHBseSB0b1xudm9sdW1lIHR5cGVzIHdoaWNoIHN1cHBvcnQgZnNHcm91cCBiYXNlZCBvd25lcnNoaXAoYW5kIHBlcm1pc3Npb25zKS5cbkl0IHdpbGwgaGF2ZSBubyBlZmZlY3Qgb24gZXBoZW1lcmFsIHZvbHVtZSB0eXBlcyBzdWNoIGFzOiBzZWNyZXQsIGNvbmZpZ21hcHNcbmFuZCBlbXB0eWRpci5cblZhbGlkIHZhbHVlcyBhcmUgXCJPblJvb3RNaXNtYXRjaFwiIGFuZCBcIkFsd2F5c1wiLiBJZiBub3Qgc3BlY2lmaWVkLCBcIkFsd2F5c1wiIGlzIHVzZWQuXG5Ob3RlIHRoYXQgdGhpcyBmaWVsZCBjYW5ub3QgYmUgc2V0IHdoZW4gc3BlYy5vcy5uYW1lIGlzIHdpbmRvd3MuIiwidHlwZSI6InN0cmluZyJ9LCJydW5Bc0dyb3VwIjp7ImRlc2NyaXB0aW9uIjoiVGhlIEdJRCB0byBydW4gdGhlIGVudHJ5cG9pbnQgb2YgdGhlIGNvbnRhaW5lciBwcm9jZXNzLlxuVXNlcyBydW50aW1lIGRlZmF1bHQgaWYgdW5zZXQuXG5NYXkgYWxzbyBiZSBzZXQgaW4gU2VjdXJpdHlDb250ZXh0LiAgSWYgc2V0IGluIGJvdGggU2VjdXJpdHlDb250ZXh0IGFuZFxuUG9kU2VjdXJpdHlDb250ZXh0LCB0aGUgdmFsdWUgc3BlY2lmaWVkIGluIFNlY3VyaXR5Q29udGV4dCB0YWtlcyBwcmVjZWRlbmNlXG5mb3IgdGhhdCBjb250YWluZXIuXG5Ob3RlIHRoYXQgdGhpcyBmaWVsZCBjYW5ub3QgYmUgc2V0IHdoZW4gc3BlYy5vcy5uYW1lIGlzIHdpbmRvd3MuIiwiZm9ybWF0IjoiaW50NjQiLCJ0eXBlIjoiaW50ZWdlciJ9LCJydW5Bc05vblJvb3QiOnsiZGVzY3JpcHRpb24iOiJJbmRpY2F0ZXMgdGhhdCB0aGUgY29udGFpbmVyIG11c3QgcnVuIGFzIGEgbm9uLXJvb3QgdXNlci5cbklmIHRydWUsIHRoZSBLdWJlbGV0IHdpbGwgdmFsaWRhdGUgdGhlIGltYWdlIGF0IHJ1bnRpbWUgdG8gZW5zdXJlIHRoYXQgaXRcbmRvZXMgbm90IHJ1biBhcyBVSUQgMCAocm9vdCkgYW5kIGZhaWwgdG8gc3RhcnQgdGhlIGNvbnRhaW5lciBpZiBpdCBkb2VzLlxuSWYgdW5zZXQgb3IgZmFsc2UsIG5vIHN1Y2ggdmFsaWRhdGlvbiB3aWxsIGJlIHBlcmZvcm1lZC5cbk1heSBhbHNvIGJlIHNldCBpbiBTZWN1cml0eUNvbnRleHQuICBJZiBzZXQgaW4gYm90aCBTZWN1cml0eUNvbnRleHQgYW5kXG5Qb2RTZWN1cml0eUNvbnRleHQsIHRoZSB2YWx1ZSBzcGVjaWZpZWQgaW4gU2VjdXJpdHlDb250ZXh0IHRha2VzIHByZWNlZGVuY2UuIiwidHlwZSI6ImJvb2xlYW4ifSwicnVuQXNVc2VyIjp7ImRlc2NyaXB0aW9uIjoiVGhlIFVJRCB0byBydW4gdGhlIGVudHJ5cG9pbnQgb2YgdGhlIGNvbnRhaW5lciBwcm9jZXNzLlxuRGVmYXVsdHMgdG8gdXNlciBzcGVjaWZpZWQgaW4gaW1hZ2UgbWV0YWRhdGEgaWYgdW5zcGVjaWZpZWQuXG5NYXkgYWxzbyBiZSBzZXQgaW4gU2VjdXJpdHlDb250ZXh0LiAgSWYgc2V0IGluIGJvdGggU2VjdXJpdHlDb250ZXh0IGFuZFxuUG9kU2VjdXJpdHlDb250ZXh0LCB0aGUgdmFsdWUgc3BlY2lmaWVkIGluIFNlY3VyaXR5Q29udGV4dCB0YWtlcyBwcmVjZWRlbmNlXG5mb3IgdGhhdCBjb250YWluZXIuXG5Ob3RlIHRoYXQgdGhpcyBmaWVsZCBjYW5ub3QgYmUgc2V0IHdoZW4gc3BlYy5vcy5uYW1lIGlzIHdpbmRvd3MuIiwiZm9ybWF0IjoiaW50NjQiLCJ0eXBlIjoiaW50ZWdlciJ9LCJzZUxpbnV4T3B0aW9ucyI6eyJkZXNjcmlwdGlvbiI6IlRoZSBTRUxpbnV4IGNvbnRleHQgdG8gYmUgYXBwbGllZCB0byBhbGwgY29udGFpbmVycy5cbklmIHVuc3BlY2lmaWVkLCB0aGUgY29udGFpbmVyIHJ1bnRpbWUgd2lsbCBhbGxvY2F0ZSBhIHJhbmRvbSBTRUxpbnV4IGNvbnRleHQgZm9yIGVhY2hcbmNvbnRhaW5lci4gIE1heSBhbHNvIGJlIHNldCBpbiBTZWN1cml0eUNvbnRleHQuICBJZiBzZXQgaW5cbmJvdGggU2VjdXJpdHlDb250ZXh0IGFuZCBQb2RTZWN1cml0eUNvbnRleHQsIHRoZSB2YWx1ZSBzcGVjaWZpZWQgaW4gU2VjdXJpdHlDb250ZXh0XG50YWtlcyBwcmVjZWRlbmNlIGZvciB0aGF0IGNvbnRhaW5lci5cbk5vdGUgdGhhdCB0aGlzIGZpZWxkIGNhbm5vdCBiZSBzZXQgd2hlbiBzcGVjLm9zLm5hbWUgaXMgd2luZG93cy4iLCJwcm9wZXJ0aWVzIjp7ImxldmVsIjp7ImRlc2NyaXB0aW9uIjoiTGV2ZWwgaXMgU0VMaW51eCBsZXZlbCBsYWJlbCB0aGF0IGFwcGxpZXMgdG8gdGhlIGNvbnRhaW5lci4iLCJ0eXBlIjoic3RyaW5nIn0sInJvbGUiOnsiZGVzY3JpcHRpb24iOiJSb2xlIGlzIGEgU0VMaW51eCByb2xlIGxhYmVsIHRoYXQgYXBwbGllcyB0byB0aGUgY29udGFpbmVyLiIsInR5cGUiOiJzdHJpbmcifSwidHlwZSI6eyJkZXNjcmlwdGlvbiI6IlR5cGUgaXMgYSBTRUxpbnV4IHR5cGUgbGFiZWwgdGhhdCBhcHBsaWVzIHRvIHRoZSBjb250YWluZXIuIiwidHlwZSI6InN0cmluZyJ9LCJ1c2VyIjp7ImRlc2NyaXB0aW9uIjoiVXNlciBpcyBhIFNFTGludXggdXNlciBsYWJlbCB0aGF0IGFwcGxpZXMgdG8gdGhlIGNvbnRhaW5lci4iLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sInNlY2NvbXBQcm9maWxlIjp7ImRlc2NyaXB0aW9uIjoiVGhlIHNlY2NvbXAgb3B0aW9ucyB0byB1c2UgYnkgdGhlIGNvbnRhaW5lcnMgaW4gdGhpcyBwb2QuXG5Ob3RlIHRoYXQgdGhpcyBmaWVsZCBjYW5ub3QgYmUgc2V0IHdoZW4gc3BlYy5vcy5uYW1lIGlzIHdpbmRvd3MuIiwicHJvcGVydGllcyI6eyJsb2NhbGhvc3RQcm9maWxlIjp7ImRlc2NyaXB0aW9uIjoibG9jYWxob3N0UHJvZmlsZSBpbmRpY2F0ZXMgYSBwcm9maWxlIGRlZmluZWQgaW4gYSBmaWxlIG9uIHRoZSBub2RlIHNob3VsZCBiZSB1c2VkLlxuVGhlIHByb2ZpbGUgbXVzdCBiZSBwcmVjb25maWd1cmVkIG9uIHRoZSBub2RlIHRvIHdvcmsuXG5NdXN0IGJlIGEgZGVzY2VuZGluZyBwYXRoLCByZWxhdGl2ZSB0byB0aGUga3ViZWxldCdzIGNvbmZpZ3VyZWQgc2VjY29tcCBwcm9maWxlIGxvY2F0aW9uLlxuTXVzdCBiZSBzZXQgaWYgdHlwZSBpcyBcIkxvY2FsaG9zdFwiLiBNdXN0IE5PVCBiZSBzZXQgZm9yIGFueSBvdGhlciB0eXBlLiIsInR5cGUiOiJzdHJpbmcifSwidHlwZSI6eyJkZXNjcmlwdGlvbiI6InR5cGUgaW5kaWNhdGVzIHdoaWNoIGtpbmQgb2Ygc2VjY29tcCBwcm9maWxlIHdpbGwgYmUgYXBwbGllZC5cblZhbGlkIG9wdGlvbnMgYXJlOlxuXG5Mb2NhbGhvc3QgLSBhIHByb2ZpbGUgZGVmaW5lZCBpbiBhIGZpbGUgb24gdGhlIG5vZGUgc2hvdWxkIGJlIHVzZWQuXG5SdW50aW1lRGVmYXVsdCAtIHRoZSBjb250YWluZXIgcnVudGltZSBkZWZhdWx0IHByb2ZpbGUgc2hvdWxkIGJlIHVzZWQuXG5VbmNvbmZpbmVkIC0gbm8gcHJvZmlsZSBzaG91bGQgYmUgYXBwbGllZC4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJ0eXBlIl0sInR5cGUiOiJvYmplY3QifSwic3VwcGxlbWVudGFsR3JvdXBzIjp7ImRlc2NyaXB0aW9uIjoiQSBsaXN0IG9mIGdyb3VwcyBhcHBsaWVkIHRvIHRoZSBmaXJzdCBwcm9jZXNzIHJ1biBpbiBlYWNoIGNvbnRhaW5lciwgaW4gYWRkaXRpb25cbnRvIHRoZSBjb250YWluZXIncyBwcmltYXJ5IEdJRCwgdGhlIGZzR3JvdXAgKGlmIHNwZWNpZmllZCksIGFuZCBncm91cCBtZW1iZXJzaGlwc1xuZGVmaW5lZCBpbiB0aGUgY29udGFpbmVyIGltYWdlIGZvciB0aGUgdWlkIG9mIHRoZSBjb250YWluZXIgcHJvY2Vzcy4gSWYgdW5zcGVjaWZpZWQsXG5ubyBhZGRpdGlvbmFsIGdyb3VwcyBhcmUgYWRkZWQgdG8gYW55IGNvbnRhaW5lci4gTm90ZSB0aGF0IGdyb3VwIG1lbWJlcnNoaXBzXG5kZWZpbmVkIGluIHRoZSBjb250YWluZXIgaW1hZ2UgZm9yIHRoZSB1aWQgb2YgdGhlIGNvbnRhaW5lciBwcm9jZXNzIGFyZSBzdGlsbCBlZmZlY3RpdmUsXG5ldmVuIGlmIHRoZXkgYXJlIG5vdCBpbmNsdWRlZCBpbiB0aGlzIGxpc3QuXG5Ob3RlIHRoYXQgdGhpcyBmaWVsZCBjYW5ub3QgYmUgc2V0IHdoZW4gc3BlYy5vcy5uYW1lIGlzIHdpbmRvd3MuIiwiaXRlbXMiOnsiZm9ybWF0IjoiaW50NjQiLCJ0eXBlIjoiaW50ZWdlciJ9LCJ0eXBlIjoiYXJyYXkifSwic3lzY3RscyI6eyJkZXNjcmlwdGlvbiI6IlN5c2N0bHMgaG9sZCBhIGxpc3Qgb2YgbmFtZXNwYWNlZCBzeXNjdGxzIHVzZWQgZm9yIHRoZSBwb2QuIFBvZHMgd2l0aCB1bnN1cHBvcnRlZFxuc3lzY3RscyAoYnkgdGhlIGNvbnRhaW5lciBydW50aW1lKSBtaWdodCBmYWlsIHRvIGxhdW5jaC5cbk5vdGUgdGhhdCB0aGlzIGZpZWxkIGNhbm5vdCBiZSBzZXQgd2hlbiBzcGVjLm9zLm5hbWUgaXMgd2luZG93cy4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IlN5c2N0bCBkZWZpbmVzIGEga2VybmVsIHBhcmFtZXRlciB0byBiZSBzZXQiLCJwcm9wZXJ0aWVzIjp7Im5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIGEgcHJvcGVydHkgdG8gc2V0IiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZSI6eyJkZXNjcmlwdGlvbiI6IlZhbHVlIG9mIGEgcHJvcGVydHkgdG8gc2V0IiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibmFtZSIsInZhbHVlIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In19LCJ0eXBlIjoib2JqZWN0In0sInNlcnZpY2VBY2NvdW50TmFtZSI6eyJkZXNjcmlwdGlvbiI6IklmIHNwZWNpZmllZCwgdGhlIHBvZCdzIHNlcnZpY2UgYWNjb3VudCIsInR5cGUiOiJzdHJpbmcifSwidG9sZXJhdGlvbnMiOnsiZGVzY3JpcHRpb24iOiJJZiBzcGVjaWZpZWQsIHRoZSBwb2QncyB0b2xlcmF0aW9ucy4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IlRoZSBwb2QgdGhpcyBUb2xlcmF0aW9uIGlzIGF0dGFjaGVkIHRvIHRvbGVyYXRlcyBhbnkgdGFpbnQgdGhhdCBtYXRjaGVzXG50aGUgdHJpcGxlIFx1MDAzY2tleSx2YWx1ZSxlZmZlY3RcdTAwM2UgdXNpbmcgdGhlIG1hdGNoaW5nIG9wZXJhdG9yIFx1MDAzY29wZXJhdG9yXHUwMDNlLiIsInByb3BlcnRpZXMiOnsiZWZmZWN0Ijp7ImRlc2NyaXB0aW9uIjoiRWZmZWN0IGluZGljYXRlcyB0aGUgdGFpbnQgZWZmZWN0IHRvIG1hdGNoLiBFbXB0eSBtZWFucyBtYXRjaCBhbGwgdGFpbnQgZWZmZWN0cy5cbldoZW4gc3BlY2lmaWVkLCBhbGxvd2VkIHZhbHVlcyBhcmUgTm9TY2hlZHVsZSwgUHJlZmVyTm9TY2hlZHVsZSBhbmQgTm9FeGVjdXRlLiIsInR5cGUiOiJzdHJpbmcifSwia2V5Ijp7ImRlc2NyaXB0aW9uIjoiS2V5IGlzIHRoZSB0YWludCBrZXkgdGhhdCB0aGUgdG9sZXJhdGlvbiBhcHBsaWVzIHRvLiBFbXB0eSBtZWFucyBtYXRjaCBhbGwgdGFpbnQga2V5cy5cbklmIHRoZSBrZXkgaXMgZW1wdHksIG9wZXJhdG9yIG11c3QgYmUgRXhpc3RzOyB0aGlzIGNvbWJpbmF0aW9uIG1lYW5zIHRvIG1hdGNoIGFsbCB2YWx1ZXMgYW5kIGFsbCBrZXlzLiIsInR5cGUiOiJzdHJpbmcifSwib3BlcmF0b3IiOnsiZGVzY3JpcHRpb24iOiJPcGVyYXRvciByZXByZXNlbnRzIGEga2V5J3MgcmVsYXRpb25zaGlwIHRvIHRoZSB2YWx1ZS5cblZhbGlkIG9wZXJhdG9ycyBhcmUgRXhpc3RzIGFuZCBFcXVhbC4gRGVmYXVsdHMgdG8gRXF1YWwuXG5FeGlzdHMgaXMgZXF1aXZhbGVudCB0byB3aWxkY2FyZCBmb3IgdmFsdWUsIHNvIHRoYXQgYSBwb2QgY2FuXG50b2xlcmF0ZSBhbGwgdGFpbnRzIG9mIGEgcGFydGljdWxhciBjYXRlZ29yeS4iLCJ0eXBlIjoic3RyaW5nIn0sInRvbGVyYXRpb25TZWNvbmRzIjp7ImRlc2NyaXB0aW9uIjoiVG9sZXJhdGlvblNlY29uZHMgcmVwcmVzZW50cyB0aGUgcGVyaW9kIG9mIHRpbWUgdGhlIHRvbGVyYXRpb24gKHdoaWNoIG11c3QgYmVcbm9mIGVmZmVjdCBOb0V4ZWN1dGUsIG90aGVyd2lzZSB0aGlzIGZpZWxkIGlzIGlnbm9yZWQpIHRvbGVyYXRlcyB0aGUgdGFpbnQuIEJ5IGRlZmF1bHQsXG5pdCBpcyBub3Qgc2V0LCB3aGljaCBtZWFucyB0b2xlcmF0ZSB0aGUgdGFpbnQgZm9yZXZlciAoZG8gbm90IGV2aWN0KS4gWmVybyBhbmRcbm5lZ2F0aXZlIHZhbHVlcyB3aWxsIGJlIHRyZWF0ZWQgYXMgMCAoZXZpY3QgaW1tZWRpYXRlbHkpIGJ5IHRoZSBzeXN0ZW0uIiwiZm9ybWF0IjoiaW50NjQiLCJ0eXBlIjoiaW50ZWdlciJ9LCJ2YWx1ZSI6eyJkZXNjcmlwdGlvbiI6IlZhbHVlIGlzIHRoZSB0YWludCB2YWx1ZSB0aGUgdG9sZXJhdGlvbiBtYXRjaGVzIHRvLlxuSWYgdGhlIG9wZXJhdG9yIGlzIEV4aXN0cywgdGhlIHZhbHVlIHNob3VsZCBiZSBlbXB0eSwgb3RoZXJ3aXNlIGp1c3QgYSByZWd1bGFyIHN0cmluZy4iLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9LCJzZXJ2aWNlVHlwZSI6eyJkZXNjcmlwdGlvbiI6Ik9wdGlvbmFsIHNlcnZpY2UgdHlwZSBmb3IgS3ViZXJuZXRlcyBzb2x2ZXIgc2VydmljZS4gU3VwcG9ydGVkIHZhbHVlc1xuYXJlIE5vZGVQb3J0IG9yIENsdXN0ZXJJUC4gSWYgdW5zZXQsIGRlZmF1bHRzIHRvIE5vZGVQb3J0LiIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwiaW5ncmVzcyI6eyJkZXNjcmlwdGlvbiI6IlRoZSBpbmdyZXNzIGJhc2VkIEhUVFAwMSBjaGFsbGVuZ2Ugc29sdmVyIHdpbGwgc29sdmUgY2hhbGxlbmdlcyBieVxuY3JlYXRpbmcgb3IgbW9kaWZ5aW5nIEluZ3Jlc3MgcmVzb3VyY2VzIGluIG9yZGVyIHRvIHJvdXRlIHJlcXVlc3RzIGZvclxuJy8ud2VsbC1rbm93bi9hY21lLWNoYWxsZW5nZS9YWVonIHRvICdjaGFsbGVuZ2Ugc29sdmVyJyBwb2RzIHRoYXQgYXJlXG5wcm92aXNpb25lZCBieSBjZXJ0LW1hbmFnZXIgZm9yIGVhY2ggQ2hhbGxlbmdlIHRvIGJlIGNvbXBsZXRlZC4iLCJwcm9wZXJ0aWVzIjp7ImNsYXNzIjp7ImRlc2NyaXB0aW9uIjoiVGhpcyBmaWVsZCBjb25maWd1cmVzIHRoZSBhbm5vdGF0aW9uIGBrdWJlcm5ldGVzLmlvL2luZ3Jlc3MuY2xhc3NgIHdoZW5cbmNyZWF0aW5nIEluZ3Jlc3MgcmVzb3VyY2VzIHRvIHNvbHZlIEFDTUUgY2hhbGxlbmdlcyB0aGF0IHVzZSB0aGlzXG5jaGFsbGVuZ2Ugc29sdmVyLiBPbmx5IG9uZSBvZiBgY2xhc3NgLCBgbmFtZWAgb3IgYGluZ3Jlc3NDbGFzc05hbWVgIG1heVxuYmUgc3BlY2lmaWVkLiIsInR5cGUiOiJzdHJpbmcifSwiaW5ncmVzc0NsYXNzTmFtZSI6eyJkZXNjcmlwdGlvbiI6IlRoaXMgZmllbGQgY29uZmlndXJlcyB0aGUgZmllbGQgYGluZ3Jlc3NDbGFzc05hbWVgIG9uIHRoZSBjcmVhdGVkIEluZ3Jlc3NcbnJlc291cmNlcyB1c2VkIHRvIHNvbHZlIEFDTUUgY2hhbGxlbmdlcyB0aGF0IHVzZSB0aGlzIGNoYWxsZW5nZSBzb2x2ZXIuXG5UaGlzIGlzIHRoZSByZWNvbW1lbmRlZCB3YXkgb2YgY29uZmlndXJpbmcgdGhlIGluZ3Jlc3MgY2xhc3MuIE9ubHkgb25lIG9mXG5gY2xhc3NgLCBgbmFtZWAgb3IgYGluZ3Jlc3NDbGFzc05hbWVgIG1heSBiZSBzcGVjaWZpZWQuIiwidHlwZSI6InN0cmluZyJ9LCJpbmdyZXNzVGVtcGxhdGUiOnsiZGVzY3JpcHRpb24iOiJPcHRpb25hbCBpbmdyZXNzIHRlbXBsYXRlIHVzZWQgdG8gY29uZmlndXJlIHRoZSBBQ01FIGNoYWxsZW5nZSBzb2x2ZXJcbmluZ3Jlc3MgdXNlZCBmb3IgSFRUUDAxIGNoYWxsZW5nZXMuIiwicHJvcGVydGllcyI6eyJtZXRhZGF0YSI6eyJkZXNjcmlwdGlvbiI6Ik9iamVjdE1ldGEgb3ZlcnJpZGVzIGZvciB0aGUgaW5ncmVzcyB1c2VkIHRvIHNvbHZlIEhUVFAwMSBjaGFsbGVuZ2VzLlxuT25seSB0aGUgJ2xhYmVscycgYW5kICdhbm5vdGF0aW9ucycgZmllbGRzIG1heSBiZSBzZXQuXG5JZiBsYWJlbHMgb3IgYW5ub3RhdGlvbnMgb3ZlcmxhcCB3aXRoIGluLWJ1aWx0IHZhbHVlcywgdGhlIHZhbHVlcyBoZXJlXG53aWxsIG92ZXJyaWRlIHRoZSBpbi1idWlsdCB2YWx1ZXMuIiwicHJvcGVydGllcyI6eyJhbm5vdGF0aW9ucyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJ0eXBlIjoic3RyaW5nIn0sImRlc2NyaXB0aW9uIjoiQW5ub3RhdGlvbnMgdGhhdCBzaG91bGQgYmUgYWRkZWQgdG8gdGhlIGNyZWF0ZWQgQUNNRSBIVFRQMDEgc29sdmVyIGluZ3Jlc3MuIiwidHlwZSI6Im9iamVjdCJ9LCJsYWJlbHMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6IkxhYmVscyB0aGF0IHNob3VsZCBiZSBhZGRlZCB0byB0aGUgY3JlYXRlZCBBQ01FIEhUVFAwMSBzb2x2ZXIgaW5ncmVzcy4iLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJUaGUgbmFtZSBvZiB0aGUgaW5ncmVzcyByZXNvdXJjZSB0aGF0IHNob3VsZCBoYXZlIEFDTUUgY2hhbGxlbmdlIHNvbHZpbmdcbnJvdXRlcyBpbnNlcnRlZCBpbnRvIGl0IGluIG9yZGVyIHRvIHNvbHZlIEhUVFAwMSBjaGFsbGVuZ2VzLlxuVGhpcyBpcyB0eXBpY2FsbHkgdXNlZCBpbiBjb25qdW5jdGlvbiB3aXRoIGluZ3Jlc3MgY29udHJvbGxlcnMgbGlrZVxuaW5ncmVzcy1nY2UsIHdoaWNoIG1haW50YWlucyBhIDE6MSBtYXBwaW5nIGJldHdlZW4gZXh0ZXJuYWwgSVBzIGFuZFxuaW5ncmVzcyByZXNvdXJjZXMuIE9ubHkgb25lIG9mIGBjbGFzc2AsIGBuYW1lYCBvciBgaW5ncmVzc0NsYXNzTmFtZWAgbWF5XG5iZSBzcGVjaWZpZWQuIiwidHlwZSI6InN0cmluZyJ9LCJwb2RUZW1wbGF0ZSI6eyJkZXNjcmlwdGlvbiI6Ik9wdGlvbmFsIHBvZCB0ZW1wbGF0ZSB1c2VkIHRvIGNvbmZpZ3VyZSB0aGUgQUNNRSBjaGFsbGVuZ2Ugc29sdmVyIHBvZHNcbnVzZWQgZm9yIEhUVFAwMSBjaGFsbGVuZ2VzLiIsInByb3BlcnRpZXMiOnsibWV0YWRhdGEiOnsiZGVzY3JpcHRpb24iOiJPYmplY3RNZXRhIG92ZXJyaWRlcyBmb3IgdGhlIHBvZCB1c2VkIHRvIHNvbHZlIEhUVFAwMSBjaGFsbGVuZ2VzLlxuT25seSB0aGUgJ2xhYmVscycgYW5kICdhbm5vdGF0aW9ucycgZmllbGRzIG1heSBiZSBzZXQuXG5JZiBsYWJlbHMgb3IgYW5ub3RhdGlvbnMgb3ZlcmxhcCB3aXRoIGluLWJ1aWx0IHZhbHVlcywgdGhlIHZhbHVlcyBoZXJlXG53aWxsIG92ZXJyaWRlIHRoZSBpbi1idWlsdCB2YWx1ZXMuIiwicHJvcGVydGllcyI6eyJhbm5vdGF0aW9ucyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJ0eXBlIjoic3RyaW5nIn0sImRlc2NyaXB0aW9uIjoiQW5ub3RhdGlvbnMgdGhhdCBzaG91bGQgYmUgYWRkZWQgdG8gdGhlIGNyZWF0ZWQgQUNNRSBIVFRQMDEgc29sdmVyIHBvZHMuIiwidHlwZSI6Im9iamVjdCJ9LCJsYWJlbHMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6IkxhYmVscyB0aGF0IHNob3VsZCBiZSBhZGRlZCB0byB0aGUgY3JlYXRlZCBBQ01FIEhUVFAwMSBzb2x2ZXIgcG9kcy4iLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJQb2RTcGVjIGRlZmluZXMgb3ZlcnJpZGVzIGZvciB0aGUgSFRUUDAxIGNoYWxsZW5nZSBzb2x2ZXIgcG9kLlxuQ2hlY2sgQUNNRUNoYWxsZW5nZVNvbHZlckhUVFAwMUluZ3Jlc3NQb2RTcGVjIHRvIGZpbmQgb3V0IGN1cnJlbnRseSBzdXBwb3J0ZWQgZmllbGRzLlxuQWxsIG90aGVyIGZpZWxkcyB3aWxsIGJlIGlnbm9yZWQuIiwicHJvcGVydGllcyI6eyJhZmZpbml0eSI6eyJkZXNjcmlwdGlvbiI6IklmIHNwZWNpZmllZCwgdGhlIHBvZCdzIHNjaGVkdWxpbmcgY29uc3RyYWludHMiLCJwcm9wZXJ0aWVzIjp7Im5vZGVBZmZpbml0eSI6eyJkZXNjcmlwdGlvbiI6IkRlc2NyaWJlcyBub2RlIGFmZmluaXR5IHNjaGVkdWxpbmcgcnVsZXMgZm9yIHRoZSBwb2QuIiwicHJvcGVydGllcyI6eyJwcmVmZXJyZWREdXJpbmdTY2hlZHVsaW5nSWdub3JlZER1cmluZ0V4ZWN1dGlvbiI6eyJkZXNjcmlwdGlvbiI6IlRoZSBzY2hlZHVsZXIgd2lsbCBwcmVmZXIgdG8gc2NoZWR1bGUgcG9kcyB0byBub2RlcyB0aGF0IHNhdGlzZnlcbnRoZSBhZmZpbml0eSBleHByZXNzaW9ucyBzcGVjaWZpZWQgYnkgdGhpcyBmaWVsZCwgYnV0IGl0IG1heSBjaG9vc2VcbmEgbm9kZSB0aGF0IHZpb2xhdGVzIG9uZSBvciBtb3JlIG9mIHRoZSBleHByZXNzaW9ucy4gVGhlIG5vZGUgdGhhdCBpc1xubW9zdCBwcmVmZXJyZWQgaXMgdGhlIG9uZSB3aXRoIHRoZSBncmVhdGVzdCBzdW0gb2Ygd2VpZ2h0cywgaS5lLlxuZm9yIGVhY2ggbm9kZSB0aGF0IG1lZXRzIGFsbCBvZiB0aGUgc2NoZWR1bGluZyByZXF1aXJlbWVudHMgKHJlc291cmNlXG5yZXF1ZXN0LCByZXF1aXJlZER1cmluZ1NjaGVkdWxpbmcgYWZmaW5pdHkgZXhwcmVzc2lvbnMsIGV0Yy4pLFxuY29tcHV0ZSBhIHN1bSBieSBpdGVyYXRpbmcgdGhyb3VnaCB0aGUgZWxlbWVudHMgb2YgdGhpcyBmaWVsZCBhbmQgYWRkaW5nXG5cIndlaWdodFwiIHRvIHRoZSBzdW0gaWYgdGhlIG5vZGUgbWF0Y2hlcyB0aGUgY29ycmVzcG9uZGluZyBtYXRjaEV4cHJlc3Npb25zOyB0aGVcbm5vZGUocykgd2l0aCB0aGUgaGlnaGVzdCBzdW0gYXJlIHRoZSBtb3N0IHByZWZlcnJlZC4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkFuIGVtcHR5IHByZWZlcnJlZCBzY2hlZHVsaW5nIHRlcm0gbWF0Y2hlcyBhbGwgb2JqZWN0cyB3aXRoIGltcGxpY2l0IHdlaWdodCAwXG4oaS5lLiBpdCdzIGEgbm8tb3ApLiBBIG51bGwgcHJlZmVycmVkIHNjaGVkdWxpbmcgdGVybSBtYXRjaGVzIG5vIG9iamVjdHMgKGkuZS4gaXMgYWxzbyBhIG5vLW9wKS4iLCJwcm9wZXJ0aWVzIjp7InByZWZlcmVuY2UiOnsiZGVzY3JpcHRpb24iOiJBIG5vZGUgc2VsZWN0b3IgdGVybSwgYXNzb2NpYXRlZCB3aXRoIHRoZSBjb3JyZXNwb25kaW5nIHdlaWdodC4iLCJwcm9wZXJ0aWVzIjp7Im1hdGNoRXhwcmVzc2lvbnMiOnsiZGVzY3JpcHRpb24iOiJBIGxpc3Qgb2Ygbm9kZSBzZWxlY3RvciByZXF1aXJlbWVudHMgYnkgbm9kZSdzIGxhYmVscy4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkEgbm9kZSBzZWxlY3RvciByZXF1aXJlbWVudCBpcyBhIHNlbGVjdG9yIHRoYXQgY29udGFpbnMgdmFsdWVzLCBhIGtleSwgYW5kIGFuIG9wZXJhdG9yXG50aGF0IHJlbGF0ZXMgdGhlIGtleSBhbmQgdmFsdWVzLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoiVGhlIGxhYmVsIGtleSB0aGF0IHRoZSBzZWxlY3RvciBhcHBsaWVzIHRvLiIsInR5cGUiOiJzdHJpbmcifSwib3BlcmF0b3IiOnsiZGVzY3JpcHRpb24iOiJSZXByZXNlbnRzIGEga2V5J3MgcmVsYXRpb25zaGlwIHRvIGEgc2V0IG9mIHZhbHVlcy5cblZhbGlkIG9wZXJhdG9ycyBhcmUgSW4sIE5vdEluLCBFeGlzdHMsIERvZXNOb3RFeGlzdC4gR3QsIGFuZCBMdC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlcyI6eyJkZXNjcmlwdGlvbiI6IkFuIGFycmF5IG9mIHN0cmluZyB2YWx1ZXMuIElmIHRoZSBvcGVyYXRvciBpcyBJbiBvciBOb3RJbixcbnRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBub24tZW1wdHkuIElmIHRoZSBvcGVyYXRvciBpcyBFeGlzdHMgb3IgRG9lc05vdEV4aXN0LFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIGVtcHR5LiBJZiB0aGUgb3BlcmF0b3IgaXMgR3Qgb3IgTHQsIHRoZSB2YWx1ZXNcbmFycmF5IG11c3QgaGF2ZSBhIHNpbmdsZSBlbGVtZW50LCB3aGljaCB3aWxsIGJlIGludGVycHJldGVkIGFzIGFuIGludGVnZXIuXG5UaGlzIGFycmF5IGlzIHJlcGxhY2VkIGR1cmluZyBhIHN0cmF0ZWdpYyBtZXJnZSBwYXRjaC4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifX0sInJlcXVpcmVkIjpbImtleSIsIm9wZXJhdG9yIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9LCJtYXRjaEZpZWxkcyI6eyJkZXNjcmlwdGlvbiI6IkEgbGlzdCBvZiBub2RlIHNlbGVjdG9yIHJlcXVpcmVtZW50cyBieSBub2RlJ3MgZmllbGRzLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQSBub2RlIHNlbGVjdG9yIHJlcXVpcmVtZW50IGlzIGEgc2VsZWN0b3IgdGhhdCBjb250YWlucyB2YWx1ZXMsIGEga2V5LCBhbmQgYW4gb3BlcmF0b3JcbnRoYXQgcmVsYXRlcyB0aGUga2V5IGFuZCB2YWx1ZXMuIiwicHJvcGVydGllcyI6eyJrZXkiOnsiZGVzY3JpcHRpb24iOiJUaGUgbGFiZWwga2V5IHRoYXQgdGhlIHNlbGVjdG9yIGFwcGxpZXMgdG8uIiwidHlwZSI6InN0cmluZyJ9LCJvcGVyYXRvciI6eyJkZXNjcmlwdGlvbiI6IlJlcHJlc2VudHMgYSBrZXkncyByZWxhdGlvbnNoaXAgdG8gYSBzZXQgb2YgdmFsdWVzLlxuVmFsaWQgb3BlcmF0b3JzIGFyZSBJbiwgTm90SW4sIEV4aXN0cywgRG9lc05vdEV4aXN0LiBHdCwgYW5kIEx0LiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWVzIjp7ImRlc2NyaXB0aW9uIjoiQW4gYXJyYXkgb2Ygc3RyaW5nIHZhbHVlcy4gSWYgdGhlIG9wZXJhdG9yIGlzIEluIG9yIE5vdEluLFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIG5vbi1lbXB0eS4gSWYgdGhlIG9wZXJhdG9yIGlzIEV4aXN0cyBvciBEb2VzTm90RXhpc3QsXG50aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgZW1wdHkuIElmIHRoZSBvcGVyYXRvciBpcyBHdCBvciBMdCwgdGhlIHZhbHVlc1xuYXJyYXkgbXVzdCBoYXZlIGEgc2luZ2xlIGVsZW1lbnQsIHdoaWNoIHdpbGwgYmUgaW50ZXJwcmV0ZWQgYXMgYW4gaW50ZWdlci5cblRoaXMgYXJyYXkgaXMgcmVwbGFjZWQgZHVyaW5nIGEgc3RyYXRlZ2ljIG1lcmdlIHBhdGNoLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9fSwicmVxdWlyZWQiOlsia2V5Iiwib3BlcmF0b3IiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn19LCJ0eXBlIjoib2JqZWN0IiwieC1rdWJlcm5ldGVzLW1hcC10eXBlIjoiYXRvbWljIn0sIndlaWdodCI6eyJkZXNjcmlwdGlvbiI6IldlaWdodCBhc3NvY2lhdGVkIHdpdGggbWF0Y2hpbmcgdGhlIGNvcnJlc3BvbmRpbmcgbm9kZVNlbGVjdG9yVGVybSwgaW4gdGhlIHJhbmdlIDEtMTAwLiIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifX0sInJlcXVpcmVkIjpbInByZWZlcmVuY2UiLCJ3ZWlnaHQiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn0sInJlcXVpcmVkRHVyaW5nU2NoZWR1bGluZ0lnbm9yZWREdXJpbmdFeGVjdXRpb24iOnsiZGVzY3JpcHRpb24iOiJJZiB0aGUgYWZmaW5pdHkgcmVxdWlyZW1lbnRzIHNwZWNpZmllZCBieSB0aGlzIGZpZWxkIGFyZSBub3QgbWV0IGF0XG5zY2hlZHVsaW5nIHRpbWUsIHRoZSBwb2Qgd2lsbCBub3QgYmUgc2NoZWR1bGVkIG9udG8gdGhlIG5vZGUuXG5JZiB0aGUgYWZmaW5pdHkgcmVxdWlyZW1lbnRzIHNwZWNpZmllZCBieSB0aGlzIGZpZWxkIGNlYXNlIHRvIGJlIG1ldFxuYXQgc29tZSBwb2ludCBkdXJpbmcgcG9kIGV4ZWN1dGlvbiAoZS5nLiBkdWUgdG8gYW4gdXBkYXRlKSwgdGhlIHN5c3RlbVxubWF5IG9yIG1heSBub3QgdHJ5IHRvIGV2ZW50dWFsbHkgZXZpY3QgdGhlIHBvZCBmcm9tIGl0cyBub2RlLiIsInByb3BlcnRpZXMiOnsibm9kZVNlbGVjdG9yVGVybXMiOnsiZGVzY3JpcHRpb24iOiJSZXF1aXJlZC4gQSBsaXN0IG9mIG5vZGUgc2VsZWN0b3IgdGVybXMuIFRoZSB0ZXJtcyBhcmUgT1JlZC4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkEgbnVsbCBvciBlbXB0eSBub2RlIHNlbGVjdG9yIHRlcm0gbWF0Y2hlcyBubyBvYmplY3RzLiBUaGUgcmVxdWlyZW1lbnRzIG9mXG50aGVtIGFyZSBBTkRlZC5cblRoZSBUb3BvbG9neVNlbGVjdG9yVGVybSB0eXBlIGltcGxlbWVudHMgYSBzdWJzZXQgb2YgdGhlIE5vZGVTZWxlY3RvclRlcm0uIiwicHJvcGVydGllcyI6eyJtYXRjaEV4cHJlc3Npb25zIjp7ImRlc2NyaXB0aW9uIjoiQSBsaXN0IG9mIG5vZGUgc2VsZWN0b3IgcmVxdWlyZW1lbnRzIGJ5IG5vZGUncyBsYWJlbHMuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJBIG5vZGUgc2VsZWN0b3IgcmVxdWlyZW1lbnQgaXMgYSBzZWxlY3RvciB0aGF0IGNvbnRhaW5zIHZhbHVlcywgYSBrZXksIGFuZCBhbiBvcGVyYXRvclxudGhhdCByZWxhdGVzIHRoZSBrZXkgYW5kIHZhbHVlcy4iLCJwcm9wZXJ0aWVzIjp7ImtleSI6eyJkZXNjcmlwdGlvbiI6IlRoZSBsYWJlbCBrZXkgdGhhdCB0aGUgc2VsZWN0b3IgYXBwbGllcyB0by4iLCJ0eXBlIjoic3RyaW5nIn0sIm9wZXJhdG9yIjp7ImRlc2NyaXB0aW9uIjoiUmVwcmVzZW50cyBhIGtleSdzIHJlbGF0aW9uc2hpcCB0byBhIHNldCBvZiB2YWx1ZXMuXG5WYWxpZCBvcGVyYXRvcnMgYXJlIEluLCBOb3RJbiwgRXhpc3RzLCBEb2VzTm90RXhpc3QuIEd0LCBhbmQgTHQuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZXMiOnsiZGVzY3JpcHRpb24iOiJBbiBhcnJheSBvZiBzdHJpbmcgdmFsdWVzLiBJZiB0aGUgb3BlcmF0b3IgaXMgSW4gb3IgTm90SW4sXG50aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgbm9uLWVtcHR5LiBJZiB0aGUgb3BlcmF0b3IgaXMgRXhpc3RzIG9yIERvZXNOb3RFeGlzdCxcbnRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBlbXB0eS4gSWYgdGhlIG9wZXJhdG9yIGlzIEd0IG9yIEx0LCB0aGUgdmFsdWVzXG5hcnJheSBtdXN0IGhhdmUgYSBzaW5nbGUgZWxlbWVudCwgd2hpY2ggd2lsbCBiZSBpbnRlcnByZXRlZCBhcyBhbiBpbnRlZ2VyLlxuVGhpcyBhcnJheSBpcyByZXBsYWNlZCBkdXJpbmcgYSBzdHJhdGVnaWMgbWVyZ2UgcGF0Y2guIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn19LCJyZXF1aXJlZCI6WyJrZXkiLCJvcGVyYXRvciJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifSwibWF0Y2hGaWVsZHMiOnsiZGVzY3JpcHRpb24iOiJBIGxpc3Qgb2Ygbm9kZSBzZWxlY3RvciByZXF1aXJlbWVudHMgYnkgbm9kZSdzIGZpZWxkcy4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkEgbm9kZSBzZWxlY3RvciByZXF1aXJlbWVudCBpcyBhIHNlbGVjdG9yIHRoYXQgY29udGFpbnMgdmFsdWVzLCBhIGtleSwgYW5kIGFuIG9wZXJhdG9yXG50aGF0IHJlbGF0ZXMgdGhlIGtleSBhbmQgdmFsdWVzLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoiVGhlIGxhYmVsIGtleSB0aGF0IHRoZSBzZWxlY3RvciBhcHBsaWVzIHRvLiIsInR5cGUiOiJzdHJpbmcifSwib3BlcmF0b3IiOnsiZGVzY3JpcHRpb24iOiJSZXByZXNlbnRzIGEga2V5J3MgcmVsYXRpb25zaGlwIHRvIGEgc2V0IG9mIHZhbHVlcy5cblZhbGlkIG9wZXJhdG9ycyBhcmUgSW4sIE5vdEluLCBFeGlzdHMsIERvZXNOb3RFeGlzdC4gR3QsIGFuZCBMdC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlcyI6eyJkZXNjcmlwdGlvbiI6IkFuIGFycmF5IG9mIHN0cmluZyB2YWx1ZXMuIElmIHRoZSBvcGVyYXRvciBpcyBJbiBvciBOb3RJbixcbnRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBub24tZW1wdHkuIElmIHRoZSBvcGVyYXRvciBpcyBFeGlzdHMgb3IgRG9lc05vdEV4aXN0LFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIGVtcHR5LiBJZiB0aGUgb3BlcmF0b3IgaXMgR3Qgb3IgTHQsIHRoZSB2YWx1ZXNcbmFycmF5IG11c3QgaGF2ZSBhIHNpbmdsZSBlbGVtZW50LCB3aGljaCB3aWxsIGJlIGludGVycHJldGVkIGFzIGFuIGludGVnZXIuXG5UaGlzIGFycmF5IGlzIHJlcGxhY2VkIGR1cmluZyBhIHN0cmF0ZWdpYyBtZXJnZSBwYXRjaC4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifX0sInJlcXVpcmVkIjpbImtleSIsIm9wZXJhdG9yIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9fSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1tYXAtdHlwZSI6ImF0b21pYyJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn19LCJyZXF1aXJlZCI6WyJub2RlU2VsZWN0b3JUZXJtcyJdLCJ0eXBlIjoib2JqZWN0IiwieC1rdWJlcm5ldGVzLW1hcC10eXBlIjoiYXRvbWljIn19LCJ0eXBlIjoib2JqZWN0In0sInBvZEFmZmluaXR5Ijp7ImRlc2NyaXB0aW9uIjoiRGVzY3JpYmVzIHBvZCBhZmZpbml0eSBzY2hlZHVsaW5nIHJ1bGVzIChlLmcuIGNvLWxvY2F0ZSB0aGlzIHBvZCBpbiB0aGUgc2FtZSBub2RlLCB6b25lLCBldGMuIGFzIHNvbWUgb3RoZXIgcG9kKHMpKS4iLCJwcm9wZXJ0aWVzIjp7InByZWZlcnJlZER1cmluZ1NjaGVkdWxpbmdJZ25vcmVkRHVyaW5nRXhlY3V0aW9uIjp7ImRlc2NyaXB0aW9uIjoiVGhlIHNjaGVkdWxlciB3aWxsIHByZWZlciB0byBzY2hlZHVsZSBwb2RzIHRvIG5vZGVzIHRoYXQgc2F0aXNmeVxudGhlIGFmZmluaXR5IGV4cHJlc3Npb25zIHNwZWNpZmllZCBieSB0aGlzIGZpZWxkLCBidXQgaXQgbWF5IGNob29zZVxuYSBub2RlIHRoYXQgdmlvbGF0ZXMgb25lIG9yIG1vcmUgb2YgdGhlIGV4cHJlc3Npb25zLiBUaGUgbm9kZSB0aGF0IGlzXG5tb3N0IHByZWZlcnJlZCBpcyB0aGUgb25lIHdpdGggdGhlIGdyZWF0ZXN0IHN1bSBvZiB3ZWlnaHRzLCBpLmUuXG5mb3IgZWFjaCBub2RlIHRoYXQgbWVldHMgYWxsIG9mIHRoZSBzY2hlZHVsaW5nIHJlcXVpcmVtZW50cyAocmVzb3VyY2VcbnJlcXVlc3QsIHJlcXVpcmVkRHVyaW5nU2NoZWR1bGluZyBhZmZpbml0eSBleHByZXNzaW9ucywgZXRjLiksXG5jb21wdXRlIGEgc3VtIGJ5IGl0ZXJhdGluZyB0aHJvdWdoIHRoZSBlbGVtZW50cyBvZiB0aGlzIGZpZWxkIGFuZCBhZGRpbmdcblwid2VpZ2h0XCIgdG8gdGhlIHN1bSBpZiB0aGUgbm9kZSBoYXMgcG9kcyB3aGljaCBtYXRjaGVzIHRoZSBjb3JyZXNwb25kaW5nIHBvZEFmZmluaXR5VGVybTsgdGhlXG5ub2RlKHMpIHdpdGggdGhlIGhpZ2hlc3Qgc3VtIGFyZSB0aGUgbW9zdCBwcmVmZXJyZWQuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJUaGUgd2VpZ2h0cyBvZiBhbGwgb2YgdGhlIG1hdGNoZWQgV2VpZ2h0ZWRQb2RBZmZpbml0eVRlcm0gZmllbGRzIGFyZSBhZGRlZCBwZXItbm9kZSB0byBmaW5kIHRoZSBtb3N0IHByZWZlcnJlZCBub2RlKHMpIiwicHJvcGVydGllcyI6eyJwb2RBZmZpbml0eVRlcm0iOnsiZGVzY3JpcHRpb24iOiJSZXF1aXJlZC4gQSBwb2QgYWZmaW5pdHkgdGVybSwgYXNzb2NpYXRlZCB3aXRoIHRoZSBjb3JyZXNwb25kaW5nIHdlaWdodC4iLCJwcm9wZXJ0aWVzIjp7ImxhYmVsU2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJBIGxhYmVsIHF1ZXJ5IG92ZXIgYSBzZXQgb2YgcmVzb3VyY2VzLCBpbiB0aGlzIGNhc2UgcG9kcy5cbklmIGl0J3MgbnVsbCwgdGhpcyBQb2RBZmZpbml0eVRlcm0gbWF0Y2hlcyB3aXRoIG5vIFBvZHMuIiwicHJvcGVydGllcyI6eyJtYXRjaEV4cHJlc3Npb25zIjp7ImRlc2NyaXB0aW9uIjoibWF0Y2hFeHByZXNzaW9ucyBpcyBhIGxpc3Qgb2YgbGFiZWwgc2VsZWN0b3IgcmVxdWlyZW1lbnRzLiBUaGUgcmVxdWlyZW1lbnRzIGFyZSBBTkRlZC4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkEgbGFiZWwgc2VsZWN0b3IgcmVxdWlyZW1lbnQgaXMgYSBzZWxlY3RvciB0aGF0IGNvbnRhaW5zIHZhbHVlcywgYSBrZXksIGFuZCBhbiBvcGVyYXRvciB0aGF0XG5yZWxhdGVzIHRoZSBrZXkgYW5kIHZhbHVlcy4iLCJwcm9wZXJ0aWVzIjp7ImtleSI6eyJkZXNjcmlwdGlvbiI6ImtleSBpcyB0aGUgbGFiZWwga2V5IHRoYXQgdGhlIHNlbGVjdG9yIGFwcGxpZXMgdG8uIiwidHlwZSI6InN0cmluZyJ9LCJvcGVyYXRvciI6eyJkZXNjcmlwdGlvbiI6Im9wZXJhdG9yIHJlcHJlc2VudHMgYSBrZXkncyByZWxhdGlvbnNoaXAgdG8gYSBzZXQgb2YgdmFsdWVzLlxuVmFsaWQgb3BlcmF0b3JzIGFyZSBJbiwgTm90SW4sIEV4aXN0cyBhbmQgRG9lc05vdEV4aXN0LiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWVzIjp7ImRlc2NyaXB0aW9uIjoidmFsdWVzIGlzIGFuIGFycmF5IG9mIHN0cmluZyB2YWx1ZXMuIElmIHRoZSBvcGVyYXRvciBpcyBJbiBvciBOb3RJbixcbnRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBub24tZW1wdHkuIElmIHRoZSBvcGVyYXRvciBpcyBFeGlzdHMgb3IgRG9lc05vdEV4aXN0LFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIGVtcHR5LiBUaGlzIGFycmF5IGlzIHJlcGxhY2VkIGR1cmluZyBhIHN0cmF0ZWdpY1xubWVyZ2UgcGF0Y2guIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn19LCJyZXF1aXJlZCI6WyJrZXkiLCJvcGVyYXRvciJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifSwibWF0Y2hMYWJlbHMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6Im1hdGNoTGFiZWxzIGlzIGEgbWFwIG9mIHtrZXksdmFsdWV9IHBhaXJzLiBBIHNpbmdsZSB7a2V5LHZhbHVlfSBpbiB0aGUgbWF0Y2hMYWJlbHNcbm1hcCBpcyBlcXVpdmFsZW50IHRvIGFuIGVsZW1lbnQgb2YgbWF0Y2hFeHByZXNzaW9ucywgd2hvc2Uga2V5IGZpZWxkIGlzIFwia2V5XCIsIHRoZVxub3BlcmF0b3IgaXMgXCJJblwiLCBhbmQgdGhlIHZhbHVlcyBhcnJheSBjb250YWlucyBvbmx5IFwidmFsdWVcIi4gVGhlIHJlcXVpcmVtZW50cyBhcmUgQU5EZWQuIiwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1tYXAtdHlwZSI6ImF0b21pYyJ9LCJtYXRjaExhYmVsS2V5cyI6eyJkZXNjcmlwdGlvbiI6Ik1hdGNoTGFiZWxLZXlzIGlzIGEgc2V0IG9mIHBvZCBsYWJlbCBrZXlzIHRvIHNlbGVjdCB3aGljaCBwb2RzIHdpbGxcbmJlIHRha2VuIGludG8gY29uc2lkZXJhdGlvbi4gVGhlIGtleXMgYXJlIHVzZWQgdG8gbG9va3VwIHZhbHVlcyBmcm9tIHRoZVxuaW5jb21pbmcgcG9kIGxhYmVscywgdGhvc2Uga2V5LXZhbHVlIGxhYmVscyBhcmUgbWVyZ2VkIHdpdGggYGxhYmVsU2VsZWN0b3JgIGFzIGBrZXkgaW4gKHZhbHVlKWBcbnRvIHNlbGVjdCB0aGUgZ3JvdXAgb2YgZXhpc3RpbmcgcG9kcyB3aGljaCBwb2RzIHdpbGwgYmUgdGFrZW4gaW50byBjb25zaWRlcmF0aW9uXG5mb3IgdGhlIGluY29taW5nIHBvZCdzIHBvZCAoYW50aSkgYWZmaW5pdHkuIEtleXMgdGhhdCBkb24ndCBleGlzdCBpbiB0aGUgaW5jb21pbmdcbnBvZCBsYWJlbHMgd2lsbCBiZSBpZ25vcmVkLiBUaGUgZGVmYXVsdCB2YWx1ZSBpcyBlbXB0eS5cblRoZSBzYW1lIGtleSBpcyBmb3JiaWRkZW4gdG8gZXhpc3QgaW4gYm90aCBtYXRjaExhYmVsS2V5cyBhbmQgbGFiZWxTZWxlY3Rvci5cbkFsc28sIG1hdGNoTGFiZWxLZXlzIGNhbm5vdCBiZSBzZXQgd2hlbiBsYWJlbFNlbGVjdG9yIGlzbid0IHNldC5cblRoaXMgaXMgYSBiZXRhIGZpZWxkIGFuZCByZXF1aXJlcyBlbmFibGluZyBNYXRjaExhYmVsS2V5c0luUG9kQWZmaW5pdHkgZmVhdHVyZSBnYXRlIChlbmFibGVkIGJ5IGRlZmF1bHQpLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9LCJtaXNtYXRjaExhYmVsS2V5cyI6eyJkZXNjcmlwdGlvbiI6Ik1pc21hdGNoTGFiZWxLZXlzIGlzIGEgc2V0IG9mIHBvZCBsYWJlbCBrZXlzIHRvIHNlbGVjdCB3aGljaCBwb2RzIHdpbGxcbmJlIHRha2VuIGludG8gY29uc2lkZXJhdGlvbi4gVGhlIGtleXMgYXJlIHVzZWQgdG8gbG9va3VwIHZhbHVlcyBmcm9tIHRoZVxuaW5jb21pbmcgcG9kIGxhYmVscywgdGhvc2Uga2V5LXZhbHVlIGxhYmVscyBhcmUgbWVyZ2VkIHdpdGggYGxhYmVsU2VsZWN0b3JgIGFzIGBrZXkgbm90aW4gKHZhbHVlKWBcbnRvIHNlbGVjdCB0aGUgZ3JvdXAgb2YgZXhpc3RpbmcgcG9kcyB3aGljaCBwb2RzIHdpbGwgYmUgdGFrZW4gaW50byBjb25zaWRlcmF0aW9uXG5mb3IgdGhlIGluY29taW5nIHBvZCdzIHBvZCAoYW50aSkgYWZmaW5pdHkuIEtleXMgdGhhdCBkb24ndCBleGlzdCBpbiB0aGUgaW5jb21pbmdcbnBvZCBsYWJlbHMgd2lsbCBiZSBpZ25vcmVkLiBUaGUgZGVmYXVsdCB2YWx1ZSBpcyBlbXB0eS5cblRoZSBzYW1lIGtleSBpcyBmb3JiaWRkZW4gdG8gZXhpc3QgaW4gYm90aCBtaXNtYXRjaExhYmVsS2V5cyBhbmQgbGFiZWxTZWxlY3Rvci5cbkFsc28sIG1pc21hdGNoTGFiZWxLZXlzIGNhbm5vdCBiZSBzZXQgd2hlbiBsYWJlbFNlbGVjdG9yIGlzbid0IHNldC5cblRoaXMgaXMgYSBiZXRhIGZpZWxkIGFuZCByZXF1aXJlcyBlbmFibGluZyBNYXRjaExhYmVsS2V5c0luUG9kQWZmaW5pdHkgZmVhdHVyZSBnYXRlIChlbmFibGVkIGJ5IGRlZmF1bHQpLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9LCJuYW1lc3BhY2VTZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6IkEgbGFiZWwgcXVlcnkgb3ZlciB0aGUgc2V0IG9mIG5hbWVzcGFjZXMgdGhhdCB0aGUgdGVybSBhcHBsaWVzIHRvLlxuVGhlIHRlcm0gaXMgYXBwbGllZCB0byB0aGUgdW5pb24gb2YgdGhlIG5hbWVzcGFjZXMgc2VsZWN0ZWQgYnkgdGhpcyBmaWVsZFxuYW5kIHRoZSBvbmVzIGxpc3RlZCBpbiB0aGUgbmFtZXNwYWNlcyBmaWVsZC5cbm51bGwgc2VsZWN0b3IgYW5kIG51bGwgb3IgZW1wdHkgbmFtZXNwYWNlcyBsaXN0IG1lYW5zIFwidGhpcyBwb2QncyBuYW1lc3BhY2VcIi5cbkFuIGVtcHR5IHNlbGVjdG9yICh7fSkgbWF0Y2hlcyBhbGwgbmFtZXNwYWNlcy4iLCJwcm9wZXJ0aWVzIjp7Im1hdGNoRXhwcmVzc2lvbnMiOnsiZGVzY3JpcHRpb24iOiJtYXRjaEV4cHJlc3Npb25zIGlzIGEgbGlzdCBvZiBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudHMuIFRoZSByZXF1aXJlbWVudHMgYXJlIEFORGVkLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQSBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudCBpcyBhIHNlbGVjdG9yIHRoYXQgY29udGFpbnMgdmFsdWVzLCBhIGtleSwgYW5kIGFuIG9wZXJhdG9yIHRoYXRcbnJlbGF0ZXMgdGhlIGtleSBhbmQgdmFsdWVzLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoia2V5IGlzIHRoZSBsYWJlbCBrZXkgdGhhdCB0aGUgc2VsZWN0b3IgYXBwbGllcyB0by4iLCJ0eXBlIjoic3RyaW5nIn0sIm9wZXJhdG9yIjp7ImRlc2NyaXB0aW9uIjoib3BlcmF0b3IgcmVwcmVzZW50cyBhIGtleSdzIHJlbGF0aW9uc2hpcCB0byBhIHNldCBvZiB2YWx1ZXMuXG5WYWxpZCBvcGVyYXRvcnMgYXJlIEluLCBOb3RJbiwgRXhpc3RzIGFuZCBEb2VzTm90RXhpc3QuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZXMiOnsiZGVzY3JpcHRpb24iOiJ2YWx1ZXMgaXMgYW4gYXJyYXkgb2Ygc3RyaW5nIHZhbHVlcy4gSWYgdGhlIG9wZXJhdG9yIGlzIEluIG9yIE5vdEluLFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIG5vbi1lbXB0eS4gSWYgdGhlIG9wZXJhdG9yIGlzIEV4aXN0cyBvciBEb2VzTm90RXhpc3QsXG50aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgZW1wdHkuIFRoaXMgYXJyYXkgaXMgcmVwbGFjZWQgZHVyaW5nIGEgc3RyYXRlZ2ljXG5tZXJnZSBwYXRjaC4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifX0sInJlcXVpcmVkIjpbImtleSIsIm9wZXJhdG9yIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9LCJtYXRjaExhYmVscyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJ0eXBlIjoic3RyaW5nIn0sImRlc2NyaXB0aW9uIjoibWF0Y2hMYWJlbHMgaXMgYSBtYXAgb2Yge2tleSx2YWx1ZX0gcGFpcnMuIEEgc2luZ2xlIHtrZXksdmFsdWV9IGluIHRoZSBtYXRjaExhYmVsc1xubWFwIGlzIGVxdWl2YWxlbnQgdG8gYW4gZWxlbWVudCBvZiBtYXRjaEV4cHJlc3Npb25zLCB3aG9zZSBrZXkgZmllbGQgaXMgXCJrZXlcIiwgdGhlXG5vcGVyYXRvciBpcyBcIkluXCIsIGFuZCB0aGUgdmFsdWVzIGFycmF5IGNvbnRhaW5zIG9ubHkgXCJ2YWx1ZVwiLiBUaGUgcmVxdWlyZW1lbnRzIGFyZSBBTkRlZC4iLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0IiwieC1rdWJlcm5ldGVzLW1hcC10eXBlIjoiYXRvbWljIn0sIm5hbWVzcGFjZXMiOnsiZGVzY3JpcHRpb24iOiJuYW1lc3BhY2VzIHNwZWNpZmllcyBhIHN0YXRpYyBsaXN0IG9mIG5hbWVzcGFjZSBuYW1lcyB0aGF0IHRoZSB0ZXJtIGFwcGxpZXMgdG8uXG5UaGUgdGVybSBpcyBhcHBsaWVkIHRvIHRoZSB1bmlvbiBvZiB0aGUgbmFtZXNwYWNlcyBsaXN0ZWQgaW4gdGhpcyBmaWVsZFxuYW5kIHRoZSBvbmVzIHNlbGVjdGVkIGJ5IG5hbWVzcGFjZVNlbGVjdG9yLlxubnVsbCBvciBlbXB0eSBuYW1lc3BhY2VzIGxpc3QgYW5kIG51bGwgbmFtZXNwYWNlU2VsZWN0b3IgbWVhbnMgXCJ0aGlzIHBvZCdzIG5hbWVzcGFjZVwiLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9LCJ0b3BvbG9neUtleSI6eyJkZXNjcmlwdGlvbiI6IlRoaXMgcG9kIHNob3VsZCBiZSBjby1sb2NhdGVkIChhZmZpbml0eSkgb3Igbm90IGNvLWxvY2F0ZWQgKGFudGktYWZmaW5pdHkpIHdpdGggdGhlIHBvZHMgbWF0Y2hpbmdcbnRoZSBsYWJlbFNlbGVjdG9yIGluIHRoZSBzcGVjaWZpZWQgbmFtZXNwYWNlcywgd2hlcmUgY28tbG9jYXRlZCBpcyBkZWZpbmVkIGFzIHJ1bm5pbmcgb24gYSBub2RlXG53aG9zZSB2YWx1ZSBvZiB0aGUgbGFiZWwgd2l0aCBrZXkgdG9wb2xvZ3lLZXkgbWF0Y2hlcyB0aGF0IG9mIGFueSBub2RlIG9uIHdoaWNoIGFueSBvZiB0aGVcbnNlbGVjdGVkIHBvZHMgaXMgcnVubmluZy5cbkVtcHR5IHRvcG9sb2d5S2V5IGlzIG5vdCBhbGxvd2VkLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbInRvcG9sb2d5S2V5Il0sInR5cGUiOiJvYmplY3QifSwid2VpZ2h0Ijp7ImRlc2NyaXB0aW9uIjoid2VpZ2h0IGFzc29jaWF0ZWQgd2l0aCBtYXRjaGluZyB0aGUgY29ycmVzcG9uZGluZyBwb2RBZmZpbml0eVRlcm0sXG5pbiB0aGUgcmFuZ2UgMS0xMDAuIiwiZm9ybWF0IjoiaW50MzIiLCJ0eXBlIjoiaW50ZWdlciJ9fSwicmVxdWlyZWQiOlsicG9kQWZmaW5pdHlUZXJtIiwid2VpZ2h0Il0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9LCJyZXF1aXJlZER1cmluZ1NjaGVkdWxpbmdJZ25vcmVkRHVyaW5nRXhlY3V0aW9uIjp7ImRlc2NyaXB0aW9uIjoiSWYgdGhlIGFmZmluaXR5IHJlcXVpcmVtZW50cyBzcGVjaWZpZWQgYnkgdGhpcyBmaWVsZCBhcmUgbm90IG1ldCBhdFxuc2NoZWR1bGluZyB0aW1lLCB0aGUgcG9kIHdpbGwgbm90IGJlIHNjaGVkdWxlZCBvbnRvIHRoZSBub2RlLlxuSWYgdGhlIGFmZmluaXR5IHJlcXVpcmVtZW50cyBzcGVjaWZpZWQgYnkgdGhpcyBmaWVsZCBjZWFzZSB0byBiZSBtZXRcbmF0IHNvbWUgcG9pbnQgZHVyaW5nIHBvZCBleGVjdXRpb24gKGUuZy4gZHVlIHRvIGEgcG9kIGxhYmVsIHVwZGF0ZSksIHRoZVxuc3lzdGVtIG1heSBvciBtYXkgbm90IHRyeSB0byBldmVudHVhbGx5IGV2aWN0IHRoZSBwb2QgZnJvbSBpdHMgbm9kZS5cbldoZW4gdGhlcmUgYXJlIG11bHRpcGxlIGVsZW1lbnRzLCB0aGUgbGlzdHMgb2Ygbm9kZXMgY29ycmVzcG9uZGluZyB0byBlYWNoXG5wb2RBZmZpbml0eVRlcm0gYXJlIGludGVyc2VjdGVkLCBpLmUuIGFsbCB0ZXJtcyBtdXN0IGJlIHNhdGlzZmllZC4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkRlZmluZXMgYSBzZXQgb2YgcG9kcyAobmFtZWx5IHRob3NlIG1hdGNoaW5nIHRoZSBsYWJlbFNlbGVjdG9yXG5yZWxhdGl2ZSB0byB0aGUgZ2l2ZW4gbmFtZXNwYWNlKHMpKSB0aGF0IHRoaXMgcG9kIHNob3VsZCBiZVxuY28tbG9jYXRlZCAoYWZmaW5pdHkpIG9yIG5vdCBjby1sb2NhdGVkIChhbnRpLWFmZmluaXR5KSB3aXRoLFxud2hlcmUgY28tbG9jYXRlZCBpcyBkZWZpbmVkIGFzIHJ1bm5pbmcgb24gYSBub2RlIHdob3NlIHZhbHVlIG9mXG50aGUgbGFiZWwgd2l0aCBrZXkgXHUwMDNjdG9wb2xvZ3lLZXlcdTAwM2UgbWF0Y2hlcyB0aGF0IG9mIGFueSBub2RlIG9uIHdoaWNoXG5hIHBvZCBvZiB0aGUgc2V0IG9mIHBvZHMgaXMgcnVubmluZyIsInByb3BlcnRpZXMiOnsibGFiZWxTZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6IkEgbGFiZWwgcXVlcnkgb3ZlciBhIHNldCBvZiByZXNvdXJjZXMsIGluIHRoaXMgY2FzZSBwb2RzLlxuSWYgaXQncyBudWxsLCB0aGlzIFBvZEFmZmluaXR5VGVybSBtYXRjaGVzIHdpdGggbm8gUG9kcy4iLCJwcm9wZXJ0aWVzIjp7Im1hdGNoRXhwcmVzc2lvbnMiOnsiZGVzY3JpcHRpb24iOiJtYXRjaEV4cHJlc3Npb25zIGlzIGEgbGlzdCBvZiBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudHMuIFRoZSByZXF1aXJlbWVudHMgYXJlIEFORGVkLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQSBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudCBpcyBhIHNlbGVjdG9yIHRoYXQgY29udGFpbnMgdmFsdWVzLCBhIGtleSwgYW5kIGFuIG9wZXJhdG9yIHRoYXRcbnJlbGF0ZXMgdGhlIGtleSBhbmQgdmFsdWVzLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoia2V5IGlzIHRoZSBsYWJlbCBrZXkgdGhhdCB0aGUgc2VsZWN0b3IgYXBwbGllcyB0by4iLCJ0eXBlIjoic3RyaW5nIn0sIm9wZXJhdG9yIjp7ImRlc2NyaXB0aW9uIjoib3BlcmF0b3IgcmVwcmVzZW50cyBhIGtleSdzIHJlbGF0aW9uc2hpcCB0byBhIHNldCBvZiB2YWx1ZXMuXG5WYWxpZCBvcGVyYXRvcnMgYXJlIEluLCBOb3RJbiwgRXhpc3RzIGFuZCBEb2VzTm90RXhpc3QuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZXMiOnsiZGVzY3JpcHRpb24iOiJ2YWx1ZXMgaXMgYW4gYXJyYXkgb2Ygc3RyaW5nIHZhbHVlcy4gSWYgdGhlIG9wZXJhdG9yIGlzIEluIG9yIE5vdEluLFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIG5vbi1lbXB0eS4gSWYgdGhlIG9wZXJhdG9yIGlzIEV4aXN0cyBvciBEb2VzTm90RXhpc3QsXG50aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgZW1wdHkuIFRoaXMgYXJyYXkgaXMgcmVwbGFjZWQgZHVyaW5nIGEgc3RyYXRlZ2ljXG5tZXJnZSBwYXRjaC4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifX0sInJlcXVpcmVkIjpbImtleSIsIm9wZXJhdG9yIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9LCJtYXRjaExhYmVscyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJ0eXBlIjoic3RyaW5nIn0sImRlc2NyaXB0aW9uIjoibWF0Y2hMYWJlbHMgaXMgYSBtYXAgb2Yge2tleSx2YWx1ZX0gcGFpcnMuIEEgc2luZ2xlIHtrZXksdmFsdWV9IGluIHRoZSBtYXRjaExhYmVsc1xubWFwIGlzIGVxdWl2YWxlbnQgdG8gYW4gZWxlbWVudCBvZiBtYXRjaEV4cHJlc3Npb25zLCB3aG9zZSBrZXkgZmllbGQgaXMgXCJrZXlcIiwgdGhlXG5vcGVyYXRvciBpcyBcIkluXCIsIGFuZCB0aGUgdmFsdWVzIGFycmF5IGNvbnRhaW5zIG9ubHkgXCJ2YWx1ZVwiLiBUaGUgcmVxdWlyZW1lbnRzIGFyZSBBTkRlZC4iLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0IiwieC1rdWJlcm5ldGVzLW1hcC10eXBlIjoiYXRvbWljIn0sIm1hdGNoTGFiZWxLZXlzIjp7ImRlc2NyaXB0aW9uIjoiTWF0Y2hMYWJlbEtleXMgaXMgYSBzZXQgb2YgcG9kIGxhYmVsIGtleXMgdG8gc2VsZWN0IHdoaWNoIHBvZHMgd2lsbFxuYmUgdGFrZW4gaW50byBjb25zaWRlcmF0aW9uLiBUaGUga2V5cyBhcmUgdXNlZCB0byBsb29rdXAgdmFsdWVzIGZyb20gdGhlXG5pbmNvbWluZyBwb2QgbGFiZWxzLCB0aG9zZSBrZXktdmFsdWUgbGFiZWxzIGFyZSBtZXJnZWQgd2l0aCBgbGFiZWxTZWxlY3RvcmAgYXMgYGtleSBpbiAodmFsdWUpYFxudG8gc2VsZWN0IHRoZSBncm91cCBvZiBleGlzdGluZyBwb2RzIHdoaWNoIHBvZHMgd2lsbCBiZSB0YWtlbiBpbnRvIGNvbnNpZGVyYXRpb25cbmZvciB0aGUgaW5jb21pbmcgcG9kJ3MgcG9kIChhbnRpKSBhZmZpbml0eS4gS2V5cyB0aGF0IGRvbid0IGV4aXN0IGluIHRoZSBpbmNvbWluZ1xucG9kIGxhYmVscyB3aWxsIGJlIGlnbm9yZWQuIFRoZSBkZWZhdWx0IHZhbHVlIGlzIGVtcHR5LlxuVGhlIHNhbWUga2V5IGlzIGZvcmJpZGRlbiB0byBleGlzdCBpbiBib3RoIG1hdGNoTGFiZWxLZXlzIGFuZCBsYWJlbFNlbGVjdG9yLlxuQWxzbywgbWF0Y2hMYWJlbEtleXMgY2Fubm90IGJlIHNldCB3aGVuIGxhYmVsU2VsZWN0b3IgaXNuJ3Qgc2V0LlxuVGhpcyBpcyBhIGJldGEgZmllbGQgYW5kIHJlcXVpcmVzIGVuYWJsaW5nIE1hdGNoTGFiZWxLZXlzSW5Qb2RBZmZpbml0eSBmZWF0dXJlIGdhdGUgKGVuYWJsZWQgYnkgZGVmYXVsdCkuIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn0sIm1pc21hdGNoTGFiZWxLZXlzIjp7ImRlc2NyaXB0aW9uIjoiTWlzbWF0Y2hMYWJlbEtleXMgaXMgYSBzZXQgb2YgcG9kIGxhYmVsIGtleXMgdG8gc2VsZWN0IHdoaWNoIHBvZHMgd2lsbFxuYmUgdGFrZW4gaW50byBjb25zaWRlcmF0aW9uLiBUaGUga2V5cyBhcmUgdXNlZCB0byBsb29rdXAgdmFsdWVzIGZyb20gdGhlXG5pbmNvbWluZyBwb2QgbGFiZWxzLCB0aG9zZSBrZXktdmFsdWUgbGFiZWxzIGFyZSBtZXJnZWQgd2l0aCBgbGFiZWxTZWxlY3RvcmAgYXMgYGtleSBub3RpbiAodmFsdWUpYFxudG8gc2VsZWN0IHRoZSBncm91cCBvZiBleGlzdGluZyBwb2RzIHdoaWNoIHBvZHMgd2lsbCBiZSB0YWtlbiBpbnRvIGNvbnNpZGVyYXRpb25cbmZvciB0aGUgaW5jb21pbmcgcG9kJ3MgcG9kIChhbnRpKSBhZmZpbml0eS4gS2V5cyB0aGF0IGRvbid0IGV4aXN0IGluIHRoZSBpbmNvbWluZ1xucG9kIGxhYmVscyB3aWxsIGJlIGlnbm9yZWQuIFRoZSBkZWZhdWx0IHZhbHVlIGlzIGVtcHR5LlxuVGhlIHNhbWUga2V5IGlzIGZvcmJpZGRlbiB0byBleGlzdCBpbiBib3RoIG1pc21hdGNoTGFiZWxLZXlzIGFuZCBsYWJlbFNlbGVjdG9yLlxuQWxzbywgbWlzbWF0Y2hMYWJlbEtleXMgY2Fubm90IGJlIHNldCB3aGVuIGxhYmVsU2VsZWN0b3IgaXNuJ3Qgc2V0LlxuVGhpcyBpcyBhIGJldGEgZmllbGQgYW5kIHJlcXVpcmVzIGVuYWJsaW5nIE1hdGNoTGFiZWxLZXlzSW5Qb2RBZmZpbml0eSBmZWF0dXJlIGdhdGUgKGVuYWJsZWQgYnkgZGVmYXVsdCkuIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn0sIm5hbWVzcGFjZVNlbGVjdG9yIjp7ImRlc2NyaXB0aW9uIjoiQSBsYWJlbCBxdWVyeSBvdmVyIHRoZSBzZXQgb2YgbmFtZXNwYWNlcyB0aGF0IHRoZSB0ZXJtIGFwcGxpZXMgdG8uXG5UaGUgdGVybSBpcyBhcHBsaWVkIHRvIHRoZSB1bmlvbiBvZiB0aGUgbmFtZXNwYWNlcyBzZWxlY3RlZCBieSB0aGlzIGZpZWxkXG5hbmQgdGhlIG9uZXMgbGlzdGVkIGluIHRoZSBuYW1lc3BhY2VzIGZpZWxkLlxubnVsbCBzZWxlY3RvciBhbmQgbnVsbCBvciBlbXB0eSBuYW1lc3BhY2VzIGxpc3QgbWVhbnMgXCJ0aGlzIHBvZCdzIG5hbWVzcGFjZVwiLlxuQW4gZW1wdHkgc2VsZWN0b3IgKHt9KSBtYXRjaGVzIGFsbCBuYW1lc3BhY2VzLiIsInByb3BlcnRpZXMiOnsibWF0Y2hFeHByZXNzaW9ucyI6eyJkZXNjcmlwdGlvbiI6Im1hdGNoRXhwcmVzc2lvbnMgaXMgYSBsaXN0IG9mIGxhYmVsIHNlbGVjdG9yIHJlcXVpcmVtZW50cy4gVGhlIHJlcXVpcmVtZW50cyBhcmUgQU5EZWQuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJBIGxhYmVsIHNlbGVjdG9yIHJlcXVpcmVtZW50IGlzIGEgc2VsZWN0b3IgdGhhdCBjb250YWlucyB2YWx1ZXMsIGEga2V5LCBhbmQgYW4gb3BlcmF0b3IgdGhhdFxucmVsYXRlcyB0aGUga2V5IGFuZCB2YWx1ZXMuIiwicHJvcGVydGllcyI6eyJrZXkiOnsiZGVzY3JpcHRpb24iOiJrZXkgaXMgdGhlIGxhYmVsIGtleSB0aGF0IHRoZSBzZWxlY3RvciBhcHBsaWVzIHRvLiIsInR5cGUiOiJzdHJpbmcifSwib3BlcmF0b3IiOnsiZGVzY3JpcHRpb24iOiJvcGVyYXRvciByZXByZXNlbnRzIGEga2V5J3MgcmVsYXRpb25zaGlwIHRvIGEgc2V0IG9mIHZhbHVlcy5cblZhbGlkIG9wZXJhdG9ycyBhcmUgSW4sIE5vdEluLCBFeGlzdHMgYW5kIERvZXNOb3RFeGlzdC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlcyI6eyJkZXNjcmlwdGlvbiI6InZhbHVlcyBpcyBhbiBhcnJheSBvZiBzdHJpbmcgdmFsdWVzLiBJZiB0aGUgb3BlcmF0b3IgaXMgSW4gb3IgTm90SW4sXG50aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgbm9uLWVtcHR5LiBJZiB0aGUgb3BlcmF0b3IgaXMgRXhpc3RzIG9yIERvZXNOb3RFeGlzdCxcbnRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBlbXB0eS4gVGhpcyBhcnJheSBpcyByZXBsYWNlZCBkdXJpbmcgYSBzdHJhdGVnaWNcbm1lcmdlIHBhdGNoLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9fSwicmVxdWlyZWQiOlsia2V5Iiwib3BlcmF0b3IiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn0sIm1hdGNoTGFiZWxzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InR5cGUiOiJzdHJpbmcifSwiZGVzY3JpcHRpb24iOiJtYXRjaExhYmVscyBpcyBhIG1hcCBvZiB7a2V5LHZhbHVlfSBwYWlycy4gQSBzaW5nbGUge2tleSx2YWx1ZX0gaW4gdGhlIG1hdGNoTGFiZWxzXG5tYXAgaXMgZXF1aXZhbGVudCB0byBhbiBlbGVtZW50IG9mIG1hdGNoRXhwcmVzc2lvbnMsIHdob3NlIGtleSBmaWVsZCBpcyBcImtleVwiLCB0aGVcbm9wZXJhdG9yIGlzIFwiSW5cIiwgYW5kIHRoZSB2YWx1ZXMgYXJyYXkgY29udGFpbnMgb25seSBcInZhbHVlXCIuIFRoZSByZXF1aXJlbWVudHMgYXJlIEFORGVkLiIsInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtbWFwLXR5cGUiOiJhdG9taWMifSwibmFtZXNwYWNlcyI6eyJkZXNjcmlwdGlvbiI6Im5hbWVzcGFjZXMgc3BlY2lmaWVzIGEgc3RhdGljIGxpc3Qgb2YgbmFtZXNwYWNlIG5hbWVzIHRoYXQgdGhlIHRlcm0gYXBwbGllcyB0by5cblRoZSB0ZXJtIGlzIGFwcGxpZWQgdG8gdGhlIHVuaW9uIG9mIHRoZSBuYW1lc3BhY2VzIGxpc3RlZCBpbiB0aGlzIGZpZWxkXG5hbmQgdGhlIG9uZXMgc2VsZWN0ZWQgYnkgbmFtZXNwYWNlU2VsZWN0b3IuXG5udWxsIG9yIGVtcHR5IG5hbWVzcGFjZXMgbGlzdCBhbmQgbnVsbCBuYW1lc3BhY2VTZWxlY3RvciBtZWFucyBcInRoaXMgcG9kJ3MgbmFtZXNwYWNlXCIuIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn0sInRvcG9sb2d5S2V5Ijp7ImRlc2NyaXB0aW9uIjoiVGhpcyBwb2Qgc2hvdWxkIGJlIGNvLWxvY2F0ZWQgKGFmZmluaXR5KSBvciBub3QgY28tbG9jYXRlZCAoYW50aS1hZmZpbml0eSkgd2l0aCB0aGUgcG9kcyBtYXRjaGluZ1xudGhlIGxhYmVsU2VsZWN0b3IgaW4gdGhlIHNwZWNpZmllZCBuYW1lc3BhY2VzLCB3aGVyZSBjby1sb2NhdGVkIGlzIGRlZmluZWQgYXMgcnVubmluZyBvbiBhIG5vZGVcbndob3NlIHZhbHVlIG9mIHRoZSBsYWJlbCB3aXRoIGtleSB0b3BvbG9neUtleSBtYXRjaGVzIHRoYXQgb2YgYW55IG5vZGUgb24gd2hpY2ggYW55IG9mIHRoZVxuc2VsZWN0ZWQgcG9kcyBpcyBydW5uaW5nLlxuRW1wdHkgdG9wb2xvZ3lLZXkgaXMgbm90IGFsbG93ZWQuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsidG9wb2xvZ3lLZXkiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn19LCJ0eXBlIjoib2JqZWN0In0sInBvZEFudGlBZmZpbml0eSI6eyJkZXNjcmlwdGlvbiI6IkRlc2NyaWJlcyBwb2QgYW50aS1hZmZpbml0eSBzY2hlZHVsaW5nIHJ1bGVzIChlLmcuIGF2b2lkIHB1dHRpbmcgdGhpcyBwb2QgaW4gdGhlIHNhbWUgbm9kZSwgem9uZSwgZXRjLiBhcyBzb21lIG90aGVyIHBvZChzKSkuIiwicHJvcGVydGllcyI6eyJwcmVmZXJyZWREdXJpbmdTY2hlZHVsaW5nSWdub3JlZER1cmluZ0V4ZWN1dGlvbiI6eyJkZXNjcmlwdGlvbiI6IlRoZSBzY2hlZHVsZXIgd2lsbCBwcmVmZXIgdG8gc2NoZWR1bGUgcG9kcyB0byBub2RlcyB0aGF0IHNhdGlzZnlcbnRoZSBhbnRpLWFmZmluaXR5IGV4cHJlc3Npb25zIHNwZWNpZmllZCBieSB0aGlzIGZpZWxkLCBidXQgaXQgbWF5IGNob29zZVxuYSBub2RlIHRoYXQgdmlvbGF0ZXMgb25lIG9yIG1vcmUgb2YgdGhlIGV4cHJlc3Npb25zLiBUaGUgbm9kZSB0aGF0IGlzXG5tb3N0IHByZWZlcnJlZCBpcyB0aGUgb25lIHdpdGggdGhlIGdyZWF0ZXN0IHN1bSBvZiB3ZWlnaHRzLCBpLmUuXG5mb3IgZWFjaCBub2RlIHRoYXQgbWVldHMgYWxsIG9mIHRoZSBzY2hlZHVsaW5nIHJlcXVpcmVtZW50cyAocmVzb3VyY2VcbnJlcXVlc3QsIHJlcXVpcmVkRHVyaW5nU2NoZWR1bGluZyBhbnRpLWFmZmluaXR5IGV4cHJlc3Npb25zLCBldGMuKSxcbmNvbXB1dGUgYSBzdW0gYnkgaXRlcmF0aW5nIHRocm91Z2ggdGhlIGVsZW1lbnRzIG9mIHRoaXMgZmllbGQgYW5kIGFkZGluZ1xuXCJ3ZWlnaHRcIiB0byB0aGUgc3VtIGlmIHRoZSBub2RlIGhhcyBwb2RzIHdoaWNoIG1hdGNoZXMgdGhlIGNvcnJlc3BvbmRpbmcgcG9kQWZmaW5pdHlUZXJtOyB0aGVcbm5vZGUocykgd2l0aCB0aGUgaGlnaGVzdCBzdW0gYXJlIHRoZSBtb3N0IHByZWZlcnJlZC4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IlRoZSB3ZWlnaHRzIG9mIGFsbCBvZiB0aGUgbWF0Y2hlZCBXZWlnaHRlZFBvZEFmZmluaXR5VGVybSBmaWVsZHMgYXJlIGFkZGVkIHBlci1ub2RlIHRvIGZpbmQgdGhlIG1vc3QgcHJlZmVycmVkIG5vZGUocykiLCJwcm9wZXJ0aWVzIjp7InBvZEFmZmluaXR5VGVybSI6eyJkZXNjcmlwdGlvbiI6IlJlcXVpcmVkLiBBIHBvZCBhZmZpbml0eSB0ZXJtLCBhc3NvY2lhdGVkIHdpdGggdGhlIGNvcnJlc3BvbmRpbmcgd2VpZ2h0LiIsInByb3BlcnRpZXMiOnsibGFiZWxTZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6IkEgbGFiZWwgcXVlcnkgb3ZlciBhIHNldCBvZiByZXNvdXJjZXMsIGluIHRoaXMgY2FzZSBwb2RzLlxuSWYgaXQncyBudWxsLCB0aGlzIFBvZEFmZmluaXR5VGVybSBtYXRjaGVzIHdpdGggbm8gUG9kcy4iLCJwcm9wZXJ0aWVzIjp7Im1hdGNoRXhwcmVzc2lvbnMiOnsiZGVzY3JpcHRpb24iOiJtYXRjaEV4cHJlc3Npb25zIGlzIGEgbGlzdCBvZiBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudHMuIFRoZSByZXF1aXJlbWVudHMgYXJlIEFORGVkLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQSBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudCBpcyBhIHNlbGVjdG9yIHRoYXQgY29udGFpbnMgdmFsdWVzLCBhIGtleSwgYW5kIGFuIG9wZXJhdG9yIHRoYXRcbnJlbGF0ZXMgdGhlIGtleSBhbmQgdmFsdWVzLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoia2V5IGlzIHRoZSBsYWJlbCBrZXkgdGhhdCB0aGUgc2VsZWN0b3IgYXBwbGllcyB0by4iLCJ0eXBlIjoic3RyaW5nIn0sIm9wZXJhdG9yIjp7ImRlc2NyaXB0aW9uIjoib3BlcmF0b3IgcmVwcmVzZW50cyBhIGtleSdzIHJlbGF0aW9uc2hpcCB0byBhIHNldCBvZiB2YWx1ZXMuXG5WYWxpZCBvcGVyYXRvcnMgYXJlIEluLCBOb3RJbiwgRXhpc3RzIGFuZCBEb2VzTm90RXhpc3QuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZXMiOnsiZGVzY3JpcHRpb24iOiJ2YWx1ZXMgaXMgYW4gYXJyYXkgb2Ygc3RyaW5nIHZhbHVlcy4gSWYgdGhlIG9wZXJhdG9yIGlzIEluIG9yIE5vdEluLFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIG5vbi1lbXB0eS4gSWYgdGhlIG9wZXJhdG9yIGlzIEV4aXN0cyBvciBEb2VzTm90RXhpc3QsXG50aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgZW1wdHkuIFRoaXMgYXJyYXkgaXMgcmVwbGFjZWQgZHVyaW5nIGEgc3RyYXRlZ2ljXG5tZXJnZSBwYXRjaC4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifX0sInJlcXVpcmVkIjpbImtleSIsIm9wZXJhdG9yIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9LCJtYXRjaExhYmVscyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJ0eXBlIjoic3RyaW5nIn0sImRlc2NyaXB0aW9uIjoibWF0Y2hMYWJlbHMgaXMgYSBtYXAgb2Yge2tleSx2YWx1ZX0gcGFpcnMuIEEgc2luZ2xlIHtrZXksdmFsdWV9IGluIHRoZSBtYXRjaExhYmVsc1xubWFwIGlzIGVxdWl2YWxlbnQgdG8gYW4gZWxlbWVudCBvZiBtYXRjaEV4cHJlc3Npb25zLCB3aG9zZSBrZXkgZmllbGQgaXMgXCJrZXlcIiwgdGhlXG5vcGVyYXRvciBpcyBcIkluXCIsIGFuZCB0aGUgdmFsdWVzIGFycmF5IGNvbnRhaW5zIG9ubHkgXCJ2YWx1ZVwiLiBUaGUgcmVxdWlyZW1lbnRzIGFyZSBBTkRlZC4iLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0IiwieC1rdWJlcm5ldGVzLW1hcC10eXBlIjoiYXRvbWljIn0sIm1hdGNoTGFiZWxLZXlzIjp7ImRlc2NyaXB0aW9uIjoiTWF0Y2hMYWJlbEtleXMgaXMgYSBzZXQgb2YgcG9kIGxhYmVsIGtleXMgdG8gc2VsZWN0IHdoaWNoIHBvZHMgd2lsbFxuYmUgdGFrZW4gaW50byBjb25zaWRlcmF0aW9uLiBUaGUga2V5cyBhcmUgdXNlZCB0byBsb29rdXAgdmFsdWVzIGZyb20gdGhlXG5pbmNvbWluZyBwb2QgbGFiZWxzLCB0aG9zZSBrZXktdmFsdWUgbGFiZWxzIGFyZSBtZXJnZWQgd2l0aCBgbGFiZWxTZWxlY3RvcmAgYXMgYGtleSBpbiAodmFsdWUpYFxudG8gc2VsZWN0IHRoZSBncm91cCBvZiBleGlzdGluZyBwb2RzIHdoaWNoIHBvZHMgd2lsbCBiZSB0YWtlbiBpbnRvIGNvbnNpZGVyYXRpb25cbmZvciB0aGUgaW5jb21pbmcgcG9kJ3MgcG9kIChhbnRpKSBhZmZpbml0eS4gS2V5cyB0aGF0IGRvbid0IGV4aXN0IGluIHRoZSBpbmNvbWluZ1xucG9kIGxhYmVscyB3aWxsIGJlIGlnbm9yZWQuIFRoZSBkZWZhdWx0IHZhbHVlIGlzIGVtcHR5LlxuVGhlIHNhbWUga2V5IGlzIGZvcmJpZGRlbiB0byBleGlzdCBpbiBib3RoIG1hdGNoTGFiZWxLZXlzIGFuZCBsYWJlbFNlbGVjdG9yLlxuQWxzbywgbWF0Y2hMYWJlbEtleXMgY2Fubm90IGJlIHNldCB3aGVuIGxhYmVsU2VsZWN0b3IgaXNuJ3Qgc2V0LlxuVGhpcyBpcyBhIGJldGEgZmllbGQgYW5kIHJlcXVpcmVzIGVuYWJsaW5nIE1hdGNoTGFiZWxLZXlzSW5Qb2RBZmZpbml0eSBmZWF0dXJlIGdhdGUgKGVuYWJsZWQgYnkgZGVmYXVsdCkuIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn0sIm1pc21hdGNoTGFiZWxLZXlzIjp7ImRlc2NyaXB0aW9uIjoiTWlzbWF0Y2hMYWJlbEtleXMgaXMgYSBzZXQgb2YgcG9kIGxhYmVsIGtleXMgdG8gc2VsZWN0IHdoaWNoIHBvZHMgd2lsbFxuYmUgdGFrZW4gaW50byBjb25zaWRlcmF0aW9uLiBUaGUga2V5cyBhcmUgdXNlZCB0byBsb29rdXAgdmFsdWVzIGZyb20gdGhlXG5pbmNvbWluZyBwb2QgbGFiZWxzLCB0aG9zZSBrZXktdmFsdWUgbGFiZWxzIGFyZSBtZXJnZWQgd2l0aCBgbGFiZWxTZWxlY3RvcmAgYXMgYGtleSBub3RpbiAodmFsdWUpYFxudG8gc2VsZWN0IHRoZSBncm91cCBvZiBleGlzdGluZyBwb2RzIHdoaWNoIHBvZHMgd2lsbCBiZSB0YWtlbiBpbnRvIGNvbnNpZGVyYXRpb25cbmZvciB0aGUgaW5jb21pbmcgcG9kJ3MgcG9kIChhbnRpKSBhZmZpbml0eS4gS2V5cyB0aGF0IGRvbid0IGV4aXN0IGluIHRoZSBpbmNvbWluZ1xucG9kIGxhYmVscyB3aWxsIGJlIGlnbm9yZWQuIFRoZSBkZWZhdWx0IHZhbHVlIGlzIGVtcHR5LlxuVGhlIHNhbWUga2V5IGlzIGZvcmJpZGRlbiB0byBleGlzdCBpbiBib3RoIG1pc21hdGNoTGFiZWxLZXlzIGFuZCBsYWJlbFNlbGVjdG9yLlxuQWxzbywgbWlzbWF0Y2hMYWJlbEtleXMgY2Fubm90IGJlIHNldCB3aGVuIGxhYmVsU2VsZWN0b3IgaXNuJ3Qgc2V0LlxuVGhpcyBpcyBhIGJldGEgZmllbGQgYW5kIHJlcXVpcmVzIGVuYWJsaW5nIE1hdGNoTGFiZWxLZXlzSW5Qb2RBZmZpbml0eSBmZWF0dXJlIGdhdGUgKGVuYWJsZWQgYnkgZGVmYXVsdCkuIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn0sIm5hbWVzcGFjZVNlbGVjdG9yIjp7ImRlc2NyaXB0aW9uIjoiQSBsYWJlbCBxdWVyeSBvdmVyIHRoZSBzZXQgb2YgbmFtZXNwYWNlcyB0aGF0IHRoZSB0ZXJtIGFwcGxpZXMgdG8uXG5UaGUgdGVybSBpcyBhcHBsaWVkIHRvIHRoZSB1bmlvbiBvZiB0aGUgbmFtZXNwYWNlcyBzZWxlY3RlZCBieSB0aGlzIGZpZWxkXG5hbmQgdGhlIG9uZXMgbGlzdGVkIGluIHRoZSBuYW1lc3BhY2VzIGZpZWxkLlxubnVsbCBzZWxlY3RvciBhbmQgbnVsbCBvciBlbXB0eSBuYW1lc3BhY2VzIGxpc3QgbWVhbnMgXCJ0aGlzIHBvZCdzIG5hbWVzcGFjZVwiLlxuQW4gZW1wdHkgc2VsZWN0b3IgKHt9KSBtYXRjaGVzIGFsbCBuYW1lc3BhY2VzLiIsInByb3BlcnRpZXMiOnsibWF0Y2hFeHByZXNzaW9ucyI6eyJkZXNjcmlwdGlvbiI6Im1hdGNoRXhwcmVzc2lvbnMgaXMgYSBsaXN0IG9mIGxhYmVsIHNlbGVjdG9yIHJlcXVpcmVtZW50cy4gVGhlIHJlcXVpcmVtZW50cyBhcmUgQU5EZWQuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJBIGxhYmVsIHNlbGVjdG9yIHJlcXVpcmVtZW50IGlzIGEgc2VsZWN0b3IgdGhhdCBjb250YWlucyB2YWx1ZXMsIGEga2V5LCBhbmQgYW4gb3BlcmF0b3IgdGhhdFxucmVsYXRlcyB0aGUga2V5IGFuZCB2YWx1ZXMuIiwicHJvcGVydGllcyI6eyJrZXkiOnsiZGVzY3JpcHRpb24iOiJrZXkgaXMgdGhlIGxhYmVsIGtleSB0aGF0IHRoZSBzZWxlY3RvciBhcHBsaWVzIHRvLiIsInR5cGUiOiJzdHJpbmcifSwib3BlcmF0b3IiOnsiZGVzY3JpcHRpb24iOiJvcGVyYXRvciByZXByZXNlbnRzIGEga2V5J3MgcmVsYXRpb25zaGlwIHRvIGEgc2V0IG9mIHZhbHVlcy5cblZhbGlkIG9wZXJhdG9ycyBhcmUgSW4sIE5vdEluLCBFeGlzdHMgYW5kIERvZXNOb3RFeGlzdC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlcyI6eyJkZXNjcmlwdGlvbiI6InZhbHVlcyBpcyBhbiBhcnJheSBvZiBzdHJpbmcgdmFsdWVzLiBJZiB0aGUgb3BlcmF0b3IgaXMgSW4gb3IgTm90SW4sXG50aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgbm9uLWVtcHR5LiBJZiB0aGUgb3BlcmF0b3IgaXMgRXhpc3RzIG9yIERvZXNOb3RFeGlzdCxcbnRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBlbXB0eS4gVGhpcyBhcnJheSBpcyByZXBsYWNlZCBkdXJpbmcgYSBzdHJhdGVnaWNcbm1lcmdlIHBhdGNoLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9fSwicmVxdWlyZWQiOlsia2V5Iiwib3BlcmF0b3IiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn0sIm1hdGNoTGFiZWxzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InR5cGUiOiJzdHJpbmcifSwiZGVzY3JpcHRpb24iOiJtYXRjaExhYmVscyBpcyBhIG1hcCBvZiB7a2V5LHZhbHVlfSBwYWlycy4gQSBzaW5nbGUge2tleSx2YWx1ZX0gaW4gdGhlIG1hdGNoTGFiZWxzXG5tYXAgaXMgZXF1aXZhbGVudCB0byBhbiBlbGVtZW50IG9mIG1hdGNoRXhwcmVzc2lvbnMsIHdob3NlIGtleSBmaWVsZCBpcyBcImtleVwiLCB0aGVcbm9wZXJhdG9yIGlzIFwiSW5cIiwgYW5kIHRoZSB2YWx1ZXMgYXJyYXkgY29udGFpbnMgb25seSBcInZhbHVlXCIuIFRoZSByZXF1aXJlbWVudHMgYXJlIEFORGVkLiIsInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtbWFwLXR5cGUiOiJhdG9taWMifSwibmFtZXNwYWNlcyI6eyJkZXNjcmlwdGlvbiI6Im5hbWVzcGFjZXMgc3BlY2lmaWVzIGEgc3RhdGljIGxpc3Qgb2YgbmFtZXNwYWNlIG5hbWVzIHRoYXQgdGhlIHRlcm0gYXBwbGllcyB0by5cblRoZSB0ZXJtIGlzIGFwcGxpZWQgdG8gdGhlIHVuaW9uIG9mIHRoZSBuYW1lc3BhY2VzIGxpc3RlZCBpbiB0aGlzIGZpZWxkXG5hbmQgdGhlIG9uZXMgc2VsZWN0ZWQgYnkgbmFtZXNwYWNlU2VsZWN0b3IuXG5udWxsIG9yIGVtcHR5IG5hbWVzcGFjZXMgbGlzdCBhbmQgbnVsbCBuYW1lc3BhY2VTZWxlY3RvciBtZWFucyBcInRoaXMgcG9kJ3MgbmFtZXNwYWNlXCIuIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn0sInRvcG9sb2d5S2V5Ijp7ImRlc2NyaXB0aW9uIjoiVGhpcyBwb2Qgc2hvdWxkIGJlIGNvLWxvY2F0ZWQgKGFmZmluaXR5KSBvciBub3QgY28tbG9jYXRlZCAoYW50aS1hZmZpbml0eSkgd2l0aCB0aGUgcG9kcyBtYXRjaGluZ1xudGhlIGxhYmVsU2VsZWN0b3IgaW4gdGhlIHNwZWNpZmllZCBuYW1lc3BhY2VzLCB3aGVyZSBjby1sb2NhdGVkIGlzIGRlZmluZWQgYXMgcnVubmluZyBvbiBhIG5vZGVcbndob3NlIHZhbHVlIG9mIHRoZSBsYWJlbCB3aXRoIGtleSB0b3BvbG9neUtleSBtYXRjaGVzIHRoYXQgb2YgYW55IG5vZGUgb24gd2hpY2ggYW55IG9mIHRoZVxuc2VsZWN0ZWQgcG9kcyBpcyBydW5uaW5nLlxuRW1wdHkgdG9wb2xvZ3lLZXkgaXMgbm90IGFsbG93ZWQuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsidG9wb2xvZ3lLZXkiXSwidHlwZSI6Im9iamVjdCJ9LCJ3ZWlnaHQiOnsiZGVzY3JpcHRpb24iOiJ3ZWlnaHQgYXNzb2NpYXRlZCB3aXRoIG1hdGNoaW5nIHRoZSBjb3JyZXNwb25kaW5nIHBvZEFmZmluaXR5VGVybSxcbmluIHRoZSByYW5nZSAxLTEwMC4iLCJmb3JtYXQiOiJpbnQzMiIsInR5cGUiOiJpbnRlZ2VyIn19LCJyZXF1aXJlZCI6WyJwb2RBZmZpbml0eVRlcm0iLCJ3ZWlnaHQiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn0sInJlcXVpcmVkRHVyaW5nU2NoZWR1bGluZ0lnbm9yZWREdXJpbmdFeGVjdXRpb24iOnsiZGVzY3JpcHRpb24iOiJJZiB0aGUgYW50aS1hZmZpbml0eSByZXF1aXJlbWVudHMgc3BlY2lmaWVkIGJ5IHRoaXMgZmllbGQgYXJlIG5vdCBtZXQgYXRcbnNjaGVkdWxpbmcgdGltZSwgdGhlIHBvZCB3aWxsIG5vdCBiZSBzY2hlZHVsZWQgb250byB0aGUgbm9kZS5cbklmIHRoZSBhbnRpLWFmZmluaXR5IHJlcXVpcmVtZW50cyBzcGVjaWZpZWQgYnkgdGhpcyBmaWVsZCBjZWFzZSB0byBiZSBtZXRcbmF0IHNvbWUgcG9pbnQgZHVyaW5nIHBvZCBleGVjdXRpb24gKGUuZy4gZHVlIHRvIGEgcG9kIGxhYmVsIHVwZGF0ZSksIHRoZVxuc3lzdGVtIG1heSBvciBtYXkgbm90IHRyeSB0byBldmVudHVhbGx5IGV2aWN0IHRoZSBwb2QgZnJvbSBpdHMgbm9kZS5cbldoZW4gdGhlcmUgYXJlIG11bHRpcGxlIGVsZW1lbnRzLCB0aGUgbGlzdHMgb2Ygbm9kZXMgY29ycmVzcG9uZGluZyB0byBlYWNoXG5wb2RBZmZpbml0eVRlcm0gYXJlIGludGVyc2VjdGVkLCBpLmUuIGFsbCB0ZXJtcyBtdXN0IGJlIHNhdGlzZmllZC4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkRlZmluZXMgYSBzZXQgb2YgcG9kcyAobmFtZWx5IHRob3NlIG1hdGNoaW5nIHRoZSBsYWJlbFNlbGVjdG9yXG5yZWxhdGl2ZSB0byB0aGUgZ2l2ZW4gbmFtZXNwYWNlKHMpKSB0aGF0IHRoaXMgcG9kIHNob3VsZCBiZVxuY28tbG9jYXRlZCAoYWZmaW5pdHkpIG9yIG5vdCBjby1sb2NhdGVkIChhbnRpLWFmZmluaXR5KSB3aXRoLFxud2hlcmUgY28tbG9jYXRlZCBpcyBkZWZpbmVkIGFzIHJ1bm5pbmcgb24gYSBub2RlIHdob3NlIHZhbHVlIG9mXG50aGUgbGFiZWwgd2l0aCBrZXkgXHUwMDNjdG9wb2xvZ3lLZXlcdTAwM2UgbWF0Y2hlcyB0aGF0IG9mIGFueSBub2RlIG9uIHdoaWNoXG5hIHBvZCBvZiB0aGUgc2V0IG9mIHBvZHMgaXMgcnVubmluZyIsInByb3BlcnRpZXMiOnsibGFiZWxTZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6IkEgbGFiZWwgcXVlcnkgb3ZlciBhIHNldCBvZiByZXNvdXJjZXMsIGluIHRoaXMgY2FzZSBwb2RzLlxuSWYgaXQncyBudWxsLCB0aGlzIFBvZEFmZmluaXR5VGVybSBtYXRjaGVzIHdpdGggbm8gUG9kcy4iLCJwcm9wZXJ0aWVzIjp7Im1hdGNoRXhwcmVzc2lvbnMiOnsiZGVzY3JpcHRpb24iOiJtYXRjaEV4cHJlc3Npb25zIGlzIGEgbGlzdCBvZiBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudHMuIFRoZSByZXF1aXJlbWVudHMgYXJlIEFORGVkLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQSBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudCBpcyBhIHNlbGVjdG9yIHRoYXQgY29udGFpbnMgdmFsdWVzLCBhIGtleSwgYW5kIGFuIG9wZXJhdG9yIHRoYXRcbnJlbGF0ZXMgdGhlIGtleSBhbmQgdmFsdWVzLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoia2V5IGlzIHRoZSBsYWJlbCBrZXkgdGhhdCB0aGUgc2VsZWN0b3IgYXBwbGllcyB0by4iLCJ0eXBlIjoic3RyaW5nIn0sIm9wZXJhdG9yIjp7ImRlc2NyaXB0aW9uIjoib3BlcmF0b3IgcmVwcmVzZW50cyBhIGtleSdzIHJlbGF0aW9uc2hpcCB0byBhIHNldCBvZiB2YWx1ZXMuXG5WYWxpZCBvcGVyYXRvcnMgYXJlIEluLCBOb3RJbiwgRXhpc3RzIGFuZCBEb2VzTm90RXhpc3QuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZXMiOnsiZGVzY3JpcHRpb24iOiJ2YWx1ZXMgaXMgYW4gYXJyYXkgb2Ygc3RyaW5nIHZhbHVlcy4gSWYgdGhlIG9wZXJhdG9yIGlzIEluIG9yIE5vdEluLFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIG5vbi1lbXB0eS4gSWYgdGhlIG9wZXJhdG9yIGlzIEV4aXN0cyBvciBEb2VzTm90RXhpc3QsXG50aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgZW1wdHkuIFRoaXMgYXJyYXkgaXMgcmVwbGFjZWQgZHVyaW5nIGEgc3RyYXRlZ2ljXG5tZXJnZSBwYXRjaC4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifX0sInJlcXVpcmVkIjpbImtleSIsIm9wZXJhdG9yIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9LCJtYXRjaExhYmVscyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJ0eXBlIjoic3RyaW5nIn0sImRlc2NyaXB0aW9uIjoibWF0Y2hMYWJlbHMgaXMgYSBtYXAgb2Yge2tleSx2YWx1ZX0gcGFpcnMuIEEgc2luZ2xlIHtrZXksdmFsdWV9IGluIHRoZSBtYXRjaExhYmVsc1xubWFwIGlzIGVxdWl2YWxlbnQgdG8gYW4gZWxlbWVudCBvZiBtYXRjaEV4cHJlc3Npb25zLCB3aG9zZSBrZXkgZmllbGQgaXMgXCJrZXlcIiwgdGhlXG5vcGVyYXRvciBpcyBcIkluXCIsIGFuZCB0aGUgdmFsdWVzIGFycmF5IGNvbnRhaW5zIG9ubHkgXCJ2YWx1ZVwiLiBUaGUgcmVxdWlyZW1lbnRzIGFyZSBBTkRlZC4iLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0IiwieC1rdWJlcm5ldGVzLW1hcC10eXBlIjoiYXRvbWljIn0sIm1hdGNoTGFiZWxLZXlzIjp7ImRlc2NyaXB0aW9uIjoiTWF0Y2hMYWJlbEtleXMgaXMgYSBzZXQgb2YgcG9kIGxhYmVsIGtleXMgdG8gc2VsZWN0IHdoaWNoIHBvZHMgd2lsbFxuYmUgdGFrZW4gaW50byBjb25zaWRlcmF0aW9uLiBUaGUga2V5cyBhcmUgdXNlZCB0byBsb29rdXAgdmFsdWVzIGZyb20gdGhlXG5pbmNvbWluZyBwb2QgbGFiZWxzLCB0aG9zZSBrZXktdmFsdWUgbGFiZWxzIGFyZSBtZXJnZWQgd2l0aCBgbGFiZWxTZWxlY3RvcmAgYXMgYGtleSBpbiAodmFsdWUpYFxudG8gc2VsZWN0IHRoZSBncm91cCBvZiBleGlzdGluZyBwb2RzIHdoaWNoIHBvZHMgd2lsbCBiZSB0YWtlbiBpbnRvIGNvbnNpZGVyYXRpb25cbmZvciB0aGUgaW5jb21pbmcgcG9kJ3MgcG9kIChhbnRpKSBhZmZpbml0eS4gS2V5cyB0aGF0IGRvbid0IGV4aXN0IGluIHRoZSBpbmNvbWluZ1xucG9kIGxhYmVscyB3aWxsIGJlIGlnbm9yZWQuIFRoZSBkZWZhdWx0IHZhbHVlIGlzIGVtcHR5LlxuVGhlIHNhbWUga2V5IGlzIGZvcmJpZGRlbiB0byBleGlzdCBpbiBib3RoIG1hdGNoTGFiZWxLZXlzIGFuZCBsYWJlbFNlbGVjdG9yLlxuQWxzbywgbWF0Y2hMYWJlbEtleXMgY2Fubm90IGJlIHNldCB3aGVuIGxhYmVsU2VsZWN0b3IgaXNuJ3Qgc2V0LlxuVGhpcyBpcyBhIGJldGEgZmllbGQgYW5kIHJlcXVpcmVzIGVuYWJsaW5nIE1hdGNoTGFiZWxLZXlzSW5Qb2RBZmZpbml0eSBmZWF0dXJlIGdhdGUgKGVuYWJsZWQgYnkgZGVmYXVsdCkuIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn0sIm1pc21hdGNoTGFiZWxLZXlzIjp7ImRlc2NyaXB0aW9uIjoiTWlzbWF0Y2hMYWJlbEtleXMgaXMgYSBzZXQgb2YgcG9kIGxhYmVsIGtleXMgdG8gc2VsZWN0IHdoaWNoIHBvZHMgd2lsbFxuYmUgdGFrZW4gaW50byBjb25zaWRlcmF0aW9uLiBUaGUga2V5cyBhcmUgdXNlZCB0byBsb29rdXAgdmFsdWVzIGZyb20gdGhlXG5pbmNvbWluZyBwb2QgbGFiZWxzLCB0aG9zZSBrZXktdmFsdWUgbGFiZWxzIGFyZSBtZXJnZWQgd2l0aCBgbGFiZWxTZWxlY3RvcmAgYXMgYGtleSBub3RpbiAodmFsdWUpYFxudG8gc2VsZWN0IHRoZSBncm91cCBvZiBleGlzdGluZyBwb2RzIHdoaWNoIHBvZHMgd2lsbCBiZSB0YWtlbiBpbnRvIGNvbnNpZGVyYXRpb25cbmZvciB0aGUgaW5jb21pbmcgcG9kJ3MgcG9kIChhbnRpKSBhZmZpbml0eS4gS2V5cyB0aGF0IGRvbid0IGV4aXN0IGluIHRoZSBpbmNvbWluZ1xucG9kIGxhYmVscyB3aWxsIGJlIGlnbm9yZWQuIFRoZSBkZWZhdWx0IHZhbHVlIGlzIGVtcHR5LlxuVGhlIHNhbWUga2V5IGlzIGZvcmJpZGRlbiB0byBleGlzdCBpbiBib3RoIG1pc21hdGNoTGFiZWxLZXlzIGFuZCBsYWJlbFNlbGVjdG9yLlxuQWxzbywgbWlzbWF0Y2hMYWJlbEtleXMgY2Fubm90IGJlIHNldCB3aGVuIGxhYmVsU2VsZWN0b3IgaXNuJ3Qgc2V0LlxuVGhpcyBpcyBhIGJldGEgZmllbGQgYW5kIHJlcXVpcmVzIGVuYWJsaW5nIE1hdGNoTGFiZWxLZXlzSW5Qb2RBZmZpbml0eSBmZWF0dXJlIGdhdGUgKGVuYWJsZWQgYnkgZGVmYXVsdCkuIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn0sIm5hbWVzcGFjZVNlbGVjdG9yIjp7ImRlc2NyaXB0aW9uIjoiQSBsYWJlbCBxdWVyeSBvdmVyIHRoZSBzZXQgb2YgbmFtZXNwYWNlcyB0aGF0IHRoZSB0ZXJtIGFwcGxpZXMgdG8uXG5UaGUgdGVybSBpcyBhcHBsaWVkIHRvIHRoZSB1bmlvbiBvZiB0aGUgbmFtZXNwYWNlcyBzZWxlY3RlZCBieSB0aGlzIGZpZWxkXG5hbmQgdGhlIG9uZXMgbGlzdGVkIGluIHRoZSBuYW1lc3BhY2VzIGZpZWxkLlxubnVsbCBzZWxlY3RvciBhbmQgbnVsbCBvciBlbXB0eSBuYW1lc3BhY2VzIGxpc3QgbWVhbnMgXCJ0aGlzIHBvZCdzIG5hbWVzcGFjZVwiLlxuQW4gZW1wdHkgc2VsZWN0b3IgKHt9KSBtYXRjaGVzIGFsbCBuYW1lc3BhY2VzLiIsInByb3BlcnRpZXMiOnsibWF0Y2hFeHByZXNzaW9ucyI6eyJkZXNjcmlwdGlvbiI6Im1hdGNoRXhwcmVzc2lvbnMgaXMgYSBsaXN0IG9mIGxhYmVsIHNlbGVjdG9yIHJlcXVpcmVtZW50cy4gVGhlIHJlcXVpcmVtZW50cyBhcmUgQU5EZWQuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJBIGxhYmVsIHNlbGVjdG9yIHJlcXVpcmVtZW50IGlzIGEgc2VsZWN0b3IgdGhhdCBjb250YWlucyB2YWx1ZXMsIGEga2V5LCBhbmQgYW4gb3BlcmF0b3IgdGhhdFxucmVsYXRlcyB0aGUga2V5IGFuZCB2YWx1ZXMuIiwicHJvcGVydGllcyI6eyJrZXkiOnsiZGVzY3JpcHRpb24iOiJrZXkgaXMgdGhlIGxhYmVsIGtleSB0aGF0IHRoZSBzZWxlY3RvciBhcHBsaWVzIHRvLiIsInR5cGUiOiJzdHJpbmcifSwib3BlcmF0b3IiOnsiZGVzY3JpcHRpb24iOiJvcGVyYXRvciByZXByZXNlbnRzIGEga2V5J3MgcmVsYXRpb25zaGlwIHRvIGEgc2V0IG9mIHZhbHVlcy5cblZhbGlkIG9wZXJhdG9ycyBhcmUgSW4sIE5vdEluLCBFeGlzdHMgYW5kIERvZXNOb3RFeGlzdC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlcyI6eyJkZXNjcmlwdGlvbiI6InZhbHVlcyBpcyBhbiBhcnJheSBvZiBzdHJpbmcgdmFsdWVzLiBJZiB0aGUgb3BlcmF0b3IgaXMgSW4gb3IgTm90SW4sXG50aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgbm9uLWVtcHR5LiBJZiB0aGUgb3BlcmF0b3IgaXMgRXhpc3RzIG9yIERvZXNOb3RFeGlzdCxcbnRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBlbXB0eS4gVGhpcyBhcnJheSBpcyByZXBsYWNlZCBkdXJpbmcgYSBzdHJhdGVnaWNcbm1lcmdlIHBhdGNoLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9fSwicmVxdWlyZWQiOlsia2V5Iiwib3BlcmF0b3IiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn0sIm1hdGNoTGFiZWxzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InR5cGUiOiJzdHJpbmcifSwiZGVzY3JpcHRpb24iOiJtYXRjaExhYmVscyBpcyBhIG1hcCBvZiB7a2V5LHZhbHVlfSBwYWlycy4gQSBzaW5nbGUge2tleSx2YWx1ZX0gaW4gdGhlIG1hdGNoTGFiZWxzXG5tYXAgaXMgZXF1aXZhbGVudCB0byBhbiBlbGVtZW50IG9mIG1hdGNoRXhwcmVzc2lvbnMsIHdob3NlIGtleSBmaWVsZCBpcyBcImtleVwiLCB0aGVcbm9wZXJhdG9yIGlzIFwiSW5cIiwgYW5kIHRoZSB2YWx1ZXMgYXJyYXkgY29udGFpbnMgb25seSBcInZhbHVlXCIuIFRoZSByZXF1aXJlbWVudHMgYXJlIEFORGVkLiIsInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtbWFwLXR5cGUiOiJhdG9taWMifSwibmFtZXNwYWNlcyI6eyJkZXNjcmlwdGlvbiI6Im5hbWVzcGFjZXMgc3BlY2lmaWVzIGEgc3RhdGljIGxpc3Qgb2YgbmFtZXNwYWNlIG5hbWVzIHRoYXQgdGhlIHRlcm0gYXBwbGllcyB0by5cblRoZSB0ZXJtIGlzIGFwcGxpZWQgdG8gdGhlIHVuaW9uIG9mIHRoZSBuYW1lc3BhY2VzIGxpc3RlZCBpbiB0aGlzIGZpZWxkXG5hbmQgdGhlIG9uZXMgc2VsZWN0ZWQgYnkgbmFtZXNwYWNlU2VsZWN0b3IuXG5udWxsIG9yIGVtcHR5IG5hbWVzcGFjZXMgbGlzdCBhbmQgbnVsbCBuYW1lc3BhY2VTZWxlY3RvciBtZWFucyBcInRoaXMgcG9kJ3MgbmFtZXNwYWNlXCIuIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn0sInRvcG9sb2d5S2V5Ijp7ImRlc2NyaXB0aW9uIjoiVGhpcyBwb2Qgc2hvdWxkIGJlIGNvLWxvY2F0ZWQgKGFmZmluaXR5KSBvciBub3QgY28tbG9jYXRlZCAoYW50aS1hZmZpbml0eSkgd2l0aCB0aGUgcG9kcyBtYXRjaGluZ1xudGhlIGxhYmVsU2VsZWN0b3IgaW4gdGhlIHNwZWNpZmllZCBuYW1lc3BhY2VzLCB3aGVyZSBjby1sb2NhdGVkIGlzIGRlZmluZWQgYXMgcnVubmluZyBvbiBhIG5vZGVcbndob3NlIHZhbHVlIG9mIHRoZSBsYWJlbCB3aXRoIGtleSB0b3BvbG9neUtleSBtYXRjaGVzIHRoYXQgb2YgYW55IG5vZGUgb24gd2hpY2ggYW55IG9mIHRoZVxuc2VsZWN0ZWQgcG9kcyBpcyBydW5uaW5nLlxuRW1wdHkgdG9wb2xvZ3lLZXkgaXMgbm90IGFsbG93ZWQuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsidG9wb2xvZ3lLZXkiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In0sImltYWdlUHVsbFNlY3JldHMiOnsiZGVzY3JpcHRpb24iOiJJZiBzcGVjaWZpZWQsIHRoZSBwb2QncyBpbWFnZVB1bGxTZWNyZXRzIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJMb2NhbE9iamVjdFJlZmVyZW5jZSBjb250YWlucyBlbm91Z2ggaW5mb3JtYXRpb24gdG8gbGV0IHlvdSBsb2NhdGUgdGhlXG5yZWZlcmVuY2VkIG9iamVjdCBpbnNpZGUgdGhlIHNhbWUgbmFtZXNwYWNlLiIsInByb3BlcnRpZXMiOnsibmFtZSI6eyJkZWZhdWx0IjoiIiwiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSByZWZlcmVudC5cblRoaXMgZmllbGQgaXMgZWZmZWN0aXZlbHkgcmVxdWlyZWQsIGJ1dCBkdWUgdG8gYmFja3dhcmRzIGNvbXBhdGliaWxpdHkgaXNcbmFsbG93ZWQgdG8gYmUgZW1wdHkuIEluc3RhbmNlcyBvZiB0aGlzIHR5cGUgd2l0aCBhbiBlbXB0eSB2YWx1ZSBoZXJlIGFyZVxuYWxtb3N0IGNlcnRhaW5seSB3cm9uZy5cbk1vcmUgaW5mbzogaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvb3ZlcnZpZXcvd29ya2luZy13aXRoLW9iamVjdHMvbmFtZXMvI25hbWVzIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1tYXAtdHlwZSI6ImF0b21pYyJ9LCJ0eXBlIjoiYXJyYXkifSwibm9kZVNlbGVjdG9yIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InR5cGUiOiJzdHJpbmcifSwiZGVzY3JpcHRpb24iOiJOb2RlU2VsZWN0b3IgaXMgYSBzZWxlY3RvciB3aGljaCBtdXN0IGJlIHRydWUgZm9yIHRoZSBwb2QgdG8gZml0IG9uIGEgbm9kZS5cblNlbGVjdG9yIHdoaWNoIG11c3QgbWF0Y2ggYSBub2RlJ3MgbGFiZWxzIGZvciB0aGUgcG9kIHRvIGJlIHNjaGVkdWxlZCBvbiB0aGF0IG5vZGUuXG5Nb3JlIGluZm86IGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL2NvbmNlcHRzL2NvbmZpZ3VyYXRpb24vYXNzaWduLXBvZC1ub2RlLyIsInR5cGUiOiJvYmplY3QifSwicHJpb3JpdHlDbGFzc05hbWUiOnsiZGVzY3JpcHRpb24iOiJJZiBzcGVjaWZpZWQsIHRoZSBwb2QncyBwcmlvcml0eUNsYXNzTmFtZS4iLCJ0eXBlIjoic3RyaW5nIn0sInNlY3VyaXR5Q29udGV4dCI6eyJkZXNjcmlwdGlvbiI6IklmIHNwZWNpZmllZCwgdGhlIHBvZCdzIHNlY3VyaXR5IGNvbnRleHQiLCJwcm9wZXJ0aWVzIjp7ImZzR3JvdXAiOnsiZGVzY3JpcHRpb24iOiJBIHNwZWNpYWwgc3VwcGxlbWVudGFsIGdyb3VwIHRoYXQgYXBwbGllcyB0byBhbGwgY29udGFpbmVycyBpbiBhIHBvZC5cblNvbWUgdm9sdW1lIHR5cGVzIGFsbG93IHRoZSBLdWJlbGV0IHRvIGNoYW5nZSB0aGUgb3duZXJzaGlwIG9mIHRoYXQgdm9sdW1lXG50byBiZSBvd25lZCBieSB0aGUgcG9kOlxuXG4xLiBUaGUgb3duaW5nIEdJRCB3aWxsIGJlIHRoZSBGU0dyb3VwXG4yLiBUaGUgc2V0Z2lkIGJpdCBpcyBzZXQgKG5ldyBmaWxlcyBjcmVhdGVkIGluIHRoZSB2b2x1bWUgd2lsbCBiZSBvd25lZCBieSBGU0dyb3VwKVxuMy4gVGhlIHBlcm1pc3Npb24gYml0cyBhcmUgT1InZCB3aXRoIHJ3LXJ3LS0tLVxuXG5JZiB1bnNldCwgdGhlIEt1YmVsZXQgd2lsbCBub3QgbW9kaWZ5IHRoZSBvd25lcnNoaXAgYW5kIHBlcm1pc3Npb25zIG9mIGFueSB2b2x1bWUuXG5Ob3RlIHRoYXQgdGhpcyBmaWVsZCBjYW5ub3QgYmUgc2V0IHdoZW4gc3BlYy5vcy5uYW1lIGlzIHdpbmRvd3MuIiwiZm9ybWF0IjoiaW50NjQiLCJ0eXBlIjoiaW50ZWdlciJ9LCJmc0dyb3VwQ2hhbmdlUG9saWN5Ijp7ImRlc2NyaXB0aW9uIjoiZnNHcm91cENoYW5nZVBvbGljeSBkZWZpbmVzIGJlaGF2aW9yIG9mIGNoYW5naW5nIG93bmVyc2hpcCBhbmQgcGVybWlzc2lvbiBvZiB0aGUgdm9sdW1lXG5iZWZvcmUgYmVpbmcgZXhwb3NlZCBpbnNpZGUgUG9kLiBUaGlzIGZpZWxkIHdpbGwgb25seSBhcHBseSB0b1xudm9sdW1lIHR5cGVzIHdoaWNoIHN1cHBvcnQgZnNHcm91cCBiYXNlZCBvd25lcnNoaXAoYW5kIHBlcm1pc3Npb25zKS5cbkl0IHdpbGwgaGF2ZSBubyBlZmZlY3Qgb24gZXBoZW1lcmFsIHZvbHVtZSB0eXBlcyBzdWNoIGFzOiBzZWNyZXQsIGNvbmZpZ21hcHNcbmFuZCBlbXB0eWRpci5cblZhbGlkIHZhbHVlcyBhcmUgXCJPblJvb3RNaXNtYXRjaFwiIGFuZCBcIkFsd2F5c1wiLiBJZiBub3Qgc3BlY2lmaWVkLCBcIkFsd2F5c1wiIGlzIHVzZWQuXG5Ob3RlIHRoYXQgdGhpcyBmaWVsZCBjYW5ub3QgYmUgc2V0IHdoZW4gc3BlYy5vcy5uYW1lIGlzIHdpbmRvd3MuIiwidHlwZSI6InN0cmluZyJ9LCJydW5Bc0dyb3VwIjp7ImRlc2NyaXB0aW9uIjoiVGhlIEdJRCB0byBydW4gdGhlIGVudHJ5cG9pbnQgb2YgdGhlIGNvbnRhaW5lciBwcm9jZXNzLlxuVXNlcyBydW50aW1lIGRlZmF1bHQgaWYgdW5zZXQuXG5NYXkgYWxzbyBiZSBzZXQgaW4gU2VjdXJpdHlDb250ZXh0LiAgSWYgc2V0IGluIGJvdGggU2VjdXJpdHlDb250ZXh0IGFuZFxuUG9kU2VjdXJpdHlDb250ZXh0LCB0aGUgdmFsdWUgc3BlY2lmaWVkIGluIFNlY3VyaXR5Q29udGV4dCB0YWtlcyBwcmVjZWRlbmNlXG5mb3IgdGhhdCBjb250YWluZXIuXG5Ob3RlIHRoYXQgdGhpcyBmaWVsZCBjYW5ub3QgYmUgc2V0IHdoZW4gc3BlYy5vcy5uYW1lIGlzIHdpbmRvd3MuIiwiZm9ybWF0IjoiaW50NjQiLCJ0eXBlIjoiaW50ZWdlciJ9LCJydW5Bc05vblJvb3QiOnsiZGVzY3JpcHRpb24iOiJJbmRpY2F0ZXMgdGhhdCB0aGUgY29udGFpbmVyIG11c3QgcnVuIGFzIGEgbm9uLXJvb3QgdXNlci5cbklmIHRydWUsIHRoZSBLdWJlbGV0IHdpbGwgdmFsaWRhdGUgdGhlIGltYWdlIGF0IHJ1bnRpbWUgdG8gZW5zdXJlIHRoYXQgaXRcbmRvZXMgbm90IHJ1biBhcyBVSUQgMCAocm9vdCkgYW5kIGZhaWwgdG8gc3RhcnQgdGhlIGNvbnRhaW5lciBpZiBpdCBkb2VzLlxuSWYgdW5zZXQgb3IgZmFsc2UsIG5vIHN1Y2ggdmFsaWRhdGlvbiB3aWxsIGJlIHBlcmZvcm1lZC5cbk1heSBhbHNvIGJlIHNldCBpbiBTZWN1cml0eUNvbnRleHQuICBJZiBzZXQgaW4gYm90aCBTZWN1cml0eUNvbnRleHQgYW5kXG5Qb2RTZWN1cml0eUNvbnRleHQsIHRoZSB2YWx1ZSBzcGVjaWZpZWQgaW4gU2VjdXJpdHlDb250ZXh0IHRha2VzIHByZWNlZGVuY2UuIiwidHlwZSI6ImJvb2xlYW4ifSwicnVuQXNVc2VyIjp7ImRlc2NyaXB0aW9uIjoiVGhlIFVJRCB0byBydW4gdGhlIGVudHJ5cG9pbnQgb2YgdGhlIGNvbnRhaW5lciBwcm9jZXNzLlxuRGVmYXVsdHMgdG8gdXNlciBzcGVjaWZpZWQgaW4gaW1hZ2UgbWV0YWRhdGEgaWYgdW5zcGVjaWZpZWQuXG5NYXkgYWxzbyBiZSBzZXQgaW4gU2VjdXJpdHlDb250ZXh0LiAgSWYgc2V0IGluIGJvdGggU2VjdXJpdHlDb250ZXh0IGFuZFxuUG9kU2VjdXJpdHlDb250ZXh0LCB0aGUgdmFsdWUgc3BlY2lmaWVkIGluIFNlY3VyaXR5Q29udGV4dCB0YWtlcyBwcmVjZWRlbmNlXG5mb3IgdGhhdCBjb250YWluZXIuXG5Ob3RlIHRoYXQgdGhpcyBmaWVsZCBjYW5ub3QgYmUgc2V0IHdoZW4gc3BlYy5vcy5uYW1lIGlzIHdpbmRvd3MuIiwiZm9ybWF0IjoiaW50NjQiLCJ0eXBlIjoiaW50ZWdlciJ9LCJzZUxpbnV4T3B0aW9ucyI6eyJkZXNjcmlwdGlvbiI6IlRoZSBTRUxpbnV4IGNvbnRleHQgdG8gYmUgYXBwbGllZCB0byBhbGwgY29udGFpbmVycy5cbklmIHVuc3BlY2lmaWVkLCB0aGUgY29udGFpbmVyIHJ1bnRpbWUgd2lsbCBhbGxvY2F0ZSBhIHJhbmRvbSBTRUxpbnV4IGNvbnRleHQgZm9yIGVhY2hcbmNvbnRhaW5lci4gIE1heSBhbHNvIGJlIHNldCBpbiBTZWN1cml0eUNvbnRleHQuICBJZiBzZXQgaW5cbmJvdGggU2VjdXJpdHlDb250ZXh0IGFuZCBQb2RTZWN1cml0eUNvbnRleHQsIHRoZSB2YWx1ZSBzcGVjaWZpZWQgaW4gU2VjdXJpdHlDb250ZXh0XG50YWtlcyBwcmVjZWRlbmNlIGZvciB0aGF0IGNvbnRhaW5lci5cbk5vdGUgdGhhdCB0aGlzIGZpZWxkIGNhbm5vdCBiZSBzZXQgd2hlbiBzcGVjLm9zLm5hbWUgaXMgd2luZG93cy4iLCJwcm9wZXJ0aWVzIjp7ImxldmVsIjp7ImRlc2NyaXB0aW9uIjoiTGV2ZWwgaXMgU0VMaW51eCBsZXZlbCBsYWJlbCB0aGF0IGFwcGxpZXMgdG8gdGhlIGNvbnRhaW5lci4iLCJ0eXBlIjoic3RyaW5nIn0sInJvbGUiOnsiZGVzY3JpcHRpb24iOiJSb2xlIGlzIGEgU0VMaW51eCByb2xlIGxhYmVsIHRoYXQgYXBwbGllcyB0byB0aGUgY29udGFpbmVyLiIsInR5cGUiOiJzdHJpbmcifSwidHlwZSI6eyJkZXNjcmlwdGlvbiI6IlR5cGUgaXMgYSBTRUxpbnV4IHR5cGUgbGFiZWwgdGhhdCBhcHBsaWVzIHRvIHRoZSBjb250YWluZXIuIiwidHlwZSI6InN0cmluZyJ9LCJ1c2VyIjp7ImRlc2NyaXB0aW9uIjoiVXNlciBpcyBhIFNFTGludXggdXNlciBsYWJlbCB0aGF0IGFwcGxpZXMgdG8gdGhlIGNvbnRhaW5lci4iLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sInNlY2NvbXBQcm9maWxlIjp7ImRlc2NyaXB0aW9uIjoiVGhlIHNlY2NvbXAgb3B0aW9ucyB0byB1c2UgYnkgdGhlIGNvbnRhaW5lcnMgaW4gdGhpcyBwb2QuXG5Ob3RlIHRoYXQgdGhpcyBmaWVsZCBjYW5ub3QgYmUgc2V0IHdoZW4gc3BlYy5vcy5uYW1lIGlzIHdpbmRvd3MuIiwicHJvcGVydGllcyI6eyJsb2NhbGhvc3RQcm9maWxlIjp7ImRlc2NyaXB0aW9uIjoibG9jYWxob3N0UHJvZmlsZSBpbmRpY2F0ZXMgYSBwcm9maWxlIGRlZmluZWQgaW4gYSBmaWxlIG9uIHRoZSBub2RlIHNob3VsZCBiZSB1c2VkLlxuVGhlIHByb2ZpbGUgbXVzdCBiZSBwcmVjb25maWd1cmVkIG9uIHRoZSBub2RlIHRvIHdvcmsuXG5NdXN0IGJlIGEgZGVzY2VuZGluZyBwYXRoLCByZWxhdGl2ZSB0byB0aGUga3ViZWxldCdzIGNvbmZpZ3VyZWQgc2VjY29tcCBwcm9maWxlIGxvY2F0aW9uLlxuTXVzdCBiZSBzZXQgaWYgdHlwZSBpcyBcIkxvY2FsaG9zdFwiLiBNdXN0IE5PVCBiZSBzZXQgZm9yIGFueSBvdGhlciB0eXBlLiIsInR5cGUiOiJzdHJpbmcifSwidHlwZSI6eyJkZXNjcmlwdGlvbiI6InR5cGUgaW5kaWNhdGVzIHdoaWNoIGtpbmQgb2Ygc2VjY29tcCBwcm9maWxlIHdpbGwgYmUgYXBwbGllZC5cblZhbGlkIG9wdGlvbnMgYXJlOlxuXG5Mb2NhbGhvc3QgLSBhIHByb2ZpbGUgZGVmaW5lZCBpbiBhIGZpbGUgb24gdGhlIG5vZGUgc2hvdWxkIGJlIHVzZWQuXG5SdW50aW1lRGVmYXVsdCAtIHRoZSBjb250YWluZXIgcnVudGltZSBkZWZhdWx0IHByb2ZpbGUgc2hvdWxkIGJlIHVzZWQuXG5VbmNvbmZpbmVkIC0gbm8gcHJvZmlsZSBzaG91bGQgYmUgYXBwbGllZC4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJ0eXBlIl0sInR5cGUiOiJvYmplY3QifSwic3VwcGxlbWVudGFsR3JvdXBzIjp7ImRlc2NyaXB0aW9uIjoiQSBsaXN0IG9mIGdyb3VwcyBhcHBsaWVkIHRvIHRoZSBmaXJzdCBwcm9jZXNzIHJ1biBpbiBlYWNoIGNvbnRhaW5lciwgaW4gYWRkaXRpb25cbnRvIHRoZSBjb250YWluZXIncyBwcmltYXJ5IEdJRCwgdGhlIGZzR3JvdXAgKGlmIHNwZWNpZmllZCksIGFuZCBncm91cCBtZW1iZXJzaGlwc1xuZGVmaW5lZCBpbiB0aGUgY29udGFpbmVyIGltYWdlIGZvciB0aGUgdWlkIG9mIHRoZSBjb250YWluZXIgcHJvY2Vzcy4gSWYgdW5zcGVjaWZpZWQsXG5ubyBhZGRpdGlvbmFsIGdyb3VwcyBhcmUgYWRkZWQgdG8gYW55IGNvbnRhaW5lci4gTm90ZSB0aGF0IGdyb3VwIG1lbWJlcnNoaXBzXG5kZWZpbmVkIGluIHRoZSBjb250YWluZXIgaW1hZ2UgZm9yIHRoZSB1aWQgb2YgdGhlIGNvbnRhaW5lciBwcm9jZXNzIGFyZSBzdGlsbCBlZmZlY3RpdmUsXG5ldmVuIGlmIHRoZXkgYXJlIG5vdCBpbmNsdWRlZCBpbiB0aGlzIGxpc3QuXG5Ob3RlIHRoYXQgdGhpcyBmaWVsZCBjYW5ub3QgYmUgc2V0IHdoZW4gc3BlYy5vcy5uYW1lIGlzIHdpbmRvd3MuIiwiaXRlbXMiOnsiZm9ybWF0IjoiaW50NjQiLCJ0eXBlIjoiaW50ZWdlciJ9LCJ0eXBlIjoiYXJyYXkifSwic3lzY3RscyI6eyJkZXNjcmlwdGlvbiI6IlN5c2N0bHMgaG9sZCBhIGxpc3Qgb2YgbmFtZXNwYWNlZCBzeXNjdGxzIHVzZWQgZm9yIHRoZSBwb2QuIFBvZHMgd2l0aCB1bnN1cHBvcnRlZFxuc3lzY3RscyAoYnkgdGhlIGNvbnRhaW5lciBydW50aW1lKSBtaWdodCBmYWlsIHRvIGxhdW5jaC5cbk5vdGUgdGhhdCB0aGlzIGZpZWxkIGNhbm5vdCBiZSBzZXQgd2hlbiBzcGVjLm9zLm5hbWUgaXMgd2luZG93cy4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IlN5c2N0bCBkZWZpbmVzIGEga2VybmVsIHBhcmFtZXRlciB0byBiZSBzZXQiLCJwcm9wZXJ0aWVzIjp7Im5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIGEgcHJvcGVydHkgdG8gc2V0IiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZSI6eyJkZXNjcmlwdGlvbiI6IlZhbHVlIG9mIGEgcHJvcGVydHkgdG8gc2V0IiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibmFtZSIsInZhbHVlIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In19LCJ0eXBlIjoib2JqZWN0In0sInNlcnZpY2VBY2NvdW50TmFtZSI6eyJkZXNjcmlwdGlvbiI6IklmIHNwZWNpZmllZCwgdGhlIHBvZCdzIHNlcnZpY2UgYWNjb3VudCIsInR5cGUiOiJzdHJpbmcifSwidG9sZXJhdGlvbnMiOnsiZGVzY3JpcHRpb24iOiJJZiBzcGVjaWZpZWQsIHRoZSBwb2QncyB0b2xlcmF0aW9ucy4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IlRoZSBwb2QgdGhpcyBUb2xlcmF0aW9uIGlzIGF0dGFjaGVkIHRvIHRvbGVyYXRlcyBhbnkgdGFpbnQgdGhhdCBtYXRjaGVzXG50aGUgdHJpcGxlIFx1MDAzY2tleSx2YWx1ZSxlZmZlY3RcdTAwM2UgdXNpbmcgdGhlIG1hdGNoaW5nIG9wZXJhdG9yIFx1MDAzY29wZXJhdG9yXHUwMDNlLiIsInByb3BlcnRpZXMiOnsiZWZmZWN0Ijp7ImRlc2NyaXB0aW9uIjoiRWZmZWN0IGluZGljYXRlcyB0aGUgdGFpbnQgZWZmZWN0IHRvIG1hdGNoLiBFbXB0eSBtZWFucyBtYXRjaCBhbGwgdGFpbnQgZWZmZWN0cy5cbldoZW4gc3BlY2lmaWVkLCBhbGxvd2VkIHZhbHVlcyBhcmUgTm9TY2hlZHVsZSwgUHJlZmVyTm9TY2hlZHVsZSBhbmQgTm9FeGVjdXRlLiIsInR5cGUiOiJzdHJpbmcifSwia2V5Ijp7ImRlc2NyaXB0aW9uIjoiS2V5IGlzIHRoZSB0YWludCBrZXkgdGhhdCB0aGUgdG9sZXJhdGlvbiBhcHBsaWVzIHRvLiBFbXB0eSBtZWFucyBtYXRjaCBhbGwgdGFpbnQga2V5cy5cbklmIHRoZSBrZXkgaXMgZW1wdHksIG9wZXJhdG9yIG11c3QgYmUgRXhpc3RzOyB0aGlzIGNvbWJpbmF0aW9uIG1lYW5zIHRvIG1hdGNoIGFsbCB2YWx1ZXMgYW5kIGFsbCBrZXlzLiIsInR5cGUiOiJzdHJpbmcifSwib3BlcmF0b3IiOnsiZGVzY3JpcHRpb24iOiJPcGVyYXRvciByZXByZXNlbnRzIGEga2V5J3MgcmVsYXRpb25zaGlwIHRvIHRoZSB2YWx1ZS5cblZhbGlkIG9wZXJhdG9ycyBhcmUgRXhpc3RzIGFuZCBFcXVhbC4gRGVmYXVsdHMgdG8gRXF1YWwuXG5FeGlzdHMgaXMgZXF1aXZhbGVudCB0byB3aWxkY2FyZCBmb3IgdmFsdWUsIHNvIHRoYXQgYSBwb2QgY2FuXG50b2xlcmF0ZSBhbGwgdGFpbnRzIG9mIGEgcGFydGljdWxhciBjYXRlZ29yeS4iLCJ0eXBlIjoic3RyaW5nIn0sInRvbGVyYXRpb25TZWNvbmRzIjp7ImRlc2NyaXB0aW9uIjoiVG9sZXJhdGlvblNlY29uZHMgcmVwcmVzZW50cyB0aGUgcGVyaW9kIG9mIHRpbWUgdGhlIHRvbGVyYXRpb24gKHdoaWNoIG11c3QgYmVcbm9mIGVmZmVjdCBOb0V4ZWN1dGUsIG90aGVyd2lzZSB0aGlzIGZpZWxkIGlzIGlnbm9yZWQpIHRvbGVyYXRlcyB0aGUgdGFpbnQuIEJ5IGRlZmF1bHQsXG5pdCBpcyBub3Qgc2V0LCB3aGljaCBtZWFucyB0b2xlcmF0ZSB0aGUgdGFpbnQgZm9yZXZlciAoZG8gbm90IGV2aWN0KS4gWmVybyBhbmRcbm5lZ2F0aXZlIHZhbHVlcyB3aWxsIGJlIHRyZWF0ZWQgYXMgMCAoZXZpY3QgaW1tZWRpYXRlbHkpIGJ5IHRoZSBzeXN0ZW0uIiwiZm9ybWF0IjoiaW50NjQiLCJ0eXBlIjoiaW50ZWdlciJ9LCJ2YWx1ZSI6eyJkZXNjcmlwdGlvbiI6IlZhbHVlIGlzIHRoZSB0YWludCB2YWx1ZSB0aGUgdG9sZXJhdGlvbiBtYXRjaGVzIHRvLlxuSWYgdGhlIG9wZXJhdG9yIGlzIEV4aXN0cywgdGhlIHZhbHVlIHNob3VsZCBiZSBlbXB0eSwgb3RoZXJ3aXNlIGp1c3QgYSByZWd1bGFyIHN0cmluZy4iLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9LCJzZXJ2aWNlVHlwZSI6eyJkZXNjcmlwdGlvbiI6Ik9wdGlvbmFsIHNlcnZpY2UgdHlwZSBmb3IgS3ViZXJuZXRlcyBzb2x2ZXIgc2VydmljZS4gU3VwcG9ydGVkIHZhbHVlc1xuYXJlIE5vZGVQb3J0IG9yIENsdXN0ZXJJUC4gSWYgdW5zZXQsIGRlZmF1bHRzIHRvIE5vZGVQb3J0LiIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifSwic2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJTZWxlY3RvciBzZWxlY3RzIGEgc2V0IG9mIEROU05hbWVzIG9uIHRoZSBDZXJ0aWZpY2F0ZSByZXNvdXJjZSB0aGF0XG5zaG91bGQgYmUgc29sdmVkIHVzaW5nIHRoaXMgY2hhbGxlbmdlIHNvbHZlci5cbklmIG5vdCBzcGVjaWZpZWQsIHRoZSBzb2x2ZXIgd2lsbCBiZSB0cmVhdGVkIGFzIHRoZSAnZGVmYXVsdCcgc29sdmVyXG53aXRoIHRoZSBsb3dlc3QgcHJpb3JpdHksIGkuZS4gaWYgYW55IG90aGVyIHNvbHZlciBoYXMgYSBtb3JlIHNwZWNpZmljXG5tYXRjaCwgaXQgd2lsbCBiZSB1c2VkIGluc3RlYWQuIiwicHJvcGVydGllcyI6eyJkbnNOYW1lcyI6eyJkZXNjcmlwdGlvbiI6Ikxpc3Qgb2YgRE5TTmFtZXMgdGhhdCB0aGlzIHNvbHZlciB3aWxsIGJlIHVzZWQgdG8gc29sdmUuXG5JZiBzcGVjaWZpZWQgYW5kIGEgbWF0Y2ggaXMgZm91bmQsIGEgZG5zTmFtZXMgc2VsZWN0b3Igd2lsbCB0YWtlXG5wcmVjZWRlbmNlIG92ZXIgYSBkbnNab25lcyBzZWxlY3Rvci5cbklmIG11bHRpcGxlIHNvbHZlcnMgbWF0Y2ggd2l0aCB0aGUgc2FtZSBkbnNOYW1lcyB2YWx1ZSwgdGhlIHNvbHZlclxud2l0aCB0aGUgbW9zdCBtYXRjaGluZyBsYWJlbHMgaW4gbWF0Y2hMYWJlbHMgd2lsbCBiZSBzZWxlY3RlZC5cbklmIG5laXRoZXIgaGFzIG1vcmUgbWF0Y2hlcywgdGhlIHNvbHZlciBkZWZpbmVkIGVhcmxpZXIgaW4gdGhlIGxpc3RcbndpbGwgYmUgc2VsZWN0ZWQuIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifSwiZG5zWm9uZXMiOnsiZGVzY3JpcHRpb24iOiJMaXN0IG9mIEROU1pvbmVzIHRoYXQgdGhpcyBzb2x2ZXIgd2lsbCBiZSB1c2VkIHRvIHNvbHZlLlxuVGhlIG1vc3Qgc3BlY2lmaWMgRE5TIHpvbmUgbWF0Y2ggc3BlY2lmaWVkIGhlcmUgd2lsbCB0YWtlIHByZWNlZGVuY2Vcbm92ZXIgb3RoZXIgRE5TIHpvbmUgbWF0Y2hlcywgc28gYSBzb2x2ZXIgc3BlY2lmeWluZyBzeXMuZXhhbXBsZS5jb21cbndpbGwgYmUgc2VsZWN0ZWQgb3ZlciBvbmUgc3BlY2lmeWluZyBleGFtcGxlLmNvbSBmb3IgdGhlIGRvbWFpblxud3d3LnN5cy5leGFtcGxlLmNvbS5cbklmIG11bHRpcGxlIHNvbHZlcnMgbWF0Y2ggd2l0aCB0aGUgc2FtZSBkbnNab25lcyB2YWx1ZSwgdGhlIHNvbHZlclxud2l0aCB0aGUgbW9zdCBtYXRjaGluZyBsYWJlbHMgaW4gbWF0Y2hMYWJlbHMgd2lsbCBiZSBzZWxlY3RlZC5cbklmIG5laXRoZXIgaGFzIG1vcmUgbWF0Y2hlcywgdGhlIHNvbHZlciBkZWZpbmVkIGVhcmxpZXIgaW4gdGhlIGxpc3RcbndpbGwgYmUgc2VsZWN0ZWQuIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifSwibWF0Y2hMYWJlbHMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6IkEgbGFiZWwgc2VsZWN0b3IgdGhhdCBpcyB1c2VkIHRvIHJlZmluZSB0aGUgc2V0IG9mIGNlcnRpZmljYXRlJ3MgdGhhdFxudGhpcyBjaGFsbGVuZ2Ugc29sdmVyIHdpbGwgYXBwbHkgdG8uIiwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifX0sInJlcXVpcmVkIjpbInByaXZhdGVLZXlTZWNyZXRSZWYiLCJzZXJ2ZXIiXSwidHlwZSI6Im9iamVjdCJ9LCJjYSI6eyJkZXNjcmlwdGlvbiI6IkNBIGNvbmZpZ3VyZXMgdGhpcyBpc3N1ZXIgdG8gc2lnbiBjZXJ0aWZpY2F0ZXMgdXNpbmcgYSBzaWduaW5nIENBIGtleXBhaXJcbnN0b3JlZCBpbiBhIFNlY3JldCByZXNvdXJjZS5cblRoaXMgaXMgdXNlZCB0byBidWlsZCBpbnRlcm5hbCBQS0lzIHRoYXQgYXJlIG1hbmFnZWQgYnkgY2VydC1tYW5hZ2VyLiIsInByb3BlcnRpZXMiOnsiY3JsRGlzdHJpYnV0aW9uUG9pbnRzIjp7ImRlc2NyaXB0aW9uIjoiVGhlIENSTCBkaXN0cmlidXRpb24gcG9pbnRzIGlzIGFuIFguNTA5IHYzIGNlcnRpZmljYXRlIGV4dGVuc2lvbiB3aGljaCBpZGVudGlmaWVzXG50aGUgbG9jYXRpb24gb2YgdGhlIENSTCBmcm9tIHdoaWNoIHRoZSByZXZvY2F0aW9uIG9mIHRoaXMgY2VydGlmaWNhdGUgY2FuIGJlIGNoZWNrZWQuXG5JZiBub3Qgc2V0LCBjZXJ0aWZpY2F0ZXMgd2lsbCBiZSBpc3N1ZWQgd2l0aG91dCBkaXN0cmlidXRpb24gcG9pbnRzIHNldC4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJpc3N1aW5nQ2VydGlmaWNhdGVVUkxzIjp7ImRlc2NyaXB0aW9uIjoiSXNzdWluZ0NlcnRpZmljYXRlVVJMcyBpcyBhIGxpc3Qgb2YgVVJMcyB3aGljaCB0aGlzIGlzc3VlciBzaG91bGQgZW1iZWQgaW50byBjZXJ0aWZpY2F0ZXNcbml0IGNyZWF0ZXMuIFNlZSBodHRwczovL3d3dy5yZmMtZWRpdG9yLm9yZy9yZmMvcmZjNTI4MCNzZWN0aW9uLTQuMi4yLjEgZm9yIG1vcmUgZGV0YWlscy5cbkFzIGFuIGV4YW1wbGUsIHN1Y2ggYSBVUkwgbWlnaHQgYmUgXCJodHRwOi8vY2EuZG9tYWluLmNvbS9jYS5jcnRcIi4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJvY3NwU2VydmVycyI6eyJkZXNjcmlwdGlvbiI6IlRoZSBPQ1NQIHNlcnZlciBsaXN0IGlzIGFuIFguNTA5IHYzIGV4dGVuc2lvbiB0aGF0IGRlZmluZXMgYSBsaXN0IG9mXG5VUkxzIG9mIE9DU1AgcmVzcG9uZGVycy4gVGhlIE9DU1AgcmVzcG9uZGVycyBjYW4gYmUgcXVlcmllZCBmb3IgdGhlXG5yZXZvY2F0aW9uIHN0YXR1cyBvZiBhbiBpc3N1ZWQgY2VydGlmaWNhdGUuIElmIG5vdCBzZXQsIHRoZVxuY2VydGlmaWNhdGUgd2lsbCBiZSBpc3N1ZWQgd2l0aCBubyBPQ1NQIHNlcnZlcnMgc2V0LiBGb3IgZXhhbXBsZSwgYW5cbk9DU1Agc2VydmVyIFVSTCBjb3VsZCBiZSBcImh0dHA6Ly9vY3NwLmludC14My5sZXRzZW5jcnlwdC5vcmdcIi4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJzZWNyZXROYW1lIjp7ImRlc2NyaXB0aW9uIjoiU2VjcmV0TmFtZSBpcyB0aGUgbmFtZSBvZiB0aGUgc2VjcmV0IHVzZWQgdG8gc2lnbiBDZXJ0aWZpY2F0ZXMgaXNzdWVkXG5ieSB0aGlzIElzc3Vlci4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJzZWNyZXROYW1lIl0sInR5cGUiOiJvYmplY3QifSwic2VsZlNpZ25lZCI6eyJkZXNjcmlwdGlvbiI6IlNlbGZTaWduZWQgY29uZmlndXJlcyB0aGlzIGlzc3VlciB0byAnc2VsZiBzaWduJyBjZXJ0aWZpY2F0ZXMgdXNpbmcgdGhlXG5wcml2YXRlIGtleSB1c2VkIHRvIGNyZWF0ZSB0aGUgQ2VydGlmaWNhdGVSZXF1ZXN0IG9iamVjdC4iLCJwcm9wZXJ0aWVzIjp7ImNybERpc3RyaWJ1dGlvblBvaW50cyI6eyJkZXNjcmlwdGlvbiI6IlRoZSBDUkwgZGlzdHJpYnV0aW9uIHBvaW50cyBpcyBhbiBYLjUwOSB2MyBjZXJ0aWZpY2F0ZSBleHRlbnNpb24gd2hpY2ggaWRlbnRpZmllc1xudGhlIGxvY2F0aW9uIG9mIHRoZSBDUkwgZnJvbSB3aGljaCB0aGUgcmV2b2NhdGlvbiBvZiB0aGlzIGNlcnRpZmljYXRlIGNhbiBiZSBjaGVja2VkLlxuSWYgbm90IHNldCBjZXJ0aWZpY2F0ZSB3aWxsIGJlIGlzc3VlZCB3aXRob3V0IENEUC4gVmFsdWVzIGFyZSBzdHJpbmdzLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In19LCJ0eXBlIjoib2JqZWN0In0sInZhdWx0Ijp7ImRlc2NyaXB0aW9uIjoiVmF1bHQgY29uZmlndXJlcyB0aGlzIGlzc3VlciB0byBzaWduIGNlcnRpZmljYXRlcyB1c2luZyBhIEhhc2hpQ29ycCBWYXVsdFxuUEtJIGJhY2tlbmQuIiwicHJvcGVydGllcyI6eyJhdXRoIjp7ImRlc2NyaXB0aW9uIjoiQXV0aCBjb25maWd1cmVzIGhvdyBjZXJ0LW1hbmFnZXIgYXV0aGVudGljYXRlcyB3aXRoIHRoZSBWYXVsdCBzZXJ2ZXIuIiwicHJvcGVydGllcyI6eyJhcHBSb2xlIjp7ImRlc2NyaXB0aW9uIjoiQXBwUm9sZSBhdXRoZW50aWNhdGVzIHdpdGggVmF1bHQgdXNpbmcgdGhlIEFwcCBSb2xlIGF1dGggbWVjaGFuaXNtLFxud2l0aCB0aGUgcm9sZSBhbmQgc2VjcmV0IHN0b3JlZCBpbiBhIEt1YmVybmV0ZXMgU2VjcmV0IHJlc291cmNlLiIsInByb3BlcnRpZXMiOnsicGF0aCI6eyJkZXNjcmlwdGlvbiI6IlBhdGggd2hlcmUgdGhlIEFwcCBSb2xlIGF1dGhlbnRpY2F0aW9uIGJhY2tlbmQgaXMgbW91bnRlZCBpbiBWYXVsdCwgZS5nOlxuXCJhcHByb2xlXCIiLCJ0eXBlIjoic3RyaW5nIn0sInJvbGVJZCI6eyJkZXNjcmlwdGlvbiI6IlJvbGVJRCBjb25maWd1cmVkIGluIHRoZSBBcHAgUm9sZSBhdXRoZW50aWNhdGlvbiBiYWNrZW5kIHdoZW4gc2V0dGluZ1xudXAgdGhlIGF1dGhlbnRpY2F0aW9uIGJhY2tlbmQgaW4gVmF1bHQuIiwidHlwZSI6InN0cmluZyJ9LCJzZWNyZXRSZWYiOnsiZGVzY3JpcHRpb24iOiJSZWZlcmVuY2UgdG8gYSBrZXkgaW4gYSBTZWNyZXQgdGhhdCBjb250YWlucyB0aGUgQXBwIFJvbGUgc2VjcmV0IHVzZWRcbnRvIGF1dGhlbnRpY2F0ZSB3aXRoIFZhdWx0LlxuVGhlIGBrZXlgIGZpZWxkIG11c3QgYmUgc3BlY2lmaWVkIGFuZCBkZW5vdGVzIHdoaWNoIGVudHJ5IHdpdGhpbiB0aGUgU2VjcmV0XG5yZXNvdXJjZSBpcyB1c2VkIGFzIHRoZSBhcHAgcm9sZSBzZWNyZXQuIiwicHJvcGVydGllcyI6eyJrZXkiOnsiZGVzY3JpcHRpb24iOiJUaGUga2V5IG9mIHRoZSBlbnRyeSBpbiB0aGUgU2VjcmV0IHJlc291cmNlJ3MgYGRhdGFgIGZpZWxkIHRvIGJlIHVzZWQuXG5Tb21lIGluc3RhbmNlcyBvZiB0aGlzIGZpZWxkIG1heSBiZSBkZWZhdWx0ZWQsIGluIG90aGVycyBpdCBtYXkgYmVcbnJlcXVpcmVkLiIsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIHJlc291cmNlIGJlaW5nIHJlZmVycmVkIHRvLlxuTW9yZSBpbmZvOiBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9vdmVydmlldy93b3JraW5nLXdpdGgtb2JqZWN0cy9uYW1lcy8jbmFtZXMiLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJuYW1lIl0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInBhdGgiLCJyb2xlSWQiLCJzZWNyZXRSZWYiXSwidHlwZSI6Im9iamVjdCJ9LCJjbGllbnRDZXJ0aWZpY2F0ZSI6eyJkZXNjcmlwdGlvbiI6IkNsaWVudENlcnRpZmljYXRlIGF1dGhlbnRpY2F0ZXMgd2l0aCBWYXVsdCBieSBwcmVzZW50aW5nIGEgY2xpZW50XG5jZXJ0aWZpY2F0ZSBkdXJpbmcgdGhlIHJlcXVlc3QncyBUTFMgaGFuZHNoYWtlLlxuV29ya3Mgb25seSB3aGVuIHVzaW5nIEhUVFBTIHByb3RvY29sLiIsInByb3BlcnRpZXMiOnsibW91bnRQYXRoIjp7ImRlc2NyaXB0aW9uIjoiVGhlIFZhdWx0IG1vdW50UGF0aCBoZXJlIGlzIHRoZSBtb3VudCBwYXRoIHRvIHVzZSB3aGVuIGF1dGhlbnRpY2F0aW5nIHdpdGhcblZhdWx0LiBGb3IgZXhhbXBsZSwgc2V0dGluZyBhIHZhbHVlIHRvIGAvdjEvYXV0aC9mb29gLCB3aWxsIHVzZSB0aGUgcGF0aFxuYC92MS9hdXRoL2Zvby9sb2dpbmAgdG8gYXV0aGVudGljYXRlIHdpdGggVmF1bHQuIElmIHVuc3BlY2lmaWVkLCB0aGVcbmRlZmF1bHQgdmFsdWUgXCIvdjEvYXV0aC9jZXJ0XCIgd2lsbCBiZSB1c2VkLiIsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIGNlcnRpZmljYXRlIHJvbGUgdG8gYXV0aGVudGljYXRlIGFnYWluc3QuXG5JZiBub3Qgc2V0LCBtYXRjaGluZyBhbnkgY2VydGlmaWNhdGUgcm9sZSwgaWYgYXZhaWxhYmxlLiIsInR5cGUiOiJzdHJpbmcifSwic2VjcmV0TmFtZSI6eyJkZXNjcmlwdGlvbiI6IlJlZmVyZW5jZSB0byBLdWJlcm5ldGVzIFNlY3JldCBvZiB0eXBlIFwia3ViZXJuZXRlcy5pby90bHNcIiAoaGVuY2UgY29udGFpbmluZ1xudGxzLmNydCBhbmQgdGxzLmtleSkgdXNlZCB0byBhdXRoZW50aWNhdGUgdG8gVmF1bHQgdXNpbmcgVExTIGNsaWVudFxuYXV0aGVudGljYXRpb24uIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJrdWJlcm5ldGVzIjp7ImRlc2NyaXB0aW9uIjoiS3ViZXJuZXRlcyBhdXRoZW50aWNhdGVzIHdpdGggVmF1bHQgYnkgcGFzc2luZyB0aGUgU2VydmljZUFjY291bnRcbnRva2VuIHN0b3JlZCBpbiB0aGUgbmFtZWQgU2VjcmV0IHJlc291cmNlIHRvIHRoZSBWYXVsdCBzZXJ2ZXIuIiwicHJvcGVydGllcyI6eyJtb3VudFBhdGgiOnsiZGVzY3JpcHRpb24iOiJUaGUgVmF1bHQgbW91bnRQYXRoIGhlcmUgaXMgdGhlIG1vdW50IHBhdGggdG8gdXNlIHdoZW4gYXV0aGVudGljYXRpbmcgd2l0aFxuVmF1bHQuIEZvciBleGFtcGxlLCBzZXR0aW5nIGEgdmFsdWUgdG8gYC92MS9hdXRoL2Zvb2AsIHdpbGwgdXNlIHRoZSBwYXRoXG5gL3YxL2F1dGgvZm9vL2xvZ2luYCB0byBhdXRoZW50aWNhdGUgd2l0aCBWYXVsdC4gSWYgdW5zcGVjaWZpZWQsIHRoZVxuZGVmYXVsdCB2YWx1ZSBcIi92MS9hdXRoL2t1YmVybmV0ZXNcIiB3aWxsIGJlIHVzZWQuIiwidHlwZSI6InN0cmluZyJ9LCJyb2xlIjp7ImRlc2NyaXB0aW9uIjoiQSByZXF1aXJlZCBmaWVsZCBjb250YWluaW5nIHRoZSBWYXVsdCBSb2xlIHRvIGFzc3VtZS4gQSBSb2xlIGJpbmRzIGFcbkt1YmVybmV0ZXMgU2VydmljZUFjY291bnQgd2l0aCBhIHNldCBvZiBWYXVsdCBwb2xpY2llcy4iLCJ0eXBlIjoic3RyaW5nIn0sInNlY3JldFJlZiI6eyJkZXNjcmlwdGlvbiI6IlRoZSByZXF1aXJlZCBTZWNyZXQgZmllbGQgY29udGFpbmluZyBhIEt1YmVybmV0ZXMgU2VydmljZUFjY291bnQgSldUIHVzZWRcbmZvciBhdXRoZW50aWNhdGluZyB3aXRoIFZhdWx0LiBVc2Ugb2YgJ2FtYmllbnQgY3JlZGVudGlhbHMnIGlzIG5vdFxuc3VwcG9ydGVkLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoiVGhlIGtleSBvZiB0aGUgZW50cnkgaW4gdGhlIFNlY3JldCByZXNvdXJjZSdzIGBkYXRhYCBmaWVsZCB0byBiZSB1c2VkLlxuU29tZSBpbnN0YW5jZXMgb2YgdGhpcyBmaWVsZCBtYXkgYmUgZGVmYXVsdGVkLCBpbiBvdGhlcnMgaXQgbWF5IGJlXG5yZXF1aXJlZC4iLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSByZXNvdXJjZSBiZWluZyByZWZlcnJlZCB0by5cbk1vcmUgaW5mbzogaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvb3ZlcnZpZXcvd29ya2luZy13aXRoLW9iamVjdHMvbmFtZXMvI25hbWVzIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInNlcnZpY2VBY2NvdW50UmVmIjp7ImRlc2NyaXB0aW9uIjoiQSByZWZlcmVuY2UgdG8gYSBzZXJ2aWNlIGFjY291bnQgdGhhdCB3aWxsIGJlIHVzZWQgdG8gcmVxdWVzdCBhIGJvdW5kXG50b2tlbiAoYWxzbyBrbm93biBhcyBcInByb2plY3RlZCB0b2tlblwiKS4gQ29tcGFyZWQgdG8gdXNpbmcgXCJzZWNyZXRSZWZcIixcbnVzaW5nIHRoaXMgZmllbGQgbWVhbnMgdGhhdCB5b3UgZG9uJ3QgcmVseSBvbiBzdGF0aWNhbGx5IGJvdW5kIHRva2Vucy4gVG9cbnVzZSB0aGlzIGZpZWxkLCB5b3UgbXVzdCBjb25maWd1cmUgYW4gUkJBQyBydWxlIHRvIGxldCBjZXJ0LW1hbmFnZXJcbnJlcXVlc3QgYSB0b2tlbi4iLCJwcm9wZXJ0aWVzIjp7ImF1ZGllbmNlcyI6eyJkZXNjcmlwdGlvbiI6IlRva2VuQXVkaWVuY2VzIGlzIGFuIG9wdGlvbmFsIGxpc3Qgb2YgZXh0cmEgYXVkaWVuY2VzIHRvIGluY2x1ZGUgaW4gdGhlIHRva2VuIHBhc3NlZCB0byBWYXVsdC4gVGhlIGRlZmF1bHQgdG9rZW5cbmNvbnNpc3Rpbmcgb2YgdGhlIGlzc3VlcidzIG5hbWVzcGFjZSBhbmQgbmFtZSBpcyBhbHdheXMgaW5jbHVkZWQuIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIFNlcnZpY2VBY2NvdW50IHVzZWQgdG8gcmVxdWVzdCBhIHRva2VuLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbIm5hbWUiXSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsicm9sZSJdLCJ0eXBlIjoib2JqZWN0In0sInRva2VuU2VjcmV0UmVmIjp7ImRlc2NyaXB0aW9uIjoiVG9rZW5TZWNyZXRSZWYgYXV0aGVudGljYXRlcyB3aXRoIFZhdWx0IGJ5IHByZXNlbnRpbmcgYSB0b2tlbi4iLCJwcm9wZXJ0aWVzIjp7ImtleSI6eyJkZXNjcmlwdGlvbiI6IlRoZSBrZXkgb2YgdGhlIGVudHJ5IGluIHRoZSBTZWNyZXQgcmVzb3VyY2UncyBgZGF0YWAgZmllbGQgdG8gYmUgdXNlZC5cblNvbWUgaW5zdGFuY2VzIG9mIHRoaXMgZmllbGQgbWF5IGJlIGRlZmF1bHRlZCwgaW4gb3RoZXJzIGl0IG1heSBiZVxucmVxdWlyZWQuIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgcmVzb3VyY2UgYmVpbmcgcmVmZXJyZWQgdG8uXG5Nb3JlIGluZm86IGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL2NvbmNlcHRzL292ZXJ2aWV3L3dvcmtpbmctd2l0aC1vYmplY3RzL25hbWVzLyNuYW1lcyIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbIm5hbWUiXSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9LCJjYUJ1bmRsZSI6eyJkZXNjcmlwdGlvbiI6IkJhc2U2NC1lbmNvZGVkIGJ1bmRsZSBvZiBQRU0gQ0FzIHdoaWNoIHdpbGwgYmUgdXNlZCB0byB2YWxpZGF0ZSB0aGUgY2VydGlmaWNhdGVcbmNoYWluIHByZXNlbnRlZCBieSBWYXVsdC4gT25seSB1c2VkIGlmIHVzaW5nIEhUVFBTIHRvIGNvbm5lY3QgdG8gVmF1bHQgYW5kXG5pZ25vcmVkIGZvciBIVFRQIGNvbm5lY3Rpb25zLlxuTXV0dWFsbHkgZXhjbHVzaXZlIHdpdGggQ0FCdW5kbGVTZWNyZXRSZWYuXG5JZiBuZWl0aGVyIENBQnVuZGxlIG5vciBDQUJ1bmRsZVNlY3JldFJlZiBhcmUgZGVmaW5lZCwgdGhlIGNlcnRpZmljYXRlIGJ1bmRsZSBpblxudGhlIGNlcnQtbWFuYWdlciBjb250cm9sbGVyIGNvbnRhaW5lciBpcyB1c2VkIHRvIHZhbGlkYXRlIHRoZSBUTFMgY29ubmVjdGlvbi4iLCJmb3JtYXQiOiJieXRlIiwidHlwZSI6InN0cmluZyJ9LCJjYUJ1bmRsZVNlY3JldFJlZiI6eyJkZXNjcmlwdGlvbiI6IlJlZmVyZW5jZSB0byBhIFNlY3JldCBjb250YWluaW5nIGEgYnVuZGxlIG9mIFBFTS1lbmNvZGVkIENBcyB0byB1c2Ugd2hlblxudmVyaWZ5aW5nIHRoZSBjZXJ0aWZpY2F0ZSBjaGFpbiBwcmVzZW50ZWQgYnkgVmF1bHQgd2hlbiB1c2luZyBIVFRQUy5cbk11dHVhbGx5IGV4Y2x1c2l2ZSB3aXRoIENBQnVuZGxlLlxuSWYgbmVpdGhlciBDQUJ1bmRsZSBub3IgQ0FCdW5kbGVTZWNyZXRSZWYgYXJlIGRlZmluZWQsIHRoZSBjZXJ0aWZpY2F0ZSBidW5kbGUgaW5cbnRoZSBjZXJ0LW1hbmFnZXIgY29udHJvbGxlciBjb250YWluZXIgaXMgdXNlZCB0byB2YWxpZGF0ZSB0aGUgVExTIGNvbm5lY3Rpb24uXG5JZiBubyBrZXkgZm9yIHRoZSBTZWNyZXQgaXMgc3BlY2lmaWVkLCBjZXJ0LW1hbmFnZXIgd2lsbCBkZWZhdWx0IHRvICdjYS5jcnQnLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoiVGhlIGtleSBvZiB0aGUgZW50cnkgaW4gdGhlIFNlY3JldCByZXNvdXJjZSdzIGBkYXRhYCBmaWVsZCB0byBiZSB1c2VkLlxuU29tZSBpbnN0YW5jZXMgb2YgdGhpcyBmaWVsZCBtYXkgYmUgZGVmYXVsdGVkLCBpbiBvdGhlcnMgaXQgbWF5IGJlXG5yZXF1aXJlZC4iLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSByZXNvdXJjZSBiZWluZyByZWZlcnJlZCB0by5cbk1vcmUgaW5mbzogaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvb3ZlcnZpZXcvd29ya2luZy13aXRoLW9iamVjdHMvbmFtZXMvI25hbWVzIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sImNsaWVudENlcnRTZWNyZXRSZWYiOnsiZGVzY3JpcHRpb24iOiJSZWZlcmVuY2UgdG8gYSBTZWNyZXQgY29udGFpbmluZyBhIFBFTS1lbmNvZGVkIENsaWVudCBDZXJ0aWZpY2F0ZSB0byB1c2Ugd2hlbiB0aGVcblZhdWx0IHNlcnZlciByZXF1aXJlcyBtVExTLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoiVGhlIGtleSBvZiB0aGUgZW50cnkgaW4gdGhlIFNlY3JldCByZXNvdXJjZSdzIGBkYXRhYCBmaWVsZCB0byBiZSB1c2VkLlxuU29tZSBpbnN0YW5jZXMgb2YgdGhpcyBmaWVsZCBtYXkgYmUgZGVmYXVsdGVkLCBpbiBvdGhlcnMgaXQgbWF5IGJlXG5yZXF1aXJlZC4iLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSByZXNvdXJjZSBiZWluZyByZWZlcnJlZCB0by5cbk1vcmUgaW5mbzogaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvb3ZlcnZpZXcvd29ya2luZy13aXRoLW9iamVjdHMvbmFtZXMvI25hbWVzIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sImNsaWVudEtleVNlY3JldFJlZiI6eyJkZXNjcmlwdGlvbiI6IlJlZmVyZW5jZSB0byBhIFNlY3JldCBjb250YWluaW5nIGEgUEVNLWVuY29kZWQgQ2xpZW50IFByaXZhdGUgS2V5IHRvIHVzZSB3aGVuIHRoZVxuVmF1bHQgc2VydmVyIHJlcXVpcmVzIG1UTFMuIiwicHJvcGVydGllcyI6eyJrZXkiOnsiZGVzY3JpcHRpb24iOiJUaGUga2V5IG9mIHRoZSBlbnRyeSBpbiB0aGUgU2VjcmV0IHJlc291cmNlJ3MgYGRhdGFgIGZpZWxkIHRvIGJlIHVzZWQuXG5Tb21lIGluc3RhbmNlcyBvZiB0aGlzIGZpZWxkIG1heSBiZSBkZWZhdWx0ZWQsIGluIG90aGVycyBpdCBtYXkgYmVcbnJlcXVpcmVkLiIsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIHJlc291cmNlIGJlaW5nIHJlZmVycmVkIHRvLlxuTW9yZSBpbmZvOiBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9vdmVydmlldy93b3JraW5nLXdpdGgtb2JqZWN0cy9uYW1lcy8jbmFtZXMiLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJuYW1lIl0sInR5cGUiOiJvYmplY3QifSwibmFtZXNwYWNlIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgdmF1bHQgbmFtZXNwYWNlLiBOYW1lc3BhY2VzIGlzIGEgc2V0IG9mIGZlYXR1cmVzIHdpdGhpbiBWYXVsdCBFbnRlcnByaXNlIHRoYXQgYWxsb3dzIFZhdWx0IGVudmlyb25tZW50cyB0byBzdXBwb3J0IFNlY3VyZSBNdWx0aS10ZW5hbmN5LiBlLmc6IFwibnMxXCJcbk1vcmUgYWJvdXQgbmFtZXNwYWNlcyBjYW4gYmUgZm91bmQgaGVyZSBodHRwczovL3d3dy52YXVsdHByb2plY3QuaW8vZG9jcy9lbnRlcnByaXNlL25hbWVzcGFjZXMiLCJ0eXBlIjoic3RyaW5nIn0sInBhdGgiOnsiZGVzY3JpcHRpb24iOiJQYXRoIGlzIHRoZSBtb3VudCBwYXRoIG9mIHRoZSBWYXVsdCBQS0kgYmFja2VuZCdzIGBzaWduYCBlbmRwb2ludCwgZS5nOlxuXCJteV9wa2lfbW91bnQvc2lnbi9teS1yb2xlLW5hbWVcIi4iLCJ0eXBlIjoic3RyaW5nIn0sInNlcnZlciI6eyJkZXNjcmlwdGlvbiI6IlNlcnZlciBpcyB0aGUgY29ubmVjdGlvbiBhZGRyZXNzIGZvciB0aGUgVmF1bHQgc2VydmVyLCBlLmc6IFwiaHR0cHM6Ly92YXVsdC5leGFtcGxlLmNvbTo4MjAwXCIuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiYXV0aCIsInBhdGgiLCJzZXJ2ZXIiXSwidHlwZSI6Im9iamVjdCJ9LCJ2ZW5hZmkiOnsiZGVzY3JpcHRpb24iOiJWZW5hZmkgY29uZmlndXJlcyB0aGlzIGlzc3VlciB0byBzaWduIGNlcnRpZmljYXRlcyB1c2luZyBhIFZlbmFmaSBUUFBcbm9yIFZlbmFmaSBDbG91ZCBwb2xpY3kgem9uZS4iLCJwcm9wZXJ0aWVzIjp7ImNsb3VkIjp7ImRlc2NyaXB0aW9uIjoiQ2xvdWQgc3BlY2lmaWVzIHRoZSBWZW5hZmkgY2xvdWQgY29uZmlndXJhdGlvbiBzZXR0aW5ncy5cbk9ubHkgb25lIG9mIFRQUCBvciBDbG91ZCBtYXkgYmUgc3BlY2lmaWVkLiIsInByb3BlcnRpZXMiOnsiYXBpVG9rZW5TZWNyZXRSZWYiOnsiZGVzY3JpcHRpb24iOiJBUElUb2tlblNlY3JldFJlZiBpcyBhIHNlY3JldCBrZXkgc2VsZWN0b3IgZm9yIHRoZSBWZW5hZmkgQ2xvdWQgQVBJIHRva2VuLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoiVGhlIGtleSBvZiB0aGUgZW50cnkgaW4gdGhlIFNlY3JldCByZXNvdXJjZSdzIGBkYXRhYCBmaWVsZCB0byBiZSB1c2VkLlxuU29tZSBpbnN0YW5jZXMgb2YgdGhpcyBmaWVsZCBtYXkgYmUgZGVmYXVsdGVkLCBpbiBvdGhlcnMgaXQgbWF5IGJlXG5yZXF1aXJlZC4iLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSByZXNvdXJjZSBiZWluZyByZWZlcnJlZCB0by5cbk1vcmUgaW5mbzogaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvb3ZlcnZpZXcvd29ya2luZy13aXRoLW9iamVjdHMvbmFtZXMvI25hbWVzIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInVybCI6eyJkZXNjcmlwdGlvbiI6IlVSTCBpcyB0aGUgYmFzZSBVUkwgZm9yIFZlbmFmaSBDbG91ZC5cbkRlZmF1bHRzIHRvIFwiaHR0cHM6Ly9hcGkudmVuYWZpLmNsb3VkL3YxXCIuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiYXBpVG9rZW5TZWNyZXRSZWYiXSwidHlwZSI6Im9iamVjdCJ9LCJ0cHAiOnsiZGVzY3JpcHRpb24iOiJUUFAgc3BlY2lmaWVzIFRydXN0IFByb3RlY3Rpb24gUGxhdGZvcm0gY29uZmlndXJhdGlvbiBzZXR0aW5ncy5cbk9ubHkgb25lIG9mIFRQUCBvciBDbG91ZCBtYXkgYmUgc3BlY2lmaWVkLiIsInByb3BlcnRpZXMiOnsiY2FCdW5kbGUiOnsiZGVzY3JpcHRpb24iOiJCYXNlNjQtZW5jb2RlZCBidW5kbGUgb2YgUEVNIENBcyB3aGljaCB3aWxsIGJlIHVzZWQgdG8gdmFsaWRhdGUgdGhlIGNlcnRpZmljYXRlXG5jaGFpbiBwcmVzZW50ZWQgYnkgdGhlIFRQUCBzZXJ2ZXIuIE9ubHkgdXNlZCBpZiB1c2luZyBIVFRQUzsgaWdub3JlZCBmb3IgSFRUUC5cbklmIHVuZGVmaW5lZCwgdGhlIGNlcnRpZmljYXRlIGJ1bmRsZSBpbiB0aGUgY2VydC1tYW5hZ2VyIGNvbnRyb2xsZXIgY29udGFpbmVyXG5pcyB1c2VkIHRvIHZhbGlkYXRlIHRoZSBjaGFpbi4iLCJmb3JtYXQiOiJieXRlIiwidHlwZSI6InN0cmluZyJ9LCJjYUJ1bmRsZVNlY3JldFJlZiI6eyJkZXNjcmlwdGlvbiI6IlJlZmVyZW5jZSB0byBhIFNlY3JldCBjb250YWluaW5nIGEgYmFzZTY0LWVuY29kZWQgYnVuZGxlIG9mIFBFTSBDQXNcbndoaWNoIHdpbGwgYmUgdXNlZCB0byB2YWxpZGF0ZSB0aGUgY2VydGlmaWNhdGUgY2hhaW4gcHJlc2VudGVkIGJ5IHRoZSBUUFAgc2VydmVyLlxuT25seSB1c2VkIGlmIHVzaW5nIEhUVFBTOyBpZ25vcmVkIGZvciBIVFRQLiBNdXR1YWxseSBleGNsdXNpdmUgd2l0aCBDQUJ1bmRsZS5cbklmIG5laXRoZXIgQ0FCdW5kbGUgbm9yIENBQnVuZGxlU2VjcmV0UmVmIGlzIGRlZmluZWQsIHRoZSBjZXJ0aWZpY2F0ZSBidW5kbGUgaW5cbnRoZSBjZXJ0LW1hbmFnZXIgY29udHJvbGxlciBjb250YWluZXIgaXMgdXNlZCB0byB2YWxpZGF0ZSB0aGUgVExTIGNvbm5lY3Rpb24uIiwicHJvcGVydGllcyI6eyJrZXkiOnsiZGVzY3JpcHRpb24iOiJUaGUga2V5IG9mIHRoZSBlbnRyeSBpbiB0aGUgU2VjcmV0IHJlc291cmNlJ3MgYGRhdGFgIGZpZWxkIHRvIGJlIHVzZWQuXG5Tb21lIGluc3RhbmNlcyBvZiB0aGlzIGZpZWxkIG1heSBiZSBkZWZhdWx0ZWQsIGluIG90aGVycyBpdCBtYXkgYmVcbnJlcXVpcmVkLiIsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIHJlc291cmNlIGJlaW5nIHJlZmVycmVkIHRvLlxuTW9yZSBpbmZvOiBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9vdmVydmlldy93b3JraW5nLXdpdGgtb2JqZWN0cy9uYW1lcy8jbmFtZXMiLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJuYW1lIl0sInR5cGUiOiJvYmplY3QifSwiY3JlZGVudGlhbHNSZWYiOnsiZGVzY3JpcHRpb24iOiJDcmVkZW50aWFsc1JlZiBpcyBhIHJlZmVyZW5jZSB0byBhIFNlY3JldCBjb250YWluaW5nIHRoZSBWZW5hZmkgVFBQIEFQSSBjcmVkZW50aWFscy5cblRoZSBzZWNyZXQgbXVzdCBjb250YWluIHRoZSBrZXkgJ2FjY2Vzcy10b2tlbicgZm9yIHRoZSBBY2Nlc3MgVG9rZW4gQXV0aGVudGljYXRpb24sXG5vciB0d28ga2V5cywgJ3VzZXJuYW1lJyBhbmQgJ3Bhc3N3b3JkJyBmb3IgdGhlIEFQSSBLZXlzIEF1dGhlbnRpY2F0aW9uLiIsInByb3BlcnRpZXMiOnsibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIHJlc291cmNlIGJlaW5nIHJlZmVycmVkIHRvLlxuTW9yZSBpbmZvOiBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9vdmVydmlldy93b3JraW5nLXdpdGgtb2JqZWN0cy9uYW1lcy8jbmFtZXMiLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJuYW1lIl0sInR5cGUiOiJvYmplY3QifSwidXJsIjp7ImRlc2NyaXB0aW9uIjoiVVJMIGlzIHRoZSBiYXNlIFVSTCBmb3IgdGhlIHZlZHNkayBlbmRwb2ludCBvZiB0aGUgVmVuYWZpIFRQUCBpbnN0YW5jZSxcbmZvciBleGFtcGxlOiBcImh0dHBzOi8vdHBwLmV4YW1wbGUuY29tL3ZlZHNka1wiLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImNyZWRlbnRpYWxzUmVmIiwidXJsIl0sInR5cGUiOiJvYmplY3QifSwiem9uZSI6eyJkZXNjcmlwdGlvbiI6IlpvbmUgaXMgdGhlIFZlbmFmaSBQb2xpY3kgWm9uZSB0byB1c2UgZm9yIHRoaXMgaXNzdWVyLlxuQWxsIHJlcXVlc3RzIG1hZGUgdG8gdGhlIFZlbmFmaSBwbGF0Zm9ybSB3aWxsIGJlIHJlc3RyaWN0ZWQgYnkgdGhlIG5hbWVkXG56b25lIHBvbGljeS5cblRoaXMgZmllbGQgaXMgcmVxdWlyZWQuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiem9uZSJdLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IlN0YXR1cyBvZiB0aGUgSXNzdWVyLiBUaGlzIGlzIHNldCBhbmQgbWFuYWdlZCBhdXRvbWF0aWNhbGx5LiIsInByb3BlcnRpZXMiOnsiYWNtZSI6eyJkZXNjcmlwdGlvbiI6IkFDTUUgc3BlY2lmaWMgc3RhdHVzIG9wdGlvbnMuXG5UaGlzIGZpZWxkIHNob3VsZCBvbmx5IGJlIHNldCBpZiB0aGUgSXNzdWVyIGlzIGNvbmZpZ3VyZWQgdG8gdXNlIGFuIEFDTUVcbnNlcnZlciB0byBpc3N1ZSBjZXJ0aWZpY2F0ZXMuIiwicHJvcGVydGllcyI6eyJsYXN0UHJpdmF0ZUtleUhhc2giOnsiZGVzY3JpcHRpb24iOiJMYXN0UHJpdmF0ZUtleUhhc2ggaXMgYSBoYXNoIG9mIHRoZSBwcml2YXRlIGtleSBhc3NvY2lhdGVkIHdpdGggdGhlIGxhdGVzdFxucmVnaXN0ZXJlZCBBQ01FIGFjY291bnQsIGluIG9yZGVyIHRvIHRyYWNrIGNoYW5nZXMgbWFkZSB0byByZWdpc3RlcmVkIGFjY291bnRcbmFzc29jaWF0ZWQgd2l0aCB0aGUgSXNzdWVyIiwidHlwZSI6InN0cmluZyJ9LCJsYXN0UmVnaXN0ZXJlZEVtYWlsIjp7ImRlc2NyaXB0aW9uIjoiTGFzdFJlZ2lzdGVyZWRFbWFpbCBpcyB0aGUgZW1haWwgYXNzb2NpYXRlZCB3aXRoIHRoZSBsYXRlc3QgcmVnaXN0ZXJlZFxuQUNNRSBhY2NvdW50LCBpbiBvcmRlciB0byB0cmFjayBjaGFuZ2VzIG1hZGUgdG8gcmVnaXN0ZXJlZCBhY2NvdW50XG5hc3NvY2lhdGVkIHdpdGggdGhlICBJc3N1ZXIiLCJ0eXBlIjoic3RyaW5nIn0sInVyaSI6eyJkZXNjcmlwdGlvbiI6IlVSSSBpcyB0aGUgdW5pcXVlIGFjY291bnQgaWRlbnRpZmllciwgd2hpY2ggY2FuIGFsc28gYmUgdXNlZCB0byByZXRyaWV2ZVxuYWNjb3VudCBkZXRhaWxzIGZyb20gdGhlIENBIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJjb25kaXRpb25zIjp7ImRlc2NyaXB0aW9uIjoiTGlzdCBvZiBzdGF0dXMgY29uZGl0aW9ucyB0byBpbmRpY2F0ZSB0aGUgc3RhdHVzIG9mIGEgQ2VydGlmaWNhdGVSZXF1ZXN0LlxuS25vd24gY29uZGl0aW9uIHR5cGVzIGFyZSBgUmVhZHlgLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiSXNzdWVyQ29uZGl0aW9uIGNvbnRhaW5zIGNvbmRpdGlvbiBpbmZvcm1hdGlvbiBmb3IgYW4gSXNzdWVyLiIsInByb3BlcnRpZXMiOnsibGFzdFRyYW5zaXRpb25UaW1lIjp7ImRlc2NyaXB0aW9uIjoiTGFzdFRyYW5zaXRpb25UaW1lIGlzIHRoZSB0aW1lc3RhbXAgY29ycmVzcG9uZGluZyB0byB0aGUgbGFzdCBzdGF0dXNcbmNoYW5nZSBvZiB0aGlzIGNvbmRpdGlvbi4iLCJmb3JtYXQiOiJkYXRlLXRpbWUiLCJ0eXBlIjoic3RyaW5nIn0sIm1lc3NhZ2UiOnsiZGVzY3JpcHRpb24iOiJNZXNzYWdlIGlzIGEgaHVtYW4gcmVhZGFibGUgZGVzY3JpcHRpb24gb2YgdGhlIGRldGFpbHMgb2YgdGhlIGxhc3RcbnRyYW5zaXRpb24sIGNvbXBsZW1lbnRpbmcgcmVhc29uLiIsInR5cGUiOiJzdHJpbmcifSwib2JzZXJ2ZWRHZW5lcmF0aW9uIjp7ImRlc2NyaXB0aW9uIjoiSWYgc2V0LCB0aGlzIHJlcHJlc2VudHMgdGhlIC5tZXRhZGF0YS5nZW5lcmF0aW9uIHRoYXQgdGhlIGNvbmRpdGlvbiB3YXNcbnNldCBiYXNlZCB1cG9uLlxuRm9yIGluc3RhbmNlLCBpZiAubWV0YWRhdGEuZ2VuZXJhdGlvbiBpcyBjdXJyZW50bHkgMTIsIGJ1dCB0aGVcbi5zdGF0dXMuY29uZGl0aW9uW3hdLm9ic2VydmVkR2VuZXJhdGlvbiBpcyA5LCB0aGUgY29uZGl0aW9uIGlzIG91dCBvZiBkYXRlXG53aXRoIHJlc3BlY3QgdG8gdGhlIGN1cnJlbnQgc3RhdGUgb2YgdGhlIElzc3Vlci4iLCJmb3JtYXQiOiJpbnQ2NCIsInR5cGUiOiJpbnRlZ2VyIn0sInJlYXNvbiI6eyJkZXNjcmlwdGlvbiI6IlJlYXNvbiBpcyBhIGJyaWVmIG1hY2hpbmUgcmVhZGFibGUgZXhwbGFuYXRpb24gZm9yIHRoZSBjb25kaXRpb24ncyBsYXN0XG50cmFuc2l0aW9uLiIsInR5cGUiOiJzdHJpbmcifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiU3RhdHVzIG9mIHRoZSBjb25kaXRpb24sIG9uZSBvZiAoYFRydWVgLCBgRmFsc2VgLCBgVW5rbm93bmApLiIsImVudW0iOlsiVHJ1ZSIsIkZhbHNlIiwiVW5rbm93biJdLCJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOnsiZGVzY3JpcHRpb24iOiJUeXBlIG9mIHRoZSBjb25kaXRpb24sIGtub3duIHZhbHVlcyBhcmUgKGBSZWFkeWApLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbInN0YXR1cyIsInR5cGUiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC1tYXAta2V5cyI6WyJ0eXBlIl0sIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJtYXAifX0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInNwZWMiXSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6bnVsbCwic3RvcmVkVmVyc2lvbnMiOm51bGx9fQ==
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwLmt1YmVybmV0ZXMuaW8vY3JlYXRlZC1ieSI6ImNlcnQtbWFuYWdlci1vcGVyYXRvciIsImFwcC5rdWJlcm5ldGVzLmlvL2luc3RhbmNlIjoibWV0cmljcy1yZWFkZXIiLCJhcHAua3ViZXJuZXRlcy5pby9tYW5hZ2VkLWJ5Ijoia3VzdG9taXplIiwiYXBwLmt1YmVybmV0ZXMuaW8vbmFtZSI6ImNsdXN0ZXJyb2xlIiwiYXBwLmt1YmVybmV0ZXMuaW8vcGFydC1vZiI6ImNlcnQtbWFuYWdlci1vcGVyYXRvciJ9LCJuYW1lIjoiY2VydC1tYW5hZ2VyLW9wZXJhdG9yLW1ldHJpY3MtcmVhZGVyIn0sInJ1bGVzIjpbeyJub25SZXNvdXJjZVVSTHMiOlsiL21ldHJpY3MiXSwidmVyYnMiOlsiZ2V0Il19XX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwLmt1YmVybmV0ZXMuaW8vY3JlYXRlZC1ieSI6ImNlcnQtbWFuYWdlci1vcGVyYXRvciIsImFwcC5rdWJlcm5ldGVzLmlvL2luc3RhbmNlIjoiY29udHJvbGxlci1tYW5hZ2VyLW1ldHJpY3Mtc2VydmljZSIsImFwcC5rdWJlcm5ldGVzLmlvL21hbmFnZWQtYnkiOiJrdXN0b21pemUiLCJhcHAua3ViZXJuZXRlcy5pby9uYW1lIjoic2VydmljZSIsImFwcC5rdWJlcm5ldGVzLmlvL3BhcnQtb2YiOiJjZXJ0LW1hbmFnZXItb3BlcmF0b3IiLCJjb250cm9sLXBsYW5lIjoiY29udHJvbGxlci1tYW5hZ2VyIn0sIm5hbWUiOiJjZXJ0LW1hbmFnZXItb3BlcmF0b3ItY29udHJvbGxlci1tYW5hZ2VyLW1ldHJpY3Mtc2VydmljZSJ9LCJzcGVjIjp7InBvcnRzIjpbeyJuYW1lIjoiaHR0cHMiLCJwb3J0Ijo4NDQzLCJwcm90b2NvbCI6IlRDUCIsInRhcmdldFBvcnQiOiJodHRwcyJ9XSwic2VsZWN0b3IiOnsiY29udHJvbC1wbGFuZSI6ImNvbnRyb2xsZXItbWFuYWdlciJ9fSwic3RhdHVzIjp7ImxvYWRCYWxhbmNlciI6e319fQ==
relatedImages:
- image: registry.redhat.io/cert-manager/cert-manager-istio-csr-rhel9@sha256:9ea2c29a384b964cef14f853278821df3cd30320f25afab8823897192f67fc7e
  name: cert-manager-istiocsr
- image: registry.stage.redhat.io/cert-manager/cert-manager-operator-bundle@sha256:e6277b0aa2ddc7d5d6f68d8c7844c5e69e3003544d942c39cfb0c8e92e64cf48
  name: ""
- image: registry.stage.redhat.io/cert-manager/cert-manager-operator-rhel9@sha256:4d5e238300ce6f427a1045d51d6b37a4e5c5633985208ebb44f91e7dd53897d9
  name: ""
- image: registry.stage.redhat.io/cert-manager/jetstack-cert-manager-acmesolver-rhel9@sha256:4f7c045819c39e176a6090efdaba6ec736edf772d88fc87dd1c6fb33d3b5b26b
  name: cert-manager-acmesolver
- image: registry.stage.redhat.io/cert-manager/jetstack-cert-manager-rhel9@sha256:96d51e3a64bf30cbd92836c7cbd82f06edca16eef78ab1432757d34c16628659
  name: cert-manager-webhook
- image: registry.stage.redhat.io/cert-manager/jetstack-cert-manager-rhel9@sha256:96d51e3a64bf30cbd92836c7cbd82f06edca16eef78ab1432757d34c16628659
  name: cert-manager-ca-injector
- image: registry.stage.redhat.io/cert-manager/jetstack-cert-manager-rhel9@sha256:96d51e3a64bf30cbd92836c7cbd82f06edca16eef78ab1432757d34c16628659
  name: cert-manager-controller
schema: olm.bundle
